// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum EstadoTrabajador {
  TRABAJANDO
  FUERA
  DESACTIVO
}

enum EstadoObra {
  ACTIVO
  CERRADO
}

enum EstadoPedido {
  ABIERTO
  PROCESO
  CERRADO
}

enum EstadoHerramientas {
  NUEVO
  USADO
  VIEJO
  DAÃ‘ADO
}

enum EstadoTarea {
  ABIERTA
  PROCESO
  CERRADA
}

enum DiasSemana {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO
}

enum EstadoEliminado {
  ACTIVO
  ELIMINADO
}

enum CategoriasPermiso {
  Compra
  Venta
  Devolucion
  Inventario
  Pedido
  Obra
  Cliente
  Empleado
  Mensaje
  Posicion
  Proveedor
  Tarea
  Ubicacion
  Proforma
}

enum CategoriasInventario {
  Inventario
  Herramienta
}

enum CategoriaMensajes {
  Sistema
  Personal
  Credito
}

enum EstadoMensaje {
  RECIBIDO
  ABIERTO
}

model Punto {
  id              Int             @id @default(autoincrement())
  lat             Decimal
  lng             Decimal
  estadoEliminado EstadoEliminado @default(ACTIVO)

  ubicacion Ubicacion[]
  proforma  Proforma[]
  obra      Obra[]
  empleado  ubicacion_empleado[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?

  @@unique([lat, lng])
}

model Ubicacion {
  id              Int             @id @default(autoincrement())
  nombre          String
  descripcion     String
  id_punto        Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  punto      Punto        @relation(fields: [id_punto], references: [id])
  inventario Inventario[]
  tarea      Tarea[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Categoria {
  id              Int                  @id @default(autoincrement())
  nombre          String
  codigo          String               @unique
  descripcion     String
  tipo            CategoriasInventario
  tipo_unidad     String
  venta           Boolean
  tiempo          DateTime?
  estadoEliminado EstadoEliminado      @default(ACTIVO)
  inventario      Inventario[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Persona {
  id              Int             @id @default(autoincrement())
  nombre          String
  ruc             String          @unique
  mail            String          @unique
  telefono        String
  proveedor       Boolean
  estadoEliminado EstadoEliminado @default(ACTIVO)

  inventario  Inventario[]
  proforma    Proforma[]
  obra        Obra[]
  transaccion Transaccion[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Inventario {
  id              Int                 @id @default(autoincrement())
  precio          Decimal
  descuento       Decimal             @default(0)
  cantidad        Float?
  id_categoria    Int
  id_ubicacion    Int
  id_proveedor    Int
  estadoEliminado EstadoEliminado     @default(ACTIVO)
  estado          EstadoHerramientas?

  categoria            Categoria               @relation(fields: [id_categoria], references: [id])
  ubicacion            Ubicacion               @relation(fields: [id_ubicacion], references: [id])
  proveedor            Persona                 @relation(fields: [id_proveedor], references: [id])
  transaccion          transaccion_elementos[]
  pedido               pedido_elementos[]
  obra_herramientas    obra_herramientas[]
  obra_inventario      obra_inventario[]
  proforma_herramienta proforma_herramientas[]
  proforma_inventario  proforma_inventario[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Permiso {
  id              Int               @id @default(autoincrement())
  nombre          String            @unique
  estadoEliminado EstadoEliminado   @default(ACTIVO)
  categoria       CategoriasPermiso

  posiciones Posicion[] @relation("posicion_permiso")

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Posicion {
  id              Int             @id @default(autoincrement())
  nombre          String          @unique
  estadoEliminado EstadoEliminado @default(ACTIVO)

  permisos Permiso[]  @relation("posicion_permiso")
  empleado Empleado[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Empleado {
  id              Int              @id @default(autoincrement())
  nombre          String
  cedula          String           @unique
  mail            String           @unique
  telefono        String
  sueldo          Decimal
  password        String
  latActual       Decimal?
  lngActual       Decimal?
  fecha_inicio    DateTime         @default(now())
  id_posicion     Int
  estado          EstadoTrabajador
  estadoEliminado EstadoEliminado  @default(ACTIVO)

  posicion Posicion @relation(fields: [id_posicion], references: [id])

  transaccion       Transaccion[]
  pedido            pedido_elementos[]
  obra              obra_empleados[]
  proforma          proforma_empleados[]
  ubicacion         ubicacion_empleado[]
  mensajesEnviados  Mensaje[]            @relation("MensajeRemitente")
  mensajesRecibidos Mensaje[]            @relation("MensajeDestinatario")
  tareasAsignadas   Tarea[]              @relation("AsignadorRelacion")
  tareasRecibidas   Tarea[]              @relation("AsignadoRelacion")

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Mensaje {
  id              Int               @id @default(autoincrement())
  texto           String
  titulo          String
  fecha           DateTime          @default(now())
  tipo            CategoriaMensajes @default(Sistema)
  estadoEliminado EstadoEliminado   @default(ACTIVO)
  estado          EstadoMensaje     @default(RECIBIDO)

  id_remitente  Int @default(1)
  id_destinario Int @default(1)

  remitente    Empleado @relation("MensajeRemitente", fields: [id_remitente], references: [id])
  destinatario Empleado @relation("MensajeDestinatario", fields: [id_destinario], references: [id])

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Proforma {
  id               Int             @id @default(autoincrement())
  nombre           String
  tiempo_esperado  DateTime
  porcentaje_venta Decimal
  id_punto         Int
  id_cliente       Int
  estadoEliminado  EstadoEliminado @default(ACTIVO)

  punto        Punto                   @relation(fields: [id_punto], references: [id])
  cliente      Persona                 @relation(fields: [id_cliente], references: [id])
  obra         Obra?
  empleados    proforma_empleados[]
  herramientas proforma_herramientas[]
  inventario   proforma_inventario[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model proforma_empleados {
  id              Int             @id @default(autoincrement())
  horas           Int
  sueldo          Float
  id_proforma     Int
  id_empleado     Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  proforma Proforma @relation(fields: [id_proforma], references: [id])
  empleado Empleado @relation(fields: [id_empleado], references: [id])
}

model proforma_herramientas {
  id              Int             @id @default(autoincrement())
  horas           Int
  descuento       Float
  precio          Float
  id_proforma     Int
  id_herramienta  Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  proforma    Proforma   @relation(fields: [id_proforma], references: [id])
  herramienta Inventario @relation(fields: [id_herramienta], references: [id])
}

model proforma_inventario {
  id              Int             @id @default(autoincrement())
  cantidad        Float
  descuento       Float
  precio          Float
  id_proforma     Int
  id_elemento     Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  proforma Proforma   @relation(fields: [id_proforma], references: [id])
  elemento Inventario @relation(fields: [id_elemento], references: [id])
}

model Obra {
  id               Int             @id @default(autoincrement())
  nombre           String
  tiempo_esperado  DateTime
  porcentaje_venta Decimal
  id_punto         Int
  id_cliente       Int
  id_proforma      Int             @unique
  estado           EstadoObra      @default(ACTIVO)
  estadoEliminado  EstadoEliminado @default(ACTIVO)

  punto        Punto               @relation(fields: [id_punto], references: [id])
  cliente      Persona             @relation(fields: [id_cliente], references: [id])
  proforma     Proforma            @relation(fields: [id_proforma], references: [id])
  herramientas obra_herramientas[]
  inventario   obra_inventario[]
  empleado     obra_empleados[]
  transaccion  Transaccion[]
  pedido       Pedido[]
  tarea        Tarea[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Transaccion {
  id              Int             @id @default(autoincrement())
  fecha           DateTime        @default(now())
  id_empleado     Int
  id_persona      Int?
  id_obra         Int?
  estadoEliminado EstadoEliminado @default(ACTIVO)

  empleado   Empleado                @relation(fields: [id_empleado], references: [id])
  persona    Persona?                @relation(fields: [id_persona], references: [id])
  obra       Obra?                   @relation(fields: [id_obra], references: [id])
  elementos  transaccion_elementos[]
  pedido     Pedido[]
  compra     Compra?
  venta      Venta?
  devolucion Devolucion?

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model transaccion_elementos {
  id_transaccion  Int
  id_elementos    Int
  cantidad        Float
  estadoEliminado EstadoEliminado @default(ACTIVO)

  transaccion Transaccion @relation(fields: [id_transaccion], references: [id])
  elemento    Inventario  @relation(fields: [id_elementos], references: [id])

  @@id([id_transaccion, id_elementos])
}

model Compra {
  id              Int             @id @default(autoincrement())
  codigo          String
  id_transaccion  Int             @unique
  estadoEliminado EstadoEliminado @default(ACTIVO)

  transaccion Transaccion @relation(fields: [id_transaccion], references: [id])
}

model Venta {
  id              Int             @id @default(autoincrement())
  codigo          String
  porcentaje      Decimal
  id_transaccion  Int             @unique
  estadoEliminado EstadoEliminado @default(ACTIVO)

  transaccion Transaccion @relation(fields: [id_transaccion], references: [id])
}

model Devolucion {
  id              Int             @id @default(autoincrement())
  codigo          String
  id_transaccion  Int             @unique
  estadoEliminado EstadoEliminado @default(ACTIVO)

  transaccion Transaccion @relation(fields: [id_transaccion], references: [id])
}

model Horario {
  id              Int             @id @default(autoincrement())
  hora_inicio     DateTime
  hora_final      DateTime
  estadoEliminado EstadoEliminado @default(ACTIVO)

  dias             Dia[]               @relation("horario_dia")
  obra_empleado    obra_empleados[]    @relation("horario_obra_empleado")
  obra_herramienta obra_herramientas[] @relation("horario_obra_herramienta")
}

model Dia {
  id              Int             @id @default(autoincrement())
  nombre          DiasSemana
  estadoEliminado EstadoEliminado @default(ACTIVO)

  horarios Horario[] @relation("horario_dia")
}

model obra_empleados {
  id              Int             @id @default(autoincrement())
  horas           Int
  sueldo          Float
  id_obra         Int
  id_empleado     Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  obra     Obra      @relation(fields: [id_obra], references: [id])
  empleado Empleado  @relation(fields: [id_empleado], references: [id])
  horarios Horario[] @relation("horario_obra_empleado")
}

model obra_inventario {
  id              Int             @id @default(autoincrement())
  horas           Int
  descuento       Float
  precio          Float
  id_obra         Int
  id_inventario   Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  obra       Obra       @relation(fields: [id_obra], references: [id])
  inventario Inventario @relation(fields: [id_inventario], references: [id])
}

model obra_herramientas {
  id              Int             @id @default(autoincrement())
  horas           Int
  descuento       Float
  precio          Float
  id_obra         Int
  id_herramienta  Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  obra        Obra       @relation(fields: [id_obra], references: [id])
  herramienta Inventario @relation(fields: [id_herramienta], references: [id])
  horarios    Horario[]  @relation("horario_obra_herramienta")
}

model Pedido {
  id              Int             @id @default(autoincrement())
  id_obra         Int
  id_transaccion  Int
  estadoEliminado EstadoEliminado @default(ACTIVO)

  obra        Obra               @relation(fields: [id_obra], references: [id])
  transaccion Transaccion        @relation(fields: [id_transaccion], references: [id])
  elemento    pedido_elementos[]

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model Tarea {
  id           Int         @id @default(autoincrement())
  nombre       String
  descripcion  String
  estado       EstadoTarea @default(ABIERTA)
  id_asignador Int
  id_asignado  Int?
  id_ubicacion Int?
  id_obra      Int?
  fecha_final  DateTime
  fecha_inicio DateTime    @default(now())

  asignador Empleado   @relation("AsignadorRelacion", fields: [id_asignador], references: [id])
  asignado  Empleado?  @relation("AsignadoRelacion", fields: [id_asignado], references: [id])
  ubicacion Ubicacion? @relation(fields: [id_ubicacion], references: [id])
  obra      Obra?      @relation(fields: [id_obra], references: [id])

  createdBy   Int
  updatedBy   Int?
  deletedBy   Int?
  createdDate DateTime  @default(now())
  updatedDate DateTime  @updatedAt
  deletedDate DateTime?
}

model pedido_elementos {
  id_pedido       Int
  id_elemento     Int
  id_empleado     Int
  estado          EstadoPedido
  estadoEliminado EstadoEliminado @default(ACTIVO)

  pedido   Pedido     @relation(fields: [id_pedido], references: [id])
  elemento Inventario @relation(fields: [id_elemento], references: [id])
  empleado Empleado   @relation(fields: [id_empleado], references: [id])

  @@id([id_pedido, id_elemento])
}

model ubicacion_empleado {
  id              Int              @id @default(autoincrement())
  id_punto        Int
  id_empleado     Int
  estado          EstadoTrabajador
  fecha           DateTime         @default(now())
  estadoEliminado EstadoEliminado  @default(ACTIVO)

  punto    Punto    @relation(fields: [id_punto], references: [id])
  empleado Empleado @relation(fields: [id_empleado], references: [id])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
