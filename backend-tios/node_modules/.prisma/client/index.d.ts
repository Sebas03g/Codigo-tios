
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Punto
 * 
 */
export type Punto = $Result.DefaultSelection<Prisma.$PuntoPayload>
/**
 * Model Ubicacion
 * 
 */
export type Ubicacion = $Result.DefaultSelection<Prisma.$UbicacionPayload>
/**
 * Model Categoria
 * 
 */
export type Categoria = $Result.DefaultSelection<Prisma.$CategoriaPayload>
/**
 * Model Persona
 * 
 */
export type Persona = $Result.DefaultSelection<Prisma.$PersonaPayload>
/**
 * Model Inventario
 * 
 */
export type Inventario = $Result.DefaultSelection<Prisma.$InventarioPayload>
/**
 * Model Permiso
 * 
 */
export type Permiso = $Result.DefaultSelection<Prisma.$PermisoPayload>
/**
 * Model Posicion
 * 
 */
export type Posicion = $Result.DefaultSelection<Prisma.$PosicionPayload>
/**
 * Model Empleado
 * 
 */
export type Empleado = $Result.DefaultSelection<Prisma.$EmpleadoPayload>
/**
 * Model Mensaje
 * 
 */
export type Mensaje = $Result.DefaultSelection<Prisma.$MensajePayload>
/**
 * Model Proforma
 * 
 */
export type Proforma = $Result.DefaultSelection<Prisma.$ProformaPayload>
/**
 * Model Proceso
 * 
 */
export type Proceso = $Result.DefaultSelection<Prisma.$ProcesoPayload>
/**
 * Model proceso_empleados
 * 
 */
export type proceso_empleados = $Result.DefaultSelection<Prisma.$proceso_empleadosPayload>
/**
 * Model proceso_herramientas
 * 
 */
export type proceso_herramientas = $Result.DefaultSelection<Prisma.$proceso_herramientasPayload>
/**
 * Model proceso_inventario
 * 
 */
export type proceso_inventario = $Result.DefaultSelection<Prisma.$proceso_inventarioPayload>
/**
 * Model Obra
 * 
 */
export type Obra = $Result.DefaultSelection<Prisma.$ObraPayload>
/**
 * Model Transaccion
 * 
 */
export type Transaccion = $Result.DefaultSelection<Prisma.$TransaccionPayload>
/**
 * Model transaccion_elementos
 * 
 */
export type transaccion_elementos = $Result.DefaultSelection<Prisma.$transaccion_elementosPayload>
/**
 * Model Compra
 * 
 */
export type Compra = $Result.DefaultSelection<Prisma.$CompraPayload>
/**
 * Model Venta
 * 
 */
export type Venta = $Result.DefaultSelection<Prisma.$VentaPayload>
/**
 * Model Devolucion
 * 
 */
export type Devolucion = $Result.DefaultSelection<Prisma.$DevolucionPayload>
/**
 * Model Horario
 * 
 */
export type Horario = $Result.DefaultSelection<Prisma.$HorarioPayload>
/**
 * Model Dia
 * 
 */
export type Dia = $Result.DefaultSelection<Prisma.$DiaPayload>
/**
 * Model Pedido
 * 
 */
export type Pedido = $Result.DefaultSelection<Prisma.$PedidoPayload>
/**
 * Model Tarea
 * 
 */
export type Tarea = $Result.DefaultSelection<Prisma.$TareaPayload>
/**
 * Model pedido_elementos
 * 
 */
export type pedido_elementos = $Result.DefaultSelection<Prisma.$pedido_elementosPayload>
/**
 * Model ubicacion_empleado
 * 
 */
export type ubicacion_empleado = $Result.DefaultSelection<Prisma.$ubicacion_empleadoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const EstadoTrabajador: {
  TRABAJANDO: 'TRABAJANDO',
  FUERA: 'FUERA',
  DESACTIVO: 'DESACTIVO'
};

export type EstadoTrabajador = (typeof EstadoTrabajador)[keyof typeof EstadoTrabajador]


export const EstadoObra: {
  ACTIVO: 'ACTIVO',
  CERRADO: 'CERRADO'
};

export type EstadoObra = (typeof EstadoObra)[keyof typeof EstadoObra]


export const EstadoPedido: {
  ABIERTO: 'ABIERTO',
  PROCESO: 'PROCESO',
  CERRADO: 'CERRADO'
};

export type EstadoPedido = (typeof EstadoPedido)[keyof typeof EstadoPedido]


export const EstadoHerramientas: {
  NUEVO: 'NUEVO',
  USADO: 'USADO',
  VIEJO: 'VIEJO',
  DAÑADO: 'DAÑADO'
};

export type EstadoHerramientas = (typeof EstadoHerramientas)[keyof typeof EstadoHerramientas]


export const EstadoTarea: {
  ABIERTA: 'ABIERTA',
  PROCESO: 'PROCESO',
  CERRADA: 'CERRADA'
};

export type EstadoTarea = (typeof EstadoTarea)[keyof typeof EstadoTarea]


export const DiasSemana: {
  LUNES: 'LUNES',
  MARTES: 'MARTES',
  MIERCOLES: 'MIERCOLES',
  JUEVES: 'JUEVES',
  VIERNES: 'VIERNES',
  SABADO: 'SABADO',
  DOMINGO: 'DOMINGO'
};

export type DiasSemana = (typeof DiasSemana)[keyof typeof DiasSemana]


export const EstadoEliminado: {
  ACTIVO: 'ACTIVO',
  ELIMINADO: 'ELIMINADO'
};

export type EstadoEliminado = (typeof EstadoEliminado)[keyof typeof EstadoEliminado]


export const CategoriasPermiso: {
  Compra: 'Compra',
  Venta: 'Venta',
  Devolucion: 'Devolucion',
  Inventario: 'Inventario',
  Pedido: 'Pedido',
  Obra: 'Obra',
  Cliente: 'Cliente',
  Empleado: 'Empleado',
  Mensaje: 'Mensaje',
  Posicion: 'Posicion',
  Proveedor: 'Proveedor',
  Tarea: 'Tarea',
  Ubicacion: 'Ubicacion',
  Proforma: 'Proforma'
};

export type CategoriasPermiso = (typeof CategoriasPermiso)[keyof typeof CategoriasPermiso]


export const CategoriasInventario: {
  Inventario: 'Inventario',
  Herramienta: 'Herramienta'
};

export type CategoriasInventario = (typeof CategoriasInventario)[keyof typeof CategoriasInventario]


export const CategoriaMensajes: {
  Sistema: 'Sistema',
  Personal: 'Personal',
  Credito: 'Credito'
};

export type CategoriaMensajes = (typeof CategoriaMensajes)[keyof typeof CategoriaMensajes]


export const EstadoMensaje: {
  RECIBIDO: 'RECIBIDO',
  ABIERTO: 'ABIERTO'
};

export type EstadoMensaje = (typeof EstadoMensaje)[keyof typeof EstadoMensaje]

}

export type EstadoTrabajador = $Enums.EstadoTrabajador

export const EstadoTrabajador: typeof $Enums.EstadoTrabajador

export type EstadoObra = $Enums.EstadoObra

export const EstadoObra: typeof $Enums.EstadoObra

export type EstadoPedido = $Enums.EstadoPedido

export const EstadoPedido: typeof $Enums.EstadoPedido

export type EstadoHerramientas = $Enums.EstadoHerramientas

export const EstadoHerramientas: typeof $Enums.EstadoHerramientas

export type EstadoTarea = $Enums.EstadoTarea

export const EstadoTarea: typeof $Enums.EstadoTarea

export type DiasSemana = $Enums.DiasSemana

export const DiasSemana: typeof $Enums.DiasSemana

export type EstadoEliminado = $Enums.EstadoEliminado

export const EstadoEliminado: typeof $Enums.EstadoEliminado

export type CategoriasPermiso = $Enums.CategoriasPermiso

export const CategoriasPermiso: typeof $Enums.CategoriasPermiso

export type CategoriasInventario = $Enums.CategoriasInventario

export const CategoriasInventario: typeof $Enums.CategoriasInventario

export type CategoriaMensajes = $Enums.CategoriaMensajes

export const CategoriaMensajes: typeof $Enums.CategoriaMensajes

export type EstadoMensaje = $Enums.EstadoMensaje

export const EstadoMensaje: typeof $Enums.EstadoMensaje

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Puntos
 * const puntos = await prisma.punto.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Puntos
   * const puntos = await prisma.punto.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.punto`: Exposes CRUD operations for the **Punto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Puntos
    * const puntos = await prisma.punto.findMany()
    * ```
    */
  get punto(): Prisma.PuntoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ubicacion`: Exposes CRUD operations for the **Ubicacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ubicacions
    * const ubicacions = await prisma.ubicacion.findMany()
    * ```
    */
  get ubicacion(): Prisma.UbicacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **Categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.CategoriaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.persona`: Exposes CRUD operations for the **Persona** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Personas
    * const personas = await prisma.persona.findMany()
    * ```
    */
  get persona(): Prisma.PersonaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventario`: Exposes CRUD operations for the **Inventario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inventarios
    * const inventarios = await prisma.inventario.findMany()
    * ```
    */
  get inventario(): Prisma.InventarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permiso`: Exposes CRUD operations for the **Permiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permiso.findMany()
    * ```
    */
  get permiso(): Prisma.PermisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.posicion`: Exposes CRUD operations for the **Posicion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posicions
    * const posicions = await prisma.posicion.findMany()
    * ```
    */
  get posicion(): Prisma.PosicionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.empleado`: Exposes CRUD operations for the **Empleado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empleados
    * const empleados = await prisma.empleado.findMany()
    * ```
    */
  get empleado(): Prisma.EmpleadoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mensaje`: Exposes CRUD operations for the **Mensaje** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mensajes
    * const mensajes = await prisma.mensaje.findMany()
    * ```
    */
  get mensaje(): Prisma.MensajeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proforma`: Exposes CRUD operations for the **Proforma** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proformas
    * const proformas = await prisma.proforma.findMany()
    * ```
    */
  get proforma(): Prisma.ProformaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proceso`: Exposes CRUD operations for the **Proceso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Procesos
    * const procesos = await prisma.proceso.findMany()
    * ```
    */
  get proceso(): Prisma.ProcesoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proceso_empleados`: Exposes CRUD operations for the **proceso_empleados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proceso_empleados
    * const proceso_empleados = await prisma.proceso_empleados.findMany()
    * ```
    */
  get proceso_empleados(): Prisma.proceso_empleadosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proceso_herramientas`: Exposes CRUD operations for the **proceso_herramientas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proceso_herramientas
    * const proceso_herramientas = await prisma.proceso_herramientas.findMany()
    * ```
    */
  get proceso_herramientas(): Prisma.proceso_herramientasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proceso_inventario`: Exposes CRUD operations for the **proceso_inventario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proceso_inventarios
    * const proceso_inventarios = await prisma.proceso_inventario.findMany()
    * ```
    */
  get proceso_inventario(): Prisma.proceso_inventarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.obra`: Exposes CRUD operations for the **Obra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Obras
    * const obras = await prisma.obra.findMany()
    * ```
    */
  get obra(): Prisma.ObraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaccion`: Exposes CRUD operations for the **Transaccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaccions
    * const transaccions = await prisma.transaccion.findMany()
    * ```
    */
  get transaccion(): Prisma.TransaccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaccion_elementos`: Exposes CRUD operations for the **transaccion_elementos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaccion_elementos
    * const transaccion_elementos = await prisma.transaccion_elementos.findMany()
    * ```
    */
  get transaccion_elementos(): Prisma.transaccion_elementosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.compra`: Exposes CRUD operations for the **Compra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compras
    * const compras = await prisma.compra.findMany()
    * ```
    */
  get compra(): Prisma.CompraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **Venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.VentaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.devolucion`: Exposes CRUD operations for the **Devolucion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Devolucions
    * const devolucions = await prisma.devolucion.findMany()
    * ```
    */
  get devolucion(): Prisma.DevolucionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.horario`: Exposes CRUD operations for the **Horario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Horarios
    * const horarios = await prisma.horario.findMany()
    * ```
    */
  get horario(): Prisma.HorarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dia`: Exposes CRUD operations for the **Dia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dias
    * const dias = await prisma.dia.findMany()
    * ```
    */
  get dia(): Prisma.DiaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido`: Exposes CRUD operations for the **Pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedidos
    * const pedidos = await prisma.pedido.findMany()
    * ```
    */
  get pedido(): Prisma.PedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tarea`: Exposes CRUD operations for the **Tarea** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tareas
    * const tareas = await prisma.tarea.findMany()
    * ```
    */
  get tarea(): Prisma.TareaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido_elementos`: Exposes CRUD operations for the **pedido_elementos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedido_elementos
    * const pedido_elementos = await prisma.pedido_elementos.findMany()
    * ```
    */
  get pedido_elementos(): Prisma.pedido_elementosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ubicacion_empleado`: Exposes CRUD operations for the **ubicacion_empleado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ubicacion_empleados
    * const ubicacion_empleados = await prisma.ubicacion_empleado.findMany()
    * ```
    */
  get ubicacion_empleado(): Prisma.ubicacion_empleadoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Punto: 'Punto',
    Ubicacion: 'Ubicacion',
    Categoria: 'Categoria',
    Persona: 'Persona',
    Inventario: 'Inventario',
    Permiso: 'Permiso',
    Posicion: 'Posicion',
    Empleado: 'Empleado',
    Mensaje: 'Mensaje',
    Proforma: 'Proforma',
    Proceso: 'Proceso',
    proceso_empleados: 'proceso_empleados',
    proceso_herramientas: 'proceso_herramientas',
    proceso_inventario: 'proceso_inventario',
    Obra: 'Obra',
    Transaccion: 'Transaccion',
    transaccion_elementos: 'transaccion_elementos',
    Compra: 'Compra',
    Venta: 'Venta',
    Devolucion: 'Devolucion',
    Horario: 'Horario',
    Dia: 'Dia',
    Pedido: 'Pedido',
    Tarea: 'Tarea',
    pedido_elementos: 'pedido_elementos',
    ubicacion_empleado: 'ubicacion_empleado'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "punto" | "ubicacion" | "categoria" | "persona" | "inventario" | "permiso" | "posicion" | "empleado" | "mensaje" | "proforma" | "proceso" | "proceso_empleados" | "proceso_herramientas" | "proceso_inventario" | "obra" | "transaccion" | "transaccion_elementos" | "compra" | "venta" | "devolucion" | "horario" | "dia" | "pedido" | "tarea" | "pedido_elementos" | "ubicacion_empleado"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Punto: {
        payload: Prisma.$PuntoPayload<ExtArgs>
        fields: Prisma.PuntoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PuntoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PuntoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>
          }
          findFirst: {
            args: Prisma.PuntoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PuntoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>
          }
          findMany: {
            args: Prisma.PuntoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>[]
          }
          create: {
            args: Prisma.PuntoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>
          }
          createMany: {
            args: Prisma.PuntoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PuntoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>[]
          }
          delete: {
            args: Prisma.PuntoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>
          }
          update: {
            args: Prisma.PuntoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>
          }
          deleteMany: {
            args: Prisma.PuntoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PuntoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PuntoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>[]
          }
          upsert: {
            args: Prisma.PuntoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntoPayload>
          }
          aggregate: {
            args: Prisma.PuntoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePunto>
          }
          groupBy: {
            args: Prisma.PuntoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PuntoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PuntoCountArgs<ExtArgs>
            result: $Utils.Optional<PuntoCountAggregateOutputType> | number
          }
        }
      }
      Ubicacion: {
        payload: Prisma.$UbicacionPayload<ExtArgs>
        fields: Prisma.UbicacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UbicacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UbicacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          findFirst: {
            args: Prisma.UbicacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UbicacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          findMany: {
            args: Prisma.UbicacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>[]
          }
          create: {
            args: Prisma.UbicacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          createMany: {
            args: Prisma.UbicacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UbicacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>[]
          }
          delete: {
            args: Prisma.UbicacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          update: {
            args: Prisma.UbicacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          deleteMany: {
            args: Prisma.UbicacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UbicacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UbicacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>[]
          }
          upsert: {
            args: Prisma.UbicacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          aggregate: {
            args: Prisma.UbicacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUbicacion>
          }
          groupBy: {
            args: Prisma.UbicacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UbicacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UbicacionCountArgs<ExtArgs>
            result: $Utils.Optional<UbicacionCountAggregateOutputType> | number
          }
        }
      }
      Categoria: {
        payload: Prisma.$CategoriaPayload<ExtArgs>
        fields: Prisma.CategoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findMany: {
            args: Prisma.CategoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          create: {
            args: Prisma.CategoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          createMany: {
            args: Prisma.CategoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          update: {
            args: Prisma.CategoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.CategoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      Persona: {
        payload: Prisma.$PersonaPayload<ExtArgs>
        fields: Prisma.PersonaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PersonaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PersonaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          findFirst: {
            args: Prisma.PersonaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PersonaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          findMany: {
            args: Prisma.PersonaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>[]
          }
          create: {
            args: Prisma.PersonaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          createMany: {
            args: Prisma.PersonaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PersonaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>[]
          }
          delete: {
            args: Prisma.PersonaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          update: {
            args: Prisma.PersonaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          deleteMany: {
            args: Prisma.PersonaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PersonaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PersonaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>[]
          }
          upsert: {
            args: Prisma.PersonaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          aggregate: {
            args: Prisma.PersonaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePersona>
          }
          groupBy: {
            args: Prisma.PersonaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PersonaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PersonaCountArgs<ExtArgs>
            result: $Utils.Optional<PersonaCountAggregateOutputType> | number
          }
        }
      }
      Inventario: {
        payload: Prisma.$InventarioPayload<ExtArgs>
        fields: Prisma.InventarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          findFirst: {
            args: Prisma.InventarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          findMany: {
            args: Prisma.InventarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          create: {
            args: Prisma.InventarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          createMany: {
            args: Prisma.InventarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          delete: {
            args: Prisma.InventarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          update: {
            args: Prisma.InventarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          deleteMany: {
            args: Prisma.InventarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          upsert: {
            args: Prisma.InventarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          aggregate: {
            args: Prisma.InventarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventario>
          }
          groupBy: {
            args: Prisma.InventarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventarioCountArgs<ExtArgs>
            result: $Utils.Optional<InventarioCountAggregateOutputType> | number
          }
        }
      }
      Permiso: {
        payload: Prisma.$PermisoPayload<ExtArgs>
        fields: Prisma.PermisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findFirst: {
            args: Prisma.PermisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findMany: {
            args: Prisma.PermisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          create: {
            args: Prisma.PermisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          createMany: {
            args: Prisma.PermisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          delete: {
            args: Prisma.PermisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          update: {
            args: Prisma.PermisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          deleteMany: {
            args: Prisma.PermisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          upsert: {
            args: Prisma.PermisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          aggregate: {
            args: Prisma.PermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermiso>
          }
          groupBy: {
            args: Prisma.PermisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoCountAggregateOutputType> | number
          }
        }
      }
      Posicion: {
        payload: Prisma.$PosicionPayload<ExtArgs>
        fields: Prisma.PosicionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PosicionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PosicionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>
          }
          findFirst: {
            args: Prisma.PosicionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PosicionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>
          }
          findMany: {
            args: Prisma.PosicionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>[]
          }
          create: {
            args: Prisma.PosicionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>
          }
          createMany: {
            args: Prisma.PosicionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PosicionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>[]
          }
          delete: {
            args: Prisma.PosicionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>
          }
          update: {
            args: Prisma.PosicionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>
          }
          deleteMany: {
            args: Prisma.PosicionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PosicionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PosicionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>[]
          }
          upsert: {
            args: Prisma.PosicionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PosicionPayload>
          }
          aggregate: {
            args: Prisma.PosicionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePosicion>
          }
          groupBy: {
            args: Prisma.PosicionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PosicionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PosicionCountArgs<ExtArgs>
            result: $Utils.Optional<PosicionCountAggregateOutputType> | number
          }
        }
      }
      Empleado: {
        payload: Prisma.$EmpleadoPayload<ExtArgs>
        fields: Prisma.EmpleadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmpleadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmpleadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>
          }
          findFirst: {
            args: Prisma.EmpleadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmpleadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>
          }
          findMany: {
            args: Prisma.EmpleadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>[]
          }
          create: {
            args: Prisma.EmpleadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>
          }
          createMany: {
            args: Prisma.EmpleadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmpleadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>[]
          }
          delete: {
            args: Prisma.EmpleadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>
          }
          update: {
            args: Prisma.EmpleadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>
          }
          deleteMany: {
            args: Prisma.EmpleadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmpleadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmpleadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>[]
          }
          upsert: {
            args: Prisma.EmpleadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpleadoPayload>
          }
          aggregate: {
            args: Prisma.EmpleadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpleado>
          }
          groupBy: {
            args: Prisma.EmpleadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpleadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmpleadoCountArgs<ExtArgs>
            result: $Utils.Optional<EmpleadoCountAggregateOutputType> | number
          }
        }
      }
      Mensaje: {
        payload: Prisma.$MensajePayload<ExtArgs>
        fields: Prisma.MensajeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MensajeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MensajeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          findFirst: {
            args: Prisma.MensajeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MensajeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          findMany: {
            args: Prisma.MensajeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>[]
          }
          create: {
            args: Prisma.MensajeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          createMany: {
            args: Prisma.MensajeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MensajeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>[]
          }
          delete: {
            args: Prisma.MensajeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          update: {
            args: Prisma.MensajeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          deleteMany: {
            args: Prisma.MensajeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MensajeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MensajeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>[]
          }
          upsert: {
            args: Prisma.MensajeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          aggregate: {
            args: Prisma.MensajeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMensaje>
          }
          groupBy: {
            args: Prisma.MensajeGroupByArgs<ExtArgs>
            result: $Utils.Optional<MensajeGroupByOutputType>[]
          }
          count: {
            args: Prisma.MensajeCountArgs<ExtArgs>
            result: $Utils.Optional<MensajeCountAggregateOutputType> | number
          }
        }
      }
      Proforma: {
        payload: Prisma.$ProformaPayload<ExtArgs>
        fields: Prisma.ProformaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProformaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProformaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>
          }
          findFirst: {
            args: Prisma.ProformaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProformaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>
          }
          findMany: {
            args: Prisma.ProformaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>[]
          }
          create: {
            args: Prisma.ProformaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>
          }
          createMany: {
            args: Prisma.ProformaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProformaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>[]
          }
          delete: {
            args: Prisma.ProformaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>
          }
          update: {
            args: Prisma.ProformaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>
          }
          deleteMany: {
            args: Prisma.ProformaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProformaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProformaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>[]
          }
          upsert: {
            args: Prisma.ProformaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProformaPayload>
          }
          aggregate: {
            args: Prisma.ProformaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProforma>
          }
          groupBy: {
            args: Prisma.ProformaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProformaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProformaCountArgs<ExtArgs>
            result: $Utils.Optional<ProformaCountAggregateOutputType> | number
          }
        }
      }
      Proceso: {
        payload: Prisma.$ProcesoPayload<ExtArgs>
        fields: Prisma.ProcesoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProcesoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProcesoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>
          }
          findFirst: {
            args: Prisma.ProcesoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProcesoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>
          }
          findMany: {
            args: Prisma.ProcesoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>[]
          }
          create: {
            args: Prisma.ProcesoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>
          }
          createMany: {
            args: Prisma.ProcesoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProcesoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>[]
          }
          delete: {
            args: Prisma.ProcesoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>
          }
          update: {
            args: Prisma.ProcesoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>
          }
          deleteMany: {
            args: Prisma.ProcesoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProcesoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProcesoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>[]
          }
          upsert: {
            args: Prisma.ProcesoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcesoPayload>
          }
          aggregate: {
            args: Prisma.ProcesoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProceso>
          }
          groupBy: {
            args: Prisma.ProcesoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProcesoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProcesoCountArgs<ExtArgs>
            result: $Utils.Optional<ProcesoCountAggregateOutputType> | number
          }
        }
      }
      proceso_empleados: {
        payload: Prisma.$proceso_empleadosPayload<ExtArgs>
        fields: Prisma.proceso_empleadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proceso_empleadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proceso_empleadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>
          }
          findFirst: {
            args: Prisma.proceso_empleadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proceso_empleadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>
          }
          findMany: {
            args: Prisma.proceso_empleadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>[]
          }
          create: {
            args: Prisma.proceso_empleadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>
          }
          createMany: {
            args: Prisma.proceso_empleadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proceso_empleadosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>[]
          }
          delete: {
            args: Prisma.proceso_empleadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>
          }
          update: {
            args: Prisma.proceso_empleadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>
          }
          deleteMany: {
            args: Prisma.proceso_empleadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proceso_empleadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proceso_empleadosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>[]
          }
          upsert: {
            args: Prisma.proceso_empleadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_empleadosPayload>
          }
          aggregate: {
            args: Prisma.Proceso_empleadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProceso_empleados>
          }
          groupBy: {
            args: Prisma.proceso_empleadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Proceso_empleadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.proceso_empleadosCountArgs<ExtArgs>
            result: $Utils.Optional<Proceso_empleadosCountAggregateOutputType> | number
          }
        }
      }
      proceso_herramientas: {
        payload: Prisma.$proceso_herramientasPayload<ExtArgs>
        fields: Prisma.proceso_herramientasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proceso_herramientasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proceso_herramientasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>
          }
          findFirst: {
            args: Prisma.proceso_herramientasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proceso_herramientasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>
          }
          findMany: {
            args: Prisma.proceso_herramientasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>[]
          }
          create: {
            args: Prisma.proceso_herramientasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>
          }
          createMany: {
            args: Prisma.proceso_herramientasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proceso_herramientasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>[]
          }
          delete: {
            args: Prisma.proceso_herramientasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>
          }
          update: {
            args: Prisma.proceso_herramientasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>
          }
          deleteMany: {
            args: Prisma.proceso_herramientasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proceso_herramientasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proceso_herramientasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>[]
          }
          upsert: {
            args: Prisma.proceso_herramientasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_herramientasPayload>
          }
          aggregate: {
            args: Prisma.Proceso_herramientasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProceso_herramientas>
          }
          groupBy: {
            args: Prisma.proceso_herramientasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Proceso_herramientasGroupByOutputType>[]
          }
          count: {
            args: Prisma.proceso_herramientasCountArgs<ExtArgs>
            result: $Utils.Optional<Proceso_herramientasCountAggregateOutputType> | number
          }
        }
      }
      proceso_inventario: {
        payload: Prisma.$proceso_inventarioPayload<ExtArgs>
        fields: Prisma.proceso_inventarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proceso_inventarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proceso_inventarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>
          }
          findFirst: {
            args: Prisma.proceso_inventarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proceso_inventarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>
          }
          findMany: {
            args: Prisma.proceso_inventarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>[]
          }
          create: {
            args: Prisma.proceso_inventarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>
          }
          createMany: {
            args: Prisma.proceso_inventarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proceso_inventarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>[]
          }
          delete: {
            args: Prisma.proceso_inventarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>
          }
          update: {
            args: Prisma.proceso_inventarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>
          }
          deleteMany: {
            args: Prisma.proceso_inventarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proceso_inventarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proceso_inventarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>[]
          }
          upsert: {
            args: Prisma.proceso_inventarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proceso_inventarioPayload>
          }
          aggregate: {
            args: Prisma.Proceso_inventarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProceso_inventario>
          }
          groupBy: {
            args: Prisma.proceso_inventarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Proceso_inventarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.proceso_inventarioCountArgs<ExtArgs>
            result: $Utils.Optional<Proceso_inventarioCountAggregateOutputType> | number
          }
        }
      }
      Obra: {
        payload: Prisma.$ObraPayload<ExtArgs>
        fields: Prisma.ObraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ObraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ObraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>
          }
          findFirst: {
            args: Prisma.ObraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ObraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>
          }
          findMany: {
            args: Prisma.ObraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>[]
          }
          create: {
            args: Prisma.ObraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>
          }
          createMany: {
            args: Prisma.ObraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ObraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>[]
          }
          delete: {
            args: Prisma.ObraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>
          }
          update: {
            args: Prisma.ObraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>
          }
          deleteMany: {
            args: Prisma.ObraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ObraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ObraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>[]
          }
          upsert: {
            args: Prisma.ObraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ObraPayload>
          }
          aggregate: {
            args: Prisma.ObraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateObra>
          }
          groupBy: {
            args: Prisma.ObraGroupByArgs<ExtArgs>
            result: $Utils.Optional<ObraGroupByOutputType>[]
          }
          count: {
            args: Prisma.ObraCountArgs<ExtArgs>
            result: $Utils.Optional<ObraCountAggregateOutputType> | number
          }
        }
      }
      Transaccion: {
        payload: Prisma.$TransaccionPayload<ExtArgs>
        fields: Prisma.TransaccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransaccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransaccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          findFirst: {
            args: Prisma.TransaccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransaccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          findMany: {
            args: Prisma.TransaccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>[]
          }
          create: {
            args: Prisma.TransaccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          createMany: {
            args: Prisma.TransaccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransaccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>[]
          }
          delete: {
            args: Prisma.TransaccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          update: {
            args: Prisma.TransaccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          deleteMany: {
            args: Prisma.TransaccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransaccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransaccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>[]
          }
          upsert: {
            args: Prisma.TransaccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionPayload>
          }
          aggregate: {
            args: Prisma.TransaccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaccion>
          }
          groupBy: {
            args: Prisma.TransaccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransaccionCountArgs<ExtArgs>
            result: $Utils.Optional<TransaccionCountAggregateOutputType> | number
          }
        }
      }
      transaccion_elementos: {
        payload: Prisma.$transaccion_elementosPayload<ExtArgs>
        fields: Prisma.transaccion_elementosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transaccion_elementosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transaccion_elementosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>
          }
          findFirst: {
            args: Prisma.transaccion_elementosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transaccion_elementosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>
          }
          findMany: {
            args: Prisma.transaccion_elementosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>[]
          }
          create: {
            args: Prisma.transaccion_elementosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>
          }
          createMany: {
            args: Prisma.transaccion_elementosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transaccion_elementosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>[]
          }
          delete: {
            args: Prisma.transaccion_elementosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>
          }
          update: {
            args: Prisma.transaccion_elementosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>
          }
          deleteMany: {
            args: Prisma.transaccion_elementosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transaccion_elementosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.transaccion_elementosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>[]
          }
          upsert: {
            args: Prisma.transaccion_elementosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccion_elementosPayload>
          }
          aggregate: {
            args: Prisma.Transaccion_elementosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaccion_elementos>
          }
          groupBy: {
            args: Prisma.transaccion_elementosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Transaccion_elementosGroupByOutputType>[]
          }
          count: {
            args: Prisma.transaccion_elementosCountArgs<ExtArgs>
            result: $Utils.Optional<Transaccion_elementosCountAggregateOutputType> | number
          }
        }
      }
      Compra: {
        payload: Prisma.$CompraPayload<ExtArgs>
        fields: Prisma.CompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          findFirst: {
            args: Prisma.CompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          findMany: {
            args: Prisma.CompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>[]
          }
          create: {
            args: Prisma.CompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          createMany: {
            args: Prisma.CompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>[]
          }
          delete: {
            args: Prisma.CompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          update: {
            args: Prisma.CompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          deleteMany: {
            args: Prisma.CompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CompraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>[]
          }
          upsert: {
            args: Prisma.CompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompraPayload>
          }
          aggregate: {
            args: Prisma.CompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompra>
          }
          groupBy: {
            args: Prisma.CompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompraCountArgs<ExtArgs>
            result: $Utils.Optional<CompraCountAggregateOutputType> | number
          }
        }
      }
      Venta: {
        payload: Prisma.$VentaPayload<ExtArgs>
        fields: Prisma.VentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findFirst: {
            args: Prisma.VentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findMany: {
            args: Prisma.VentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          create: {
            args: Prisma.VentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          createMany: {
            args: Prisma.VentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          delete: {
            args: Prisma.VentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          update: {
            args: Prisma.VentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          deleteMany: {
            args: Prisma.VentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VentaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          upsert: {
            args: Prisma.VentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.VentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
      Devolucion: {
        payload: Prisma.$DevolucionPayload<ExtArgs>
        fields: Prisma.DevolucionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevolucionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DevolucionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>
          }
          findFirst: {
            args: Prisma.DevolucionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DevolucionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>
          }
          findMany: {
            args: Prisma.DevolucionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>[]
          }
          create: {
            args: Prisma.DevolucionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>
          }
          createMany: {
            args: Prisma.DevolucionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DevolucionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>[]
          }
          delete: {
            args: Prisma.DevolucionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>
          }
          update: {
            args: Prisma.DevolucionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>
          }
          deleteMany: {
            args: Prisma.DevolucionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DevolucionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DevolucionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>[]
          }
          upsert: {
            args: Prisma.DevolucionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevolucionPayload>
          }
          aggregate: {
            args: Prisma.DevolucionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevolucion>
          }
          groupBy: {
            args: Prisma.DevolucionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevolucionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DevolucionCountArgs<ExtArgs>
            result: $Utils.Optional<DevolucionCountAggregateOutputType> | number
          }
        }
      }
      Horario: {
        payload: Prisma.$HorarioPayload<ExtArgs>
        fields: Prisma.HorarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HorarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HorarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>
          }
          findFirst: {
            args: Prisma.HorarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HorarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>
          }
          findMany: {
            args: Prisma.HorarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>[]
          }
          create: {
            args: Prisma.HorarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>
          }
          createMany: {
            args: Prisma.HorarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HorarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>[]
          }
          delete: {
            args: Prisma.HorarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>
          }
          update: {
            args: Prisma.HorarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>
          }
          deleteMany: {
            args: Prisma.HorarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HorarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HorarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>[]
          }
          upsert: {
            args: Prisma.HorarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HorarioPayload>
          }
          aggregate: {
            args: Prisma.HorarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHorario>
          }
          groupBy: {
            args: Prisma.HorarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<HorarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.HorarioCountArgs<ExtArgs>
            result: $Utils.Optional<HorarioCountAggregateOutputType> | number
          }
        }
      }
      Dia: {
        payload: Prisma.$DiaPayload<ExtArgs>
        fields: Prisma.DiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>
          }
          findFirst: {
            args: Prisma.DiaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>
          }
          findMany: {
            args: Prisma.DiaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>[]
          }
          create: {
            args: Prisma.DiaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>
          }
          createMany: {
            args: Prisma.DiaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>[]
          }
          delete: {
            args: Prisma.DiaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>
          }
          update: {
            args: Prisma.DiaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>
          }
          deleteMany: {
            args: Prisma.DiaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>[]
          }
          upsert: {
            args: Prisma.DiaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaPayload>
          }
          aggregate: {
            args: Prisma.DiaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDia>
          }
          groupBy: {
            args: Prisma.DiaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiaCountArgs<ExtArgs>
            result: $Utils.Optional<DiaCountAggregateOutputType> | number
          }
        }
      }
      Pedido: {
        payload: Prisma.$PedidoPayload<ExtArgs>
        fields: Prisma.PedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findFirst: {
            args: Prisma.PedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findMany: {
            args: Prisma.PedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          create: {
            args: Prisma.PedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          createMany: {
            args: Prisma.PedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          delete: {
            args: Prisma.PedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          update: {
            args: Prisma.PedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          deleteMany: {
            args: Prisma.PedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          upsert: {
            args: Prisma.PedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          aggregate: {
            args: Prisma.PedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido>
          }
          groupBy: {
            args: Prisma.PedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PedidoCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoCountAggregateOutputType> | number
          }
        }
      }
      Tarea: {
        payload: Prisma.$TareaPayload<ExtArgs>
        fields: Prisma.TareaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TareaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TareaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>
          }
          findFirst: {
            args: Prisma.TareaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TareaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>
          }
          findMany: {
            args: Prisma.TareaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>[]
          }
          create: {
            args: Prisma.TareaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>
          }
          createMany: {
            args: Prisma.TareaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TareaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>[]
          }
          delete: {
            args: Prisma.TareaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>
          }
          update: {
            args: Prisma.TareaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>
          }
          deleteMany: {
            args: Prisma.TareaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TareaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TareaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>[]
          }
          upsert: {
            args: Prisma.TareaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaPayload>
          }
          aggregate: {
            args: Prisma.TareaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTarea>
          }
          groupBy: {
            args: Prisma.TareaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TareaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TareaCountArgs<ExtArgs>
            result: $Utils.Optional<TareaCountAggregateOutputType> | number
          }
        }
      }
      pedido_elementos: {
        payload: Prisma.$pedido_elementosPayload<ExtArgs>
        fields: Prisma.pedido_elementosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pedido_elementosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pedido_elementosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>
          }
          findFirst: {
            args: Prisma.pedido_elementosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pedido_elementosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>
          }
          findMany: {
            args: Prisma.pedido_elementosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>[]
          }
          create: {
            args: Prisma.pedido_elementosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>
          }
          createMany: {
            args: Prisma.pedido_elementosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pedido_elementosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>[]
          }
          delete: {
            args: Prisma.pedido_elementosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>
          }
          update: {
            args: Prisma.pedido_elementosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>
          }
          deleteMany: {
            args: Prisma.pedido_elementosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pedido_elementosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pedido_elementosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>[]
          }
          upsert: {
            args: Prisma.pedido_elementosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pedido_elementosPayload>
          }
          aggregate: {
            args: Prisma.Pedido_elementosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido_elementos>
          }
          groupBy: {
            args: Prisma.pedido_elementosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pedido_elementosGroupByOutputType>[]
          }
          count: {
            args: Prisma.pedido_elementosCountArgs<ExtArgs>
            result: $Utils.Optional<Pedido_elementosCountAggregateOutputType> | number
          }
        }
      }
      ubicacion_empleado: {
        payload: Prisma.$ubicacion_empleadoPayload<ExtArgs>
        fields: Prisma.ubicacion_empleadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ubicacion_empleadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ubicacion_empleadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>
          }
          findFirst: {
            args: Prisma.ubicacion_empleadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ubicacion_empleadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>
          }
          findMany: {
            args: Prisma.ubicacion_empleadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>[]
          }
          create: {
            args: Prisma.ubicacion_empleadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>
          }
          createMany: {
            args: Prisma.ubicacion_empleadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ubicacion_empleadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>[]
          }
          delete: {
            args: Prisma.ubicacion_empleadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>
          }
          update: {
            args: Prisma.ubicacion_empleadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>
          }
          deleteMany: {
            args: Prisma.ubicacion_empleadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ubicacion_empleadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ubicacion_empleadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>[]
          }
          upsert: {
            args: Prisma.ubicacion_empleadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ubicacion_empleadoPayload>
          }
          aggregate: {
            args: Prisma.Ubicacion_empleadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUbicacion_empleado>
          }
          groupBy: {
            args: Prisma.ubicacion_empleadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ubicacion_empleadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ubicacion_empleadoCountArgs<ExtArgs>
            result: $Utils.Optional<Ubicacion_empleadoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    punto?: PuntoOmit
    ubicacion?: UbicacionOmit
    categoria?: CategoriaOmit
    persona?: PersonaOmit
    inventario?: InventarioOmit
    permiso?: PermisoOmit
    posicion?: PosicionOmit
    empleado?: EmpleadoOmit
    mensaje?: MensajeOmit
    proforma?: ProformaOmit
    proceso?: ProcesoOmit
    proceso_empleados?: proceso_empleadosOmit
    proceso_herramientas?: proceso_herramientasOmit
    proceso_inventario?: proceso_inventarioOmit
    obra?: ObraOmit
    transaccion?: TransaccionOmit
    transaccion_elementos?: transaccion_elementosOmit
    compra?: CompraOmit
    venta?: VentaOmit
    devolucion?: DevolucionOmit
    horario?: HorarioOmit
    dia?: DiaOmit
    pedido?: PedidoOmit
    tarea?: TareaOmit
    pedido_elementos?: pedido_elementosOmit
    ubicacion_empleado?: ubicacion_empleadoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type PuntoCountOutputType
   */

  export type PuntoCountOutputType = {
    ubicacion: number
    proforma: number
    obra: number
    empleado: number
  }

  export type PuntoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ubicacion?: boolean | PuntoCountOutputTypeCountUbicacionArgs
    proforma?: boolean | PuntoCountOutputTypeCountProformaArgs
    obra?: boolean | PuntoCountOutputTypeCountObraArgs
    empleado?: boolean | PuntoCountOutputTypeCountEmpleadoArgs
  }

  // Custom InputTypes
  /**
   * PuntoCountOutputType without action
   */
  export type PuntoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PuntoCountOutputType
     */
    select?: PuntoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PuntoCountOutputType without action
   */
  export type PuntoCountOutputTypeCountUbicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UbicacionWhereInput
  }

  /**
   * PuntoCountOutputType without action
   */
  export type PuntoCountOutputTypeCountProformaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProformaWhereInput
  }

  /**
   * PuntoCountOutputType without action
   */
  export type PuntoCountOutputTypeCountObraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ObraWhereInput
  }

  /**
   * PuntoCountOutputType without action
   */
  export type PuntoCountOutputTypeCountEmpleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ubicacion_empleadoWhereInput
  }


  /**
   * Count Type UbicacionCountOutputType
   */

  export type UbicacionCountOutputType = {
    inventario: number
    tarea: number
  }

  export type UbicacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | UbicacionCountOutputTypeCountInventarioArgs
    tarea?: boolean | UbicacionCountOutputTypeCountTareaArgs
  }

  // Custom InputTypes
  /**
   * UbicacionCountOutputType without action
   */
  export type UbicacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UbicacionCountOutputType
     */
    select?: UbicacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UbicacionCountOutputType without action
   */
  export type UbicacionCountOutputTypeCountInventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }

  /**
   * UbicacionCountOutputType without action
   */
  export type UbicacionCountOutputTypeCountTareaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaWhereInput
  }


  /**
   * Count Type CategoriaCountOutputType
   */

  export type CategoriaCountOutputType = {
    inventario: number
  }

  export type CategoriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | CategoriaCountOutputTypeCountInventarioArgs
  }

  // Custom InputTypes
  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaCountOutputType
     */
    select?: CategoriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountInventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }


  /**
   * Count Type PersonaCountOutputType
   */

  export type PersonaCountOutputType = {
    inventario: number
    proforma: number
    obra: number
    transaccion: number
  }

  export type PersonaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | PersonaCountOutputTypeCountInventarioArgs
    proforma?: boolean | PersonaCountOutputTypeCountProformaArgs
    obra?: boolean | PersonaCountOutputTypeCountObraArgs
    transaccion?: boolean | PersonaCountOutputTypeCountTransaccionArgs
  }

  // Custom InputTypes
  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PersonaCountOutputType
     */
    select?: PersonaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountInventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountProformaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProformaWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountObraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ObraWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountTransaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
  }


  /**
   * Count Type InventarioCountOutputType
   */

  export type InventarioCountOutputType = {
    transaccion: number
    pedido: number
    proceso_herramientas: number
    proceso_inventario: number
  }

  export type InventarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | InventarioCountOutputTypeCountTransaccionArgs
    pedido?: boolean | InventarioCountOutputTypeCountPedidoArgs
    proceso_herramientas?: boolean | InventarioCountOutputTypeCountProceso_herramientasArgs
    proceso_inventario?: boolean | InventarioCountOutputTypeCountProceso_inventarioArgs
  }

  // Custom InputTypes
  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InventarioCountOutputType
     */
    select?: InventarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountTransaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaccion_elementosWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_elementosWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountProceso_herramientasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_herramientasWhereInput
  }

  /**
   * InventarioCountOutputType without action
   */
  export type InventarioCountOutputTypeCountProceso_inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_inventarioWhereInput
  }


  /**
   * Count Type PermisoCountOutputType
   */

  export type PermisoCountOutputType = {
    posiciones: number
  }

  export type PermisoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posiciones?: boolean | PermisoCountOutputTypeCountPosicionesArgs
  }

  // Custom InputTypes
  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermisoCountOutputType
     */
    select?: PermisoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermisoCountOutputType without action
   */
  export type PermisoCountOutputTypeCountPosicionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PosicionWhereInput
  }


  /**
   * Count Type PosicionCountOutputType
   */

  export type PosicionCountOutputType = {
    permisos: number
    empleado: number
  }

  export type PosicionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permisos?: boolean | PosicionCountOutputTypeCountPermisosArgs
    empleado?: boolean | PosicionCountOutputTypeCountEmpleadoArgs
  }

  // Custom InputTypes
  /**
   * PosicionCountOutputType without action
   */
  export type PosicionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PosicionCountOutputType
     */
    select?: PosicionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PosicionCountOutputType without action
   */
  export type PosicionCountOutputTypeCountPermisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
  }

  /**
   * PosicionCountOutputType without action
   */
  export type PosicionCountOutputTypeCountEmpleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpleadoWhereInput
  }


  /**
   * Count Type EmpleadoCountOutputType
   */

  export type EmpleadoCountOutputType = {
    transaccion: number
    pedido: number
    proceso: number
    ubicacion: number
    mensajesEnviados: number
    mensajesRecibidos: number
    tareasAsignadas: number
    tareasRecibidas: number
  }

  export type EmpleadoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | EmpleadoCountOutputTypeCountTransaccionArgs
    pedido?: boolean | EmpleadoCountOutputTypeCountPedidoArgs
    proceso?: boolean | EmpleadoCountOutputTypeCountProcesoArgs
    ubicacion?: boolean | EmpleadoCountOutputTypeCountUbicacionArgs
    mensajesEnviados?: boolean | EmpleadoCountOutputTypeCountMensajesEnviadosArgs
    mensajesRecibidos?: boolean | EmpleadoCountOutputTypeCountMensajesRecibidosArgs
    tareasAsignadas?: boolean | EmpleadoCountOutputTypeCountTareasAsignadasArgs
    tareasRecibidas?: boolean | EmpleadoCountOutputTypeCountTareasRecibidasArgs
  }

  // Custom InputTypes
  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpleadoCountOutputType
     */
    select?: EmpleadoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountTransaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_elementosWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountProcesoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_empleadosWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountUbicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ubicacion_empleadoWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountMensajesEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountMensajesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountTareasAsignadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaWhereInput
  }

  /**
   * EmpleadoCountOutputType without action
   */
  export type EmpleadoCountOutputTypeCountTareasRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaWhereInput
  }


  /**
   * Count Type ProformaCountOutputType
   */

  export type ProformaCountOutputType = {
    procesos: number
  }

  export type ProformaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    procesos?: boolean | ProformaCountOutputTypeCountProcesosArgs
  }

  // Custom InputTypes
  /**
   * ProformaCountOutputType without action
   */
  export type ProformaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProformaCountOutputType
     */
    select?: ProformaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProformaCountOutputType without action
   */
  export type ProformaCountOutputTypeCountProcesosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProcesoWhereInput
  }


  /**
   * Count Type ProcesoCountOutputType
   */

  export type ProcesoCountOutputType = {
    empleados: number
    herramientas: number
    inventario: number
  }

  export type ProcesoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | ProcesoCountOutputTypeCountEmpleadosArgs
    herramientas?: boolean | ProcesoCountOutputTypeCountHerramientasArgs
    inventario?: boolean | ProcesoCountOutputTypeCountInventarioArgs
  }

  // Custom InputTypes
  /**
   * ProcesoCountOutputType without action
   */
  export type ProcesoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProcesoCountOutputType
     */
    select?: ProcesoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProcesoCountOutputType without action
   */
  export type ProcesoCountOutputTypeCountEmpleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_empleadosWhereInput
  }

  /**
   * ProcesoCountOutputType without action
   */
  export type ProcesoCountOutputTypeCountHerramientasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_herramientasWhereInput
  }

  /**
   * ProcesoCountOutputType without action
   */
  export type ProcesoCountOutputTypeCountInventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_inventarioWhereInput
  }


  /**
   * Count Type Proceso_empleadosCountOutputType
   */

  export type Proceso_empleadosCountOutputType = {
    horarios: number
  }

  export type Proceso_empleadosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horarios?: boolean | Proceso_empleadosCountOutputTypeCountHorariosArgs
  }

  // Custom InputTypes
  /**
   * Proceso_empleadosCountOutputType without action
   */
  export type Proceso_empleadosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso_empleadosCountOutputType
     */
    select?: Proceso_empleadosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Proceso_empleadosCountOutputType without action
   */
  export type Proceso_empleadosCountOutputTypeCountHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorarioWhereInput
  }


  /**
   * Count Type Proceso_herramientasCountOutputType
   */

  export type Proceso_herramientasCountOutputType = {
    horarios: number
  }

  export type Proceso_herramientasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horarios?: boolean | Proceso_herramientasCountOutputTypeCountHorariosArgs
  }

  // Custom InputTypes
  /**
   * Proceso_herramientasCountOutputType without action
   */
  export type Proceso_herramientasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso_herramientasCountOutputType
     */
    select?: Proceso_herramientasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Proceso_herramientasCountOutputType without action
   */
  export type Proceso_herramientasCountOutputTypeCountHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorarioWhereInput
  }


  /**
   * Count Type ObraCountOutputType
   */

  export type ObraCountOutputType = {
    proceso: number
    transaccion: number
    pedido: number
    tarea: number
  }

  export type ObraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ObraCountOutputTypeCountProcesoArgs
    transaccion?: boolean | ObraCountOutputTypeCountTransaccionArgs
    pedido?: boolean | ObraCountOutputTypeCountPedidoArgs
    tarea?: boolean | ObraCountOutputTypeCountTareaArgs
  }

  // Custom InputTypes
  /**
   * ObraCountOutputType without action
   */
  export type ObraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ObraCountOutputType
     */
    select?: ObraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ObraCountOutputType without action
   */
  export type ObraCountOutputTypeCountProcesoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProcesoWhereInput
  }

  /**
   * ObraCountOutputType without action
   */
  export type ObraCountOutputTypeCountTransaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
  }

  /**
   * ObraCountOutputType without action
   */
  export type ObraCountOutputTypeCountPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }

  /**
   * ObraCountOutputType without action
   */
  export type ObraCountOutputTypeCountTareaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaWhereInput
  }


  /**
   * Count Type TransaccionCountOutputType
   */

  export type TransaccionCountOutputType = {
    elementos: number
    pedido: number
  }

  export type TransaccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    elementos?: boolean | TransaccionCountOutputTypeCountElementosArgs
    pedido?: boolean | TransaccionCountOutputTypeCountPedidoArgs
  }

  // Custom InputTypes
  /**
   * TransaccionCountOutputType without action
   */
  export type TransaccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransaccionCountOutputType
     */
    select?: TransaccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransaccionCountOutputType without action
   */
  export type TransaccionCountOutputTypeCountElementosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaccion_elementosWhereInput
  }

  /**
   * TransaccionCountOutputType without action
   */
  export type TransaccionCountOutputTypeCountPedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }


  /**
   * Count Type HorarioCountOutputType
   */

  export type HorarioCountOutputType = {
    dias: number
    proceso_empleados: number
    proceso_herramientas: number
  }

  export type HorarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dias?: boolean | HorarioCountOutputTypeCountDiasArgs
    proceso_empleados?: boolean | HorarioCountOutputTypeCountProceso_empleadosArgs
    proceso_herramientas?: boolean | HorarioCountOutputTypeCountProceso_herramientasArgs
  }

  // Custom InputTypes
  /**
   * HorarioCountOutputType without action
   */
  export type HorarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorarioCountOutputType
     */
    select?: HorarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HorarioCountOutputType without action
   */
  export type HorarioCountOutputTypeCountDiasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiaWhereInput
  }

  /**
   * HorarioCountOutputType without action
   */
  export type HorarioCountOutputTypeCountProceso_empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_empleadosWhereInput
  }

  /**
   * HorarioCountOutputType without action
   */
  export type HorarioCountOutputTypeCountProceso_herramientasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_herramientasWhereInput
  }


  /**
   * Count Type DiaCountOutputType
   */

  export type DiaCountOutputType = {
    horarios: number
  }

  export type DiaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horarios?: boolean | DiaCountOutputTypeCountHorariosArgs
  }

  // Custom InputTypes
  /**
   * DiaCountOutputType without action
   */
  export type DiaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaCountOutputType
     */
    select?: DiaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiaCountOutputType without action
   */
  export type DiaCountOutputTypeCountHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorarioWhereInput
  }


  /**
   * Count Type PedidoCountOutputType
   */

  export type PedidoCountOutputType = {
    elemento: number
  }

  export type PedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    elemento?: boolean | PedidoCountOutputTypeCountElementoArgs
  }

  // Custom InputTypes
  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCountOutputType
     */
    select?: PedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountElementoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_elementosWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Punto
   */

  export type AggregatePunto = {
    _count: PuntoCountAggregateOutputType | null
    _avg: PuntoAvgAggregateOutputType | null
    _sum: PuntoSumAggregateOutputType | null
    _min: PuntoMinAggregateOutputType | null
    _max: PuntoMaxAggregateOutputType | null
  }

  export type PuntoAvgAggregateOutputType = {
    id: number | null
    lat: Decimal | null
    lng: Decimal | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PuntoSumAggregateOutputType = {
    id: number | null
    lat: Decimal | null
    lng: Decimal | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PuntoMinAggregateOutputType = {
    id: number | null
    lat: Decimal | null
    lng: Decimal | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PuntoMaxAggregateOutputType = {
    id: number | null
    lat: Decimal | null
    lng: Decimal | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PuntoCountAggregateOutputType = {
    id: number
    lat: number
    lng: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type PuntoAvgAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PuntoSumAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PuntoMinAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PuntoMaxAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PuntoCountAggregateInputType = {
    id?: true
    lat?: true
    lng?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type PuntoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Punto to aggregate.
     */
    where?: PuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntos to fetch.
     */
    orderBy?: PuntoOrderByWithRelationInput | PuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Puntos
    **/
    _count?: true | PuntoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PuntoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PuntoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PuntoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PuntoMaxAggregateInputType
  }

  export type GetPuntoAggregateType<T extends PuntoAggregateArgs> = {
        [P in keyof T & keyof AggregatePunto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePunto[P]>
      : GetScalarType<T[P], AggregatePunto[P]>
  }




  export type PuntoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PuntoWhereInput
    orderBy?: PuntoOrderByWithAggregationInput | PuntoOrderByWithAggregationInput[]
    by: PuntoScalarFieldEnum[] | PuntoScalarFieldEnum
    having?: PuntoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PuntoCountAggregateInputType | true
    _avg?: PuntoAvgAggregateInputType
    _sum?: PuntoSumAggregateInputType
    _min?: PuntoMinAggregateInputType
    _max?: PuntoMaxAggregateInputType
  }

  export type PuntoGroupByOutputType = {
    id: number
    lat: Decimal
    lng: Decimal
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: PuntoCountAggregateOutputType | null
    _avg: PuntoAvgAggregateOutputType | null
    _sum: PuntoSumAggregateOutputType | null
    _min: PuntoMinAggregateOutputType | null
    _max: PuntoMaxAggregateOutputType | null
  }

  type GetPuntoGroupByPayload<T extends PuntoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PuntoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PuntoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PuntoGroupByOutputType[P]>
            : GetScalarType<T[P], PuntoGroupByOutputType[P]>
        }
      >
    >


  export type PuntoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lat?: boolean
    lng?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    ubicacion?: boolean | Punto$ubicacionArgs<ExtArgs>
    proforma?: boolean | Punto$proformaArgs<ExtArgs>
    obra?: boolean | Punto$obraArgs<ExtArgs>
    empleado?: boolean | Punto$empleadoArgs<ExtArgs>
    _count?: boolean | PuntoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["punto"]>

  export type PuntoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lat?: boolean
    lng?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["punto"]>

  export type PuntoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lat?: boolean
    lng?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["punto"]>

  export type PuntoSelectScalar = {
    id?: boolean
    lat?: boolean
    lng?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type PuntoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "lat" | "lng" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["punto"]>
  export type PuntoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ubicacion?: boolean | Punto$ubicacionArgs<ExtArgs>
    proforma?: boolean | Punto$proformaArgs<ExtArgs>
    obra?: boolean | Punto$obraArgs<ExtArgs>
    empleado?: boolean | Punto$empleadoArgs<ExtArgs>
    _count?: boolean | PuntoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PuntoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PuntoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PuntoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Punto"
    objects: {
      ubicacion: Prisma.$UbicacionPayload<ExtArgs>[]
      proforma: Prisma.$ProformaPayload<ExtArgs>[]
      obra: Prisma.$ObraPayload<ExtArgs>[]
      empleado: Prisma.$ubicacion_empleadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      lat: Prisma.Decimal
      lng: Prisma.Decimal
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["punto"]>
    composites: {}
  }

  type PuntoGetPayload<S extends boolean | null | undefined | PuntoDefaultArgs> = $Result.GetResult<Prisma.$PuntoPayload, S>

  type PuntoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PuntoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PuntoCountAggregateInputType | true
    }

  export interface PuntoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Punto'], meta: { name: 'Punto' } }
    /**
     * Find zero or one Punto that matches the filter.
     * @param {PuntoFindUniqueArgs} args - Arguments to find a Punto
     * @example
     * // Get one Punto
     * const punto = await prisma.punto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PuntoFindUniqueArgs>(args: SelectSubset<T, PuntoFindUniqueArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Punto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PuntoFindUniqueOrThrowArgs} args - Arguments to find a Punto
     * @example
     * // Get one Punto
     * const punto = await prisma.punto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PuntoFindUniqueOrThrowArgs>(args: SelectSubset<T, PuntoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Punto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoFindFirstArgs} args - Arguments to find a Punto
     * @example
     * // Get one Punto
     * const punto = await prisma.punto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PuntoFindFirstArgs>(args?: SelectSubset<T, PuntoFindFirstArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Punto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoFindFirstOrThrowArgs} args - Arguments to find a Punto
     * @example
     * // Get one Punto
     * const punto = await prisma.punto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PuntoFindFirstOrThrowArgs>(args?: SelectSubset<T, PuntoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Puntos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Puntos
     * const puntos = await prisma.punto.findMany()
     * 
     * // Get first 10 Puntos
     * const puntos = await prisma.punto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const puntoWithIdOnly = await prisma.punto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PuntoFindManyArgs>(args?: SelectSubset<T, PuntoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Punto.
     * @param {PuntoCreateArgs} args - Arguments to create a Punto.
     * @example
     * // Create one Punto
     * const Punto = await prisma.punto.create({
     *   data: {
     *     // ... data to create a Punto
     *   }
     * })
     * 
     */
    create<T extends PuntoCreateArgs>(args: SelectSubset<T, PuntoCreateArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Puntos.
     * @param {PuntoCreateManyArgs} args - Arguments to create many Puntos.
     * @example
     * // Create many Puntos
     * const punto = await prisma.punto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PuntoCreateManyArgs>(args?: SelectSubset<T, PuntoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Puntos and returns the data saved in the database.
     * @param {PuntoCreateManyAndReturnArgs} args - Arguments to create many Puntos.
     * @example
     * // Create many Puntos
     * const punto = await prisma.punto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Puntos and only return the `id`
     * const puntoWithIdOnly = await prisma.punto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PuntoCreateManyAndReturnArgs>(args?: SelectSubset<T, PuntoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Punto.
     * @param {PuntoDeleteArgs} args - Arguments to delete one Punto.
     * @example
     * // Delete one Punto
     * const Punto = await prisma.punto.delete({
     *   where: {
     *     // ... filter to delete one Punto
     *   }
     * })
     * 
     */
    delete<T extends PuntoDeleteArgs>(args: SelectSubset<T, PuntoDeleteArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Punto.
     * @param {PuntoUpdateArgs} args - Arguments to update one Punto.
     * @example
     * // Update one Punto
     * const punto = await prisma.punto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PuntoUpdateArgs>(args: SelectSubset<T, PuntoUpdateArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Puntos.
     * @param {PuntoDeleteManyArgs} args - Arguments to filter Puntos to delete.
     * @example
     * // Delete a few Puntos
     * const { count } = await prisma.punto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PuntoDeleteManyArgs>(args?: SelectSubset<T, PuntoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Puntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Puntos
     * const punto = await prisma.punto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PuntoUpdateManyArgs>(args: SelectSubset<T, PuntoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Puntos and returns the data updated in the database.
     * @param {PuntoUpdateManyAndReturnArgs} args - Arguments to update many Puntos.
     * @example
     * // Update many Puntos
     * const punto = await prisma.punto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Puntos and only return the `id`
     * const puntoWithIdOnly = await prisma.punto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PuntoUpdateManyAndReturnArgs>(args: SelectSubset<T, PuntoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Punto.
     * @param {PuntoUpsertArgs} args - Arguments to update or create a Punto.
     * @example
     * // Update or create a Punto
     * const punto = await prisma.punto.upsert({
     *   create: {
     *     // ... data to create a Punto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Punto we want to update
     *   }
     * })
     */
    upsert<T extends PuntoUpsertArgs>(args: SelectSubset<T, PuntoUpsertArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Puntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoCountArgs} args - Arguments to filter Puntos to count.
     * @example
     * // Count the number of Puntos
     * const count = await prisma.punto.count({
     *   where: {
     *     // ... the filter for the Puntos we want to count
     *   }
     * })
    **/
    count<T extends PuntoCountArgs>(
      args?: Subset<T, PuntoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PuntoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Punto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PuntoAggregateArgs>(args: Subset<T, PuntoAggregateArgs>): Prisma.PrismaPromise<GetPuntoAggregateType<T>>

    /**
     * Group by Punto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PuntoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PuntoGroupByArgs['orderBy'] }
        : { orderBy?: PuntoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PuntoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPuntoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Punto model
   */
  readonly fields: PuntoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Punto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PuntoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ubicacion<T extends Punto$ubicacionArgs<ExtArgs> = {}>(args?: Subset<T, Punto$ubicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proforma<T extends Punto$proformaArgs<ExtArgs> = {}>(args?: Subset<T, Punto$proformaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    obra<T extends Punto$obraArgs<ExtArgs> = {}>(args?: Subset<T, Punto$obraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    empleado<T extends Punto$empleadoArgs<ExtArgs> = {}>(args?: Subset<T, Punto$empleadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Punto model
   */
  interface PuntoFieldRefs {
    readonly id: FieldRef<"Punto", 'Int'>
    readonly lat: FieldRef<"Punto", 'Decimal'>
    readonly lng: FieldRef<"Punto", 'Decimal'>
    readonly estadoEliminado: FieldRef<"Punto", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Punto", 'Int'>
    readonly updatedBy: FieldRef<"Punto", 'Int'>
    readonly deletedBy: FieldRef<"Punto", 'Int'>
    readonly createdDate: FieldRef<"Punto", 'DateTime'>
    readonly updatedDate: FieldRef<"Punto", 'DateTime'>
    readonly deletedDate: FieldRef<"Punto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Punto findUnique
   */
  export type PuntoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * Filter, which Punto to fetch.
     */
    where: PuntoWhereUniqueInput
  }

  /**
   * Punto findUniqueOrThrow
   */
  export type PuntoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * Filter, which Punto to fetch.
     */
    where: PuntoWhereUniqueInput
  }

  /**
   * Punto findFirst
   */
  export type PuntoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * Filter, which Punto to fetch.
     */
    where?: PuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntos to fetch.
     */
    orderBy?: PuntoOrderByWithRelationInput | PuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Puntos.
     */
    cursor?: PuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Puntos.
     */
    distinct?: PuntoScalarFieldEnum | PuntoScalarFieldEnum[]
  }

  /**
   * Punto findFirstOrThrow
   */
  export type PuntoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * Filter, which Punto to fetch.
     */
    where?: PuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntos to fetch.
     */
    orderBy?: PuntoOrderByWithRelationInput | PuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Puntos.
     */
    cursor?: PuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Puntos.
     */
    distinct?: PuntoScalarFieldEnum | PuntoScalarFieldEnum[]
  }

  /**
   * Punto findMany
   */
  export type PuntoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * Filter, which Puntos to fetch.
     */
    where?: PuntoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntos to fetch.
     */
    orderBy?: PuntoOrderByWithRelationInput | PuntoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Puntos.
     */
    cursor?: PuntoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntos.
     */
    skip?: number
    distinct?: PuntoScalarFieldEnum | PuntoScalarFieldEnum[]
  }

  /**
   * Punto create
   */
  export type PuntoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * The data needed to create a Punto.
     */
    data: XOR<PuntoCreateInput, PuntoUncheckedCreateInput>
  }

  /**
   * Punto createMany
   */
  export type PuntoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Puntos.
     */
    data: PuntoCreateManyInput | PuntoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Punto createManyAndReturn
   */
  export type PuntoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * The data used to create many Puntos.
     */
    data: PuntoCreateManyInput | PuntoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Punto update
   */
  export type PuntoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * The data needed to update a Punto.
     */
    data: XOR<PuntoUpdateInput, PuntoUncheckedUpdateInput>
    /**
     * Choose, which Punto to update.
     */
    where: PuntoWhereUniqueInput
  }

  /**
   * Punto updateMany
   */
  export type PuntoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Puntos.
     */
    data: XOR<PuntoUpdateManyMutationInput, PuntoUncheckedUpdateManyInput>
    /**
     * Filter which Puntos to update
     */
    where?: PuntoWhereInput
    /**
     * Limit how many Puntos to update.
     */
    limit?: number
  }

  /**
   * Punto updateManyAndReturn
   */
  export type PuntoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * The data used to update Puntos.
     */
    data: XOR<PuntoUpdateManyMutationInput, PuntoUncheckedUpdateManyInput>
    /**
     * Filter which Puntos to update
     */
    where?: PuntoWhereInput
    /**
     * Limit how many Puntos to update.
     */
    limit?: number
  }

  /**
   * Punto upsert
   */
  export type PuntoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * The filter to search for the Punto to update in case it exists.
     */
    where: PuntoWhereUniqueInput
    /**
     * In case the Punto found by the `where` argument doesn't exist, create a new Punto with this data.
     */
    create: XOR<PuntoCreateInput, PuntoUncheckedCreateInput>
    /**
     * In case the Punto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PuntoUpdateInput, PuntoUncheckedUpdateInput>
  }

  /**
   * Punto delete
   */
  export type PuntoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
    /**
     * Filter which Punto to delete.
     */
    where: PuntoWhereUniqueInput
  }

  /**
   * Punto deleteMany
   */
  export type PuntoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Puntos to delete
     */
    where?: PuntoWhereInput
    /**
     * Limit how many Puntos to delete.
     */
    limit?: number
  }

  /**
   * Punto.ubicacion
   */
  export type Punto$ubicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    where?: UbicacionWhereInput
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    cursor?: UbicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Punto.proforma
   */
  export type Punto$proformaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    where?: ProformaWhereInput
    orderBy?: ProformaOrderByWithRelationInput | ProformaOrderByWithRelationInput[]
    cursor?: ProformaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProformaScalarFieldEnum | ProformaScalarFieldEnum[]
  }

  /**
   * Punto.obra
   */
  export type Punto$obraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    where?: ObraWhereInput
    orderBy?: ObraOrderByWithRelationInput | ObraOrderByWithRelationInput[]
    cursor?: ObraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ObraScalarFieldEnum | ObraScalarFieldEnum[]
  }

  /**
   * Punto.empleado
   */
  export type Punto$empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    where?: ubicacion_empleadoWhereInput
    orderBy?: ubicacion_empleadoOrderByWithRelationInput | ubicacion_empleadoOrderByWithRelationInput[]
    cursor?: ubicacion_empleadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ubicacion_empleadoScalarFieldEnum | Ubicacion_empleadoScalarFieldEnum[]
  }

  /**
   * Punto without action
   */
  export type PuntoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Punto
     */
    select?: PuntoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Punto
     */
    omit?: PuntoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntoInclude<ExtArgs> | null
  }


  /**
   * Model Ubicacion
   */

  export type AggregateUbicacion = {
    _count: UbicacionCountAggregateOutputType | null
    _avg: UbicacionAvgAggregateOutputType | null
    _sum: UbicacionSumAggregateOutputType | null
    _min: UbicacionMinAggregateOutputType | null
    _max: UbicacionMaxAggregateOutputType | null
  }

  export type UbicacionAvgAggregateOutputType = {
    id: number | null
    id_punto: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type UbicacionSumAggregateOutputType = {
    id: number | null
    id_punto: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type UbicacionMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    id_punto: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type UbicacionMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    id_punto: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type UbicacionCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    id_punto: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type UbicacionAvgAggregateInputType = {
    id?: true
    id_punto?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type UbicacionSumAggregateInputType = {
    id?: true
    id_punto?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type UbicacionMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    id_punto?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type UbicacionMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    id_punto?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type UbicacionCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    id_punto?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type UbicacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ubicacion to aggregate.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ubicacions
    **/
    _count?: true | UbicacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UbicacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UbicacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UbicacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UbicacionMaxAggregateInputType
  }

  export type GetUbicacionAggregateType<T extends UbicacionAggregateArgs> = {
        [P in keyof T & keyof AggregateUbicacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUbicacion[P]>
      : GetScalarType<T[P], AggregateUbicacion[P]>
  }




  export type UbicacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UbicacionWhereInput
    orderBy?: UbicacionOrderByWithAggregationInput | UbicacionOrderByWithAggregationInput[]
    by: UbicacionScalarFieldEnum[] | UbicacionScalarFieldEnum
    having?: UbicacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UbicacionCountAggregateInputType | true
    _avg?: UbicacionAvgAggregateInputType
    _sum?: UbicacionSumAggregateInputType
    _min?: UbicacionMinAggregateInputType
    _max?: UbicacionMaxAggregateInputType
  }

  export type UbicacionGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string
    id_punto: number
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: UbicacionCountAggregateOutputType | null
    _avg: UbicacionAvgAggregateOutputType | null
    _sum: UbicacionSumAggregateOutputType | null
    _min: UbicacionMinAggregateOutputType | null
    _max: UbicacionMaxAggregateOutputType | null
  }

  type GetUbicacionGroupByPayload<T extends UbicacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UbicacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UbicacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UbicacionGroupByOutputType[P]>
            : GetScalarType<T[P], UbicacionGroupByOutputType[P]>
        }
      >
    >


  export type UbicacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_punto?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    inventario?: boolean | Ubicacion$inventarioArgs<ExtArgs>
    tarea?: boolean | Ubicacion$tareaArgs<ExtArgs>
    _count?: boolean | UbicacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion"]>

  export type UbicacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_punto?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion"]>

  export type UbicacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_punto?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion"]>

  export type UbicacionSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_punto?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type UbicacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "id_punto" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["ubicacion"]>
  export type UbicacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    inventario?: boolean | Ubicacion$inventarioArgs<ExtArgs>
    tarea?: boolean | Ubicacion$tareaArgs<ExtArgs>
    _count?: boolean | UbicacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UbicacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
  }
  export type UbicacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
  }

  export type $UbicacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ubicacion"
    objects: {
      punto: Prisma.$PuntoPayload<ExtArgs>
      inventario: Prisma.$InventarioPayload<ExtArgs>[]
      tarea: Prisma.$TareaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string
      id_punto: number
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["ubicacion"]>
    composites: {}
  }

  type UbicacionGetPayload<S extends boolean | null | undefined | UbicacionDefaultArgs> = $Result.GetResult<Prisma.$UbicacionPayload, S>

  type UbicacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UbicacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UbicacionCountAggregateInputType | true
    }

  export interface UbicacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ubicacion'], meta: { name: 'Ubicacion' } }
    /**
     * Find zero or one Ubicacion that matches the filter.
     * @param {UbicacionFindUniqueArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UbicacionFindUniqueArgs>(args: SelectSubset<T, UbicacionFindUniqueArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ubicacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UbicacionFindUniqueOrThrowArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UbicacionFindUniqueOrThrowArgs>(args: SelectSubset<T, UbicacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionFindFirstArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UbicacionFindFirstArgs>(args?: SelectSubset<T, UbicacionFindFirstArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionFindFirstOrThrowArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UbicacionFindFirstOrThrowArgs>(args?: SelectSubset<T, UbicacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ubicacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ubicacions
     * const ubicacions = await prisma.ubicacion.findMany()
     * 
     * // Get first 10 Ubicacions
     * const ubicacions = await prisma.ubicacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ubicacionWithIdOnly = await prisma.ubicacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UbicacionFindManyArgs>(args?: SelectSubset<T, UbicacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ubicacion.
     * @param {UbicacionCreateArgs} args - Arguments to create a Ubicacion.
     * @example
     * // Create one Ubicacion
     * const Ubicacion = await prisma.ubicacion.create({
     *   data: {
     *     // ... data to create a Ubicacion
     *   }
     * })
     * 
     */
    create<T extends UbicacionCreateArgs>(args: SelectSubset<T, UbicacionCreateArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ubicacions.
     * @param {UbicacionCreateManyArgs} args - Arguments to create many Ubicacions.
     * @example
     * // Create many Ubicacions
     * const ubicacion = await prisma.ubicacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UbicacionCreateManyArgs>(args?: SelectSubset<T, UbicacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ubicacions and returns the data saved in the database.
     * @param {UbicacionCreateManyAndReturnArgs} args - Arguments to create many Ubicacions.
     * @example
     * // Create many Ubicacions
     * const ubicacion = await prisma.ubicacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ubicacions and only return the `id`
     * const ubicacionWithIdOnly = await prisma.ubicacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UbicacionCreateManyAndReturnArgs>(args?: SelectSubset<T, UbicacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ubicacion.
     * @param {UbicacionDeleteArgs} args - Arguments to delete one Ubicacion.
     * @example
     * // Delete one Ubicacion
     * const Ubicacion = await prisma.ubicacion.delete({
     *   where: {
     *     // ... filter to delete one Ubicacion
     *   }
     * })
     * 
     */
    delete<T extends UbicacionDeleteArgs>(args: SelectSubset<T, UbicacionDeleteArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ubicacion.
     * @param {UbicacionUpdateArgs} args - Arguments to update one Ubicacion.
     * @example
     * // Update one Ubicacion
     * const ubicacion = await prisma.ubicacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UbicacionUpdateArgs>(args: SelectSubset<T, UbicacionUpdateArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ubicacions.
     * @param {UbicacionDeleteManyArgs} args - Arguments to filter Ubicacions to delete.
     * @example
     * // Delete a few Ubicacions
     * const { count } = await prisma.ubicacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UbicacionDeleteManyArgs>(args?: SelectSubset<T, UbicacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ubicacions
     * const ubicacion = await prisma.ubicacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UbicacionUpdateManyArgs>(args: SelectSubset<T, UbicacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicacions and returns the data updated in the database.
     * @param {UbicacionUpdateManyAndReturnArgs} args - Arguments to update many Ubicacions.
     * @example
     * // Update many Ubicacions
     * const ubicacion = await prisma.ubicacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ubicacions and only return the `id`
     * const ubicacionWithIdOnly = await prisma.ubicacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UbicacionUpdateManyAndReturnArgs>(args: SelectSubset<T, UbicacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ubicacion.
     * @param {UbicacionUpsertArgs} args - Arguments to update or create a Ubicacion.
     * @example
     * // Update or create a Ubicacion
     * const ubicacion = await prisma.ubicacion.upsert({
     *   create: {
     *     // ... data to create a Ubicacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ubicacion we want to update
     *   }
     * })
     */
    upsert<T extends UbicacionUpsertArgs>(args: SelectSubset<T, UbicacionUpsertArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ubicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionCountArgs} args - Arguments to filter Ubicacions to count.
     * @example
     * // Count the number of Ubicacions
     * const count = await prisma.ubicacion.count({
     *   where: {
     *     // ... the filter for the Ubicacions we want to count
     *   }
     * })
    **/
    count<T extends UbicacionCountArgs>(
      args?: Subset<T, UbicacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UbicacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ubicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UbicacionAggregateArgs>(args: Subset<T, UbicacionAggregateArgs>): Prisma.PrismaPromise<GetUbicacionAggregateType<T>>

    /**
     * Group by Ubicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UbicacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UbicacionGroupByArgs['orderBy'] }
        : { orderBy?: UbicacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UbicacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUbicacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ubicacion model
   */
  readonly fields: UbicacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ubicacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UbicacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    punto<T extends PuntoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PuntoDefaultArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    inventario<T extends Ubicacion$inventarioArgs<ExtArgs> = {}>(args?: Subset<T, Ubicacion$inventarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tarea<T extends Ubicacion$tareaArgs<ExtArgs> = {}>(args?: Subset<T, Ubicacion$tareaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ubicacion model
   */
  interface UbicacionFieldRefs {
    readonly id: FieldRef<"Ubicacion", 'Int'>
    readonly nombre: FieldRef<"Ubicacion", 'String'>
    readonly descripcion: FieldRef<"Ubicacion", 'String'>
    readonly id_punto: FieldRef<"Ubicacion", 'Int'>
    readonly estadoEliminado: FieldRef<"Ubicacion", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Ubicacion", 'Int'>
    readonly updatedBy: FieldRef<"Ubicacion", 'Int'>
    readonly deletedBy: FieldRef<"Ubicacion", 'Int'>
    readonly createdDate: FieldRef<"Ubicacion", 'DateTime'>
    readonly updatedDate: FieldRef<"Ubicacion", 'DateTime'>
    readonly deletedDate: FieldRef<"Ubicacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Ubicacion findUnique
   */
  export type UbicacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion findUniqueOrThrow
   */
  export type UbicacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion findFirst
   */
  export type UbicacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ubicacions.
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ubicacions.
     */
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Ubicacion findFirstOrThrow
   */
  export type UbicacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ubicacions.
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ubicacions.
     */
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Ubicacion findMany
   */
  export type UbicacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacions to fetch.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ubicacions.
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Ubicacion create
   */
  export type UbicacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Ubicacion.
     */
    data: XOR<UbicacionCreateInput, UbicacionUncheckedCreateInput>
  }

  /**
   * Ubicacion createMany
   */
  export type UbicacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ubicacions.
     */
    data: UbicacionCreateManyInput | UbicacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ubicacion createManyAndReturn
   */
  export type UbicacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * The data used to create many Ubicacions.
     */
    data: UbicacionCreateManyInput | UbicacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ubicacion update
   */
  export type UbicacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Ubicacion.
     */
    data: XOR<UbicacionUpdateInput, UbicacionUncheckedUpdateInput>
    /**
     * Choose, which Ubicacion to update.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion updateMany
   */
  export type UbicacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ubicacions.
     */
    data: XOR<UbicacionUpdateManyMutationInput, UbicacionUncheckedUpdateManyInput>
    /**
     * Filter which Ubicacions to update
     */
    where?: UbicacionWhereInput
    /**
     * Limit how many Ubicacions to update.
     */
    limit?: number
  }

  /**
   * Ubicacion updateManyAndReturn
   */
  export type UbicacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * The data used to update Ubicacions.
     */
    data: XOR<UbicacionUpdateManyMutationInput, UbicacionUncheckedUpdateManyInput>
    /**
     * Filter which Ubicacions to update
     */
    where?: UbicacionWhereInput
    /**
     * Limit how many Ubicacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ubicacion upsert
   */
  export type UbicacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Ubicacion to update in case it exists.
     */
    where: UbicacionWhereUniqueInput
    /**
     * In case the Ubicacion found by the `where` argument doesn't exist, create a new Ubicacion with this data.
     */
    create: XOR<UbicacionCreateInput, UbicacionUncheckedCreateInput>
    /**
     * In case the Ubicacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UbicacionUpdateInput, UbicacionUncheckedUpdateInput>
  }

  /**
   * Ubicacion delete
   */
  export type UbicacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter which Ubicacion to delete.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion deleteMany
   */
  export type UbicacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ubicacions to delete
     */
    where?: UbicacionWhereInput
    /**
     * Limit how many Ubicacions to delete.
     */
    limit?: number
  }

  /**
   * Ubicacion.inventario
   */
  export type Ubicacion$inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Ubicacion.tarea
   */
  export type Ubicacion$tareaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    where?: TareaWhereInput
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    cursor?: TareaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Ubicacion without action
   */
  export type UbicacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
  }


  /**
   * Model Categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    codigo: string | null
    descripcion: string | null
    tipo: $Enums.CategoriasInventario | null
    tipo_unidad: string | null
    venta: boolean | null
    tiempo: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type CategoriaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    codigo: string | null
    descripcion: string | null
    tipo: $Enums.CategoriasInventario | null
    tipo_unidad: string | null
    venta: boolean | null
    tiempo: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type CategoriaCountAggregateOutputType = {
    id: number
    nombre: number
    codigo: number
    descripcion: number
    tipo: number
    tipo_unidad: number
    venta: number
    tiempo: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CategoriaSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type CategoriaMinAggregateInputType = {
    id?: true
    nombre?: true
    codigo?: true
    descripcion?: true
    tipo?: true
    tipo_unidad?: true
    venta?: true
    tiempo?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type CategoriaMaxAggregateInputType = {
    id?: true
    nombre?: true
    codigo?: true
    descripcion?: true
    tipo?: true
    tipo_unidad?: true
    venta?: true
    tiempo?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type CategoriaCountAggregateInputType = {
    id?: true
    nombre?: true
    codigo?: true
    descripcion?: true
    tipo?: true
    tipo_unidad?: true
    venta?: true
    tiempo?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria to aggregate.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type CategoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithAggregationInput | CategoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: CategoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    id: number
    nombre: string
    codigo: string
    descripcion: string
    tipo: $Enums.CategoriasInventario
    tipo_unidad: string
    venta: boolean
    tiempo: Date | null
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends CategoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    descripcion?: boolean
    tipo?: boolean
    tipo_unidad?: boolean
    venta?: boolean
    tiempo?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    inventario?: boolean | Categoria$inventarioArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    descripcion?: boolean
    tipo?: boolean
    tipo_unidad?: boolean
    venta?: boolean
    tiempo?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    descripcion?: boolean
    tipo?: boolean
    tipo_unidad?: boolean
    venta?: boolean
    tiempo?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectScalar = {
    id?: boolean
    nombre?: boolean
    codigo?: boolean
    descripcion?: boolean
    tipo?: boolean
    tipo_unidad?: boolean
    venta?: boolean
    tiempo?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type CategoriaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "codigo" | "descripcion" | "tipo" | "tipo_unidad" | "venta" | "tiempo" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["categoria"]>
  export type CategoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | Categoria$inventarioArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CategoriaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria"
    objects: {
      inventario: Prisma.$InventarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      codigo: string
      descripcion: string
      tipo: $Enums.CategoriasInventario
      tipo_unidad: string
      venta: boolean
      tiempo: Date | null
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }

  type CategoriaGetPayload<S extends boolean | null | undefined | CategoriaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaPayload, S>

  type CategoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface CategoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria'], meta: { name: 'Categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {CategoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaFindUniqueArgs>(args: SelectSubset<T, CategoriaFindUniqueArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categoria that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaFindFirstArgs>(args?: SelectSubset<T, CategoriaFindFirstArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaWithIdOnly = await prisma.categoria.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoriaFindManyArgs>(args?: SelectSubset<T, CategoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categoria.
     * @param {CategoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
     */
    create<T extends CategoriaCreateArgs>(args: SelectSubset<T, CategoriaCreateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categorias.
     * @param {CategoriaCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaCreateManyArgs>(args?: SelectSubset<T, CategoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriaCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id`
     * const categoriaWithIdOnly = await prisma.categoria.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categoria.
     * @param {CategoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeleteArgs>(args: SelectSubset<T, CategoriaDeleteArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categoria.
     * @param {CategoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaUpdateArgs>(args: SelectSubset<T, CategoriaUpdateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaUpdateManyArgs>(args: SelectSubset<T, CategoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias and returns the data updated in the database.
     * @param {CategoriaUpdateManyAndReturnArgs} args - Arguments to update many Categorias.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categorias and only return the `id`
     * const categoriaWithIdOnly = await prisma.categoria.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categoria.
     * @param {CategoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaUpsertArgs>(args: SelectSubset<T, CategoriaUpsertArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriaCountArgs>(
      args?: Subset<T, CategoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria model
   */
  readonly fields: CategoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventario<T extends Categoria$inventarioArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$inventarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria model
   */
  interface CategoriaFieldRefs {
    readonly id: FieldRef<"Categoria", 'Int'>
    readonly nombre: FieldRef<"Categoria", 'String'>
    readonly codigo: FieldRef<"Categoria", 'String'>
    readonly descripcion: FieldRef<"Categoria", 'String'>
    readonly tipo: FieldRef<"Categoria", 'CategoriasInventario'>
    readonly tipo_unidad: FieldRef<"Categoria", 'String'>
    readonly venta: FieldRef<"Categoria", 'Boolean'>
    readonly tiempo: FieldRef<"Categoria", 'DateTime'>
    readonly estadoEliminado: FieldRef<"Categoria", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Categoria", 'Int'>
    readonly updatedBy: FieldRef<"Categoria", 'Int'>
    readonly deletedBy: FieldRef<"Categoria", 'Int'>
    readonly createdDate: FieldRef<"Categoria", 'DateTime'>
    readonly updatedDate: FieldRef<"Categoria", 'DateTime'>
    readonly deletedDate: FieldRef<"Categoria", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Categoria findUnique
   */
  export type CategoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findUniqueOrThrow
   */
  export type CategoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findFirst
   */
  export type CategoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findFirstOrThrow
   */
  export type CategoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findMany
   */
  export type CategoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria create
   */
  export type CategoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria.
     */
    data: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
  }

  /**
   * Categoria createMany
   */
  export type CategoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria createManyAndReturn
   */
  export type CategoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria update
   */
  export type CategoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria.
     */
    data: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
    /**
     * Choose, which Categoria to update.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria updateMany
   */
  export type CategoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria updateManyAndReturn
   */
  export type CategoriaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categoria upsert
   */
  export type CategoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria to update in case it exists.
     */
    where: CategoriaWhereUniqueInput
    /**
     * In case the Categoria found by the `where` argument doesn't exist, create a new Categoria with this data.
     */
    create: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
    /**
     * In case the Categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
  }

  /**
   * Categoria delete
   */
  export type CategoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter which Categoria to delete.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria deleteMany
   */
  export type CategoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriaWhereInput
    /**
     * Limit how many Categorias to delete.
     */
    limit?: number
  }

  /**
   * Categoria.inventario
   */
  export type Categoria$inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Categoria without action
   */
  export type CategoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria
     */
    omit?: CategoriaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
  }


  /**
   * Model Persona
   */

  export type AggregatePersona = {
    _count: PersonaCountAggregateOutputType | null
    _avg: PersonaAvgAggregateOutputType | null
    _sum: PersonaSumAggregateOutputType | null
    _min: PersonaMinAggregateOutputType | null
    _max: PersonaMaxAggregateOutputType | null
  }

  export type PersonaAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PersonaSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PersonaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    ruc: string | null
    mail: string | null
    telefono: string | null
    proveedor: boolean | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PersonaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    ruc: string | null
    mail: string | null
    telefono: string | null
    proveedor: boolean | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PersonaCountAggregateOutputType = {
    id: number
    nombre: number
    ruc: number
    mail: number
    telefono: number
    proveedor: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type PersonaAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PersonaSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PersonaMinAggregateInputType = {
    id?: true
    nombre?: true
    ruc?: true
    mail?: true
    telefono?: true
    proveedor?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PersonaMaxAggregateInputType = {
    id?: true
    nombre?: true
    ruc?: true
    mail?: true
    telefono?: true
    proveedor?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PersonaCountAggregateInputType = {
    id?: true
    nombre?: true
    ruc?: true
    mail?: true
    telefono?: true
    proveedor?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type PersonaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Persona to aggregate.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Personas
    **/
    _count?: true | PersonaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PersonaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PersonaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PersonaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PersonaMaxAggregateInputType
  }

  export type GetPersonaAggregateType<T extends PersonaAggregateArgs> = {
        [P in keyof T & keyof AggregatePersona]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersona[P]>
      : GetScalarType<T[P], AggregatePersona[P]>
  }




  export type PersonaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PersonaWhereInput
    orderBy?: PersonaOrderByWithAggregationInput | PersonaOrderByWithAggregationInput[]
    by: PersonaScalarFieldEnum[] | PersonaScalarFieldEnum
    having?: PersonaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PersonaCountAggregateInputType | true
    _avg?: PersonaAvgAggregateInputType
    _sum?: PersonaSumAggregateInputType
    _min?: PersonaMinAggregateInputType
    _max?: PersonaMaxAggregateInputType
  }

  export type PersonaGroupByOutputType = {
    id: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: PersonaCountAggregateOutputType | null
    _avg: PersonaAvgAggregateOutputType | null
    _sum: PersonaSumAggregateOutputType | null
    _min: PersonaMinAggregateOutputType | null
    _max: PersonaMaxAggregateOutputType | null
  }

  type GetPersonaGroupByPayload<T extends PersonaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PersonaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PersonaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PersonaGroupByOutputType[P]>
            : GetScalarType<T[P], PersonaGroupByOutputType[P]>
        }
      >
    >


  export type PersonaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    mail?: boolean
    telefono?: boolean
    proveedor?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    inventario?: boolean | Persona$inventarioArgs<ExtArgs>
    proforma?: boolean | Persona$proformaArgs<ExtArgs>
    obra?: boolean | Persona$obraArgs<ExtArgs>
    transaccion?: boolean | Persona$transaccionArgs<ExtArgs>
    _count?: boolean | PersonaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["persona"]>

  export type PersonaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    mail?: boolean
    telefono?: boolean
    proveedor?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["persona"]>

  export type PersonaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    mail?: boolean
    telefono?: boolean
    proveedor?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["persona"]>

  export type PersonaSelectScalar = {
    id?: boolean
    nombre?: boolean
    ruc?: boolean
    mail?: boolean
    telefono?: boolean
    proveedor?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type PersonaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "ruc" | "mail" | "telefono" | "proveedor" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["persona"]>
  export type PersonaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inventario?: boolean | Persona$inventarioArgs<ExtArgs>
    proforma?: boolean | Persona$proformaArgs<ExtArgs>
    obra?: boolean | Persona$obraArgs<ExtArgs>
    transaccion?: boolean | Persona$transaccionArgs<ExtArgs>
    _count?: boolean | PersonaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PersonaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PersonaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PersonaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Persona"
    objects: {
      inventario: Prisma.$InventarioPayload<ExtArgs>[]
      proforma: Prisma.$ProformaPayload<ExtArgs>[]
      obra: Prisma.$ObraPayload<ExtArgs>[]
      transaccion: Prisma.$TransaccionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      ruc: string
      mail: string
      telefono: string
      proveedor: boolean
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["persona"]>
    composites: {}
  }

  type PersonaGetPayload<S extends boolean | null | undefined | PersonaDefaultArgs> = $Result.GetResult<Prisma.$PersonaPayload, S>

  type PersonaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PersonaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PersonaCountAggregateInputType | true
    }

  export interface PersonaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Persona'], meta: { name: 'Persona' } }
    /**
     * Find zero or one Persona that matches the filter.
     * @param {PersonaFindUniqueArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PersonaFindUniqueArgs>(args: SelectSubset<T, PersonaFindUniqueArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Persona that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PersonaFindUniqueOrThrowArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PersonaFindUniqueOrThrowArgs>(args: SelectSubset<T, PersonaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Persona that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaFindFirstArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PersonaFindFirstArgs>(args?: SelectSubset<T, PersonaFindFirstArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Persona that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaFindFirstOrThrowArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PersonaFindFirstOrThrowArgs>(args?: SelectSubset<T, PersonaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Personas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Personas
     * const personas = await prisma.persona.findMany()
     * 
     * // Get first 10 Personas
     * const personas = await prisma.persona.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const personaWithIdOnly = await prisma.persona.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PersonaFindManyArgs>(args?: SelectSubset<T, PersonaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Persona.
     * @param {PersonaCreateArgs} args - Arguments to create a Persona.
     * @example
     * // Create one Persona
     * const Persona = await prisma.persona.create({
     *   data: {
     *     // ... data to create a Persona
     *   }
     * })
     * 
     */
    create<T extends PersonaCreateArgs>(args: SelectSubset<T, PersonaCreateArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Personas.
     * @param {PersonaCreateManyArgs} args - Arguments to create many Personas.
     * @example
     * // Create many Personas
     * const persona = await prisma.persona.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PersonaCreateManyArgs>(args?: SelectSubset<T, PersonaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Personas and returns the data saved in the database.
     * @param {PersonaCreateManyAndReturnArgs} args - Arguments to create many Personas.
     * @example
     * // Create many Personas
     * const persona = await prisma.persona.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Personas and only return the `id`
     * const personaWithIdOnly = await prisma.persona.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PersonaCreateManyAndReturnArgs>(args?: SelectSubset<T, PersonaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Persona.
     * @param {PersonaDeleteArgs} args - Arguments to delete one Persona.
     * @example
     * // Delete one Persona
     * const Persona = await prisma.persona.delete({
     *   where: {
     *     // ... filter to delete one Persona
     *   }
     * })
     * 
     */
    delete<T extends PersonaDeleteArgs>(args: SelectSubset<T, PersonaDeleteArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Persona.
     * @param {PersonaUpdateArgs} args - Arguments to update one Persona.
     * @example
     * // Update one Persona
     * const persona = await prisma.persona.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PersonaUpdateArgs>(args: SelectSubset<T, PersonaUpdateArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Personas.
     * @param {PersonaDeleteManyArgs} args - Arguments to filter Personas to delete.
     * @example
     * // Delete a few Personas
     * const { count } = await prisma.persona.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PersonaDeleteManyArgs>(args?: SelectSubset<T, PersonaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Personas
     * const persona = await prisma.persona.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PersonaUpdateManyArgs>(args: SelectSubset<T, PersonaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personas and returns the data updated in the database.
     * @param {PersonaUpdateManyAndReturnArgs} args - Arguments to update many Personas.
     * @example
     * // Update many Personas
     * const persona = await prisma.persona.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Personas and only return the `id`
     * const personaWithIdOnly = await prisma.persona.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PersonaUpdateManyAndReturnArgs>(args: SelectSubset<T, PersonaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Persona.
     * @param {PersonaUpsertArgs} args - Arguments to update or create a Persona.
     * @example
     * // Update or create a Persona
     * const persona = await prisma.persona.upsert({
     *   create: {
     *     // ... data to create a Persona
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Persona we want to update
     *   }
     * })
     */
    upsert<T extends PersonaUpsertArgs>(args: SelectSubset<T, PersonaUpsertArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Personas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaCountArgs} args - Arguments to filter Personas to count.
     * @example
     * // Count the number of Personas
     * const count = await prisma.persona.count({
     *   where: {
     *     // ... the filter for the Personas we want to count
     *   }
     * })
    **/
    count<T extends PersonaCountArgs>(
      args?: Subset<T, PersonaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PersonaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Persona.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PersonaAggregateArgs>(args: Subset<T, PersonaAggregateArgs>): Prisma.PrismaPromise<GetPersonaAggregateType<T>>

    /**
     * Group by Persona.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PersonaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PersonaGroupByArgs['orderBy'] }
        : { orderBy?: PersonaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PersonaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Persona model
   */
  readonly fields: PersonaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Persona.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PersonaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inventario<T extends Persona$inventarioArgs<ExtArgs> = {}>(args?: Subset<T, Persona$inventarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proforma<T extends Persona$proformaArgs<ExtArgs> = {}>(args?: Subset<T, Persona$proformaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    obra<T extends Persona$obraArgs<ExtArgs> = {}>(args?: Subset<T, Persona$obraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaccion<T extends Persona$transaccionArgs<ExtArgs> = {}>(args?: Subset<T, Persona$transaccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Persona model
   */
  interface PersonaFieldRefs {
    readonly id: FieldRef<"Persona", 'Int'>
    readonly nombre: FieldRef<"Persona", 'String'>
    readonly ruc: FieldRef<"Persona", 'String'>
    readonly mail: FieldRef<"Persona", 'String'>
    readonly telefono: FieldRef<"Persona", 'String'>
    readonly proveedor: FieldRef<"Persona", 'Boolean'>
    readonly estadoEliminado: FieldRef<"Persona", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Persona", 'Int'>
    readonly updatedBy: FieldRef<"Persona", 'Int'>
    readonly deletedBy: FieldRef<"Persona", 'Int'>
    readonly createdDate: FieldRef<"Persona", 'DateTime'>
    readonly updatedDate: FieldRef<"Persona", 'DateTime'>
    readonly deletedDate: FieldRef<"Persona", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Persona findUnique
   */
  export type PersonaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona findUniqueOrThrow
   */
  export type PersonaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona findFirst
   */
  export type PersonaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Personas.
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Personas.
     */
    distinct?: PersonaScalarFieldEnum | PersonaScalarFieldEnum[]
  }

  /**
   * Persona findFirstOrThrow
   */
  export type PersonaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Personas.
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Personas.
     */
    distinct?: PersonaScalarFieldEnum | PersonaScalarFieldEnum[]
  }

  /**
   * Persona findMany
   */
  export type PersonaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Personas to fetch.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Personas.
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    distinct?: PersonaScalarFieldEnum | PersonaScalarFieldEnum[]
  }

  /**
   * Persona create
   */
  export type PersonaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * The data needed to create a Persona.
     */
    data: XOR<PersonaCreateInput, PersonaUncheckedCreateInput>
  }

  /**
   * Persona createMany
   */
  export type PersonaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Personas.
     */
    data: PersonaCreateManyInput | PersonaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Persona createManyAndReturn
   */
  export type PersonaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * The data used to create many Personas.
     */
    data: PersonaCreateManyInput | PersonaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Persona update
   */
  export type PersonaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * The data needed to update a Persona.
     */
    data: XOR<PersonaUpdateInput, PersonaUncheckedUpdateInput>
    /**
     * Choose, which Persona to update.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona updateMany
   */
  export type PersonaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Personas.
     */
    data: XOR<PersonaUpdateManyMutationInput, PersonaUncheckedUpdateManyInput>
    /**
     * Filter which Personas to update
     */
    where?: PersonaWhereInput
    /**
     * Limit how many Personas to update.
     */
    limit?: number
  }

  /**
   * Persona updateManyAndReturn
   */
  export type PersonaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * The data used to update Personas.
     */
    data: XOR<PersonaUpdateManyMutationInput, PersonaUncheckedUpdateManyInput>
    /**
     * Filter which Personas to update
     */
    where?: PersonaWhereInput
    /**
     * Limit how many Personas to update.
     */
    limit?: number
  }

  /**
   * Persona upsert
   */
  export type PersonaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * The filter to search for the Persona to update in case it exists.
     */
    where: PersonaWhereUniqueInput
    /**
     * In case the Persona found by the `where` argument doesn't exist, create a new Persona with this data.
     */
    create: XOR<PersonaCreateInput, PersonaUncheckedCreateInput>
    /**
     * In case the Persona was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PersonaUpdateInput, PersonaUncheckedUpdateInput>
  }

  /**
   * Persona delete
   */
  export type PersonaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter which Persona to delete.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona deleteMany
   */
  export type PersonaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Personas to delete
     */
    where?: PersonaWhereInput
    /**
     * Limit how many Personas to delete.
     */
    limit?: number
  }

  /**
   * Persona.inventario
   */
  export type Persona$inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Persona.proforma
   */
  export type Persona$proformaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    where?: ProformaWhereInput
    orderBy?: ProformaOrderByWithRelationInput | ProformaOrderByWithRelationInput[]
    cursor?: ProformaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProformaScalarFieldEnum | ProformaScalarFieldEnum[]
  }

  /**
   * Persona.obra
   */
  export type Persona$obraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    where?: ObraWhereInput
    orderBy?: ObraOrderByWithRelationInput | ObraOrderByWithRelationInput[]
    cursor?: ObraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ObraScalarFieldEnum | ObraScalarFieldEnum[]
  }

  /**
   * Persona.transaccion
   */
  export type Persona$transaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    cursor?: TransaccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Persona without action
   */
  export type PersonaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
  }


  /**
   * Model Inventario
   */

  export type AggregateInventario = {
    _count: InventarioCountAggregateOutputType | null
    _avg: InventarioAvgAggregateOutputType | null
    _sum: InventarioSumAggregateOutputType | null
    _min: InventarioMinAggregateOutputType | null
    _max: InventarioMaxAggregateOutputType | null
  }

  export type InventarioAvgAggregateOutputType = {
    id: number | null
    precio: Decimal | null
    descuento: Decimal | null
    cantidad: number | null
    id_categoria: number | null
    id_ubicacion: number | null
    id_proveedor: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type InventarioSumAggregateOutputType = {
    id: number | null
    precio: Decimal | null
    descuento: Decimal | null
    cantidad: number | null
    id_categoria: number | null
    id_ubicacion: number | null
    id_proveedor: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type InventarioMinAggregateOutputType = {
    id: number | null
    precio: Decimal | null
    descuento: Decimal | null
    cantidad: number | null
    id_categoria: number | null
    id_ubicacion: number | null
    id_proveedor: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    estado: $Enums.EstadoHerramientas | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type InventarioMaxAggregateOutputType = {
    id: number | null
    precio: Decimal | null
    descuento: Decimal | null
    cantidad: number | null
    id_categoria: number | null
    id_ubicacion: number | null
    id_proveedor: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    estado: $Enums.EstadoHerramientas | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type InventarioCountAggregateOutputType = {
    id: number
    precio: number
    descuento: number
    cantidad: number
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado: number
    estado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type InventarioAvgAggregateInputType = {
    id?: true
    precio?: true
    descuento?: true
    cantidad?: true
    id_categoria?: true
    id_ubicacion?: true
    id_proveedor?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type InventarioSumAggregateInputType = {
    id?: true
    precio?: true
    descuento?: true
    cantidad?: true
    id_categoria?: true
    id_ubicacion?: true
    id_proveedor?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type InventarioMinAggregateInputType = {
    id?: true
    precio?: true
    descuento?: true
    cantidad?: true
    id_categoria?: true
    id_ubicacion?: true
    id_proveedor?: true
    estadoEliminado?: true
    estado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type InventarioMaxAggregateInputType = {
    id?: true
    precio?: true
    descuento?: true
    cantidad?: true
    id_categoria?: true
    id_ubicacion?: true
    id_proveedor?: true
    estadoEliminado?: true
    estado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type InventarioCountAggregateInputType = {
    id?: true
    precio?: true
    descuento?: true
    cantidad?: true
    id_categoria?: true
    id_ubicacion?: true
    id_proveedor?: true
    estadoEliminado?: true
    estado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type InventarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inventario to aggregate.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Inventarios
    **/
    _count?: true | InventarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventarioMaxAggregateInputType
  }

  export type GetInventarioAggregateType<T extends InventarioAggregateArgs> = {
        [P in keyof T & keyof AggregateInventario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventario[P]>
      : GetScalarType<T[P], AggregateInventario[P]>
  }




  export type InventarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithAggregationInput | InventarioOrderByWithAggregationInput[]
    by: InventarioScalarFieldEnum[] | InventarioScalarFieldEnum
    having?: InventarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventarioCountAggregateInputType | true
    _avg?: InventarioAvgAggregateInputType
    _sum?: InventarioSumAggregateInputType
    _min?: InventarioMinAggregateInputType
    _max?: InventarioMaxAggregateInputType
  }

  export type InventarioGroupByOutputType = {
    id: number
    precio: Decimal
    descuento: Decimal
    cantidad: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado: $Enums.EstadoEliminado
    estado: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: InventarioCountAggregateOutputType | null
    _avg: InventarioAvgAggregateOutputType | null
    _sum: InventarioSumAggregateOutputType | null
    _min: InventarioMinAggregateOutputType | null
    _max: InventarioMaxAggregateOutputType | null
  }

  type GetInventarioGroupByPayload<T extends InventarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventarioGroupByOutputType[P]>
            : GetScalarType<T[P], InventarioGroupByOutputType[P]>
        }
      >
    >


  export type InventarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    precio?: boolean
    descuento?: boolean
    cantidad?: boolean
    id_categoria?: boolean
    id_ubicacion?: boolean
    id_proveedor?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
    transaccion?: boolean | Inventario$transaccionArgs<ExtArgs>
    pedido?: boolean | Inventario$pedidoArgs<ExtArgs>
    proceso_herramientas?: boolean | Inventario$proceso_herramientasArgs<ExtArgs>
    proceso_inventario?: boolean | Inventario$proceso_inventarioArgs<ExtArgs>
    _count?: boolean | InventarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    precio?: boolean
    descuento?: boolean
    cantidad?: boolean
    id_categoria?: boolean
    id_ubicacion?: boolean
    id_proveedor?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    precio?: boolean
    descuento?: boolean
    cantidad?: boolean
    id_categoria?: boolean
    id_ubicacion?: boolean
    id_proveedor?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectScalar = {
    id?: boolean
    precio?: boolean
    descuento?: boolean
    cantidad?: boolean
    id_categoria?: boolean
    id_ubicacion?: boolean
    id_proveedor?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type InventarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "precio" | "descuento" | "cantidad" | "id_categoria" | "id_ubicacion" | "id_proveedor" | "estadoEliminado" | "estado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["inventario"]>
  export type InventarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
    transaccion?: boolean | Inventario$transaccionArgs<ExtArgs>
    pedido?: boolean | Inventario$pedidoArgs<ExtArgs>
    proceso_herramientas?: boolean | Inventario$proceso_herramientasArgs<ExtArgs>
    proceso_inventario?: boolean | Inventario$proceso_inventarioArgs<ExtArgs>
    _count?: boolean | InventarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InventarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }
  export type InventarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaDefaultArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }

  export type $InventarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Inventario"
    objects: {
      categoria: Prisma.$CategoriaPayload<ExtArgs>
      ubicacion: Prisma.$UbicacionPayload<ExtArgs>
      proveedor: Prisma.$PersonaPayload<ExtArgs>
      transaccion: Prisma.$transaccion_elementosPayload<ExtArgs>[]
      pedido: Prisma.$pedido_elementosPayload<ExtArgs>[]
      proceso_herramientas: Prisma.$proceso_herramientasPayload<ExtArgs>[]
      proceso_inventario: Prisma.$proceso_inventarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      precio: Prisma.Decimal
      descuento: Prisma.Decimal
      cantidad: number | null
      id_categoria: number
      id_ubicacion: number
      id_proveedor: number
      estadoEliminado: $Enums.EstadoEliminado
      estado: $Enums.EstadoHerramientas | null
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["inventario"]>
    composites: {}
  }

  type InventarioGetPayload<S extends boolean | null | undefined | InventarioDefaultArgs> = $Result.GetResult<Prisma.$InventarioPayload, S>

  type InventarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventarioCountAggregateInputType | true
    }

  export interface InventarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Inventario'], meta: { name: 'Inventario' } }
    /**
     * Find zero or one Inventario that matches the filter.
     * @param {InventarioFindUniqueArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventarioFindUniqueArgs>(args: SelectSubset<T, InventarioFindUniqueArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Inventario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventarioFindUniqueOrThrowArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventarioFindUniqueOrThrowArgs>(args: SelectSubset<T, InventarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inventario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindFirstArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventarioFindFirstArgs>(args?: SelectSubset<T, InventarioFindFirstArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inventario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindFirstOrThrowArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventarioFindFirstOrThrowArgs>(args?: SelectSubset<T, InventarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Inventarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inventarios
     * const inventarios = await prisma.inventario.findMany()
     * 
     * // Get first 10 Inventarios
     * const inventarios = await prisma.inventario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inventarioWithIdOnly = await prisma.inventario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InventarioFindManyArgs>(args?: SelectSubset<T, InventarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Inventario.
     * @param {InventarioCreateArgs} args - Arguments to create a Inventario.
     * @example
     * // Create one Inventario
     * const Inventario = await prisma.inventario.create({
     *   data: {
     *     // ... data to create a Inventario
     *   }
     * })
     * 
     */
    create<T extends InventarioCreateArgs>(args: SelectSubset<T, InventarioCreateArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Inventarios.
     * @param {InventarioCreateManyArgs} args - Arguments to create many Inventarios.
     * @example
     * // Create many Inventarios
     * const inventario = await prisma.inventario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventarioCreateManyArgs>(args?: SelectSubset<T, InventarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inventarios and returns the data saved in the database.
     * @param {InventarioCreateManyAndReturnArgs} args - Arguments to create many Inventarios.
     * @example
     * // Create many Inventarios
     * const inventario = await prisma.inventario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inventarios and only return the `id`
     * const inventarioWithIdOnly = await prisma.inventario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventarioCreateManyAndReturnArgs>(args?: SelectSubset<T, InventarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Inventario.
     * @param {InventarioDeleteArgs} args - Arguments to delete one Inventario.
     * @example
     * // Delete one Inventario
     * const Inventario = await prisma.inventario.delete({
     *   where: {
     *     // ... filter to delete one Inventario
     *   }
     * })
     * 
     */
    delete<T extends InventarioDeleteArgs>(args: SelectSubset<T, InventarioDeleteArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Inventario.
     * @param {InventarioUpdateArgs} args - Arguments to update one Inventario.
     * @example
     * // Update one Inventario
     * const inventario = await prisma.inventario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventarioUpdateArgs>(args: SelectSubset<T, InventarioUpdateArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Inventarios.
     * @param {InventarioDeleteManyArgs} args - Arguments to filter Inventarios to delete.
     * @example
     * // Delete a few Inventarios
     * const { count } = await prisma.inventario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventarioDeleteManyArgs>(args?: SelectSubset<T, InventarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inventarios
     * const inventario = await prisma.inventario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventarioUpdateManyArgs>(args: SelectSubset<T, InventarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventarios and returns the data updated in the database.
     * @param {InventarioUpdateManyAndReturnArgs} args - Arguments to update many Inventarios.
     * @example
     * // Update many Inventarios
     * const inventario = await prisma.inventario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Inventarios and only return the `id`
     * const inventarioWithIdOnly = await prisma.inventario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventarioUpdateManyAndReturnArgs>(args: SelectSubset<T, InventarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Inventario.
     * @param {InventarioUpsertArgs} args - Arguments to update or create a Inventario.
     * @example
     * // Update or create a Inventario
     * const inventario = await prisma.inventario.upsert({
     *   create: {
     *     // ... data to create a Inventario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inventario we want to update
     *   }
     * })
     */
    upsert<T extends InventarioUpsertArgs>(args: SelectSubset<T, InventarioUpsertArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioCountArgs} args - Arguments to filter Inventarios to count.
     * @example
     * // Count the number of Inventarios
     * const count = await prisma.inventario.count({
     *   where: {
     *     // ... the filter for the Inventarios we want to count
     *   }
     * })
    **/
    count<T extends InventarioCountArgs>(
      args?: Subset<T, InventarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventarioAggregateArgs>(args: Subset<T, InventarioAggregateArgs>): Prisma.PrismaPromise<GetInventarioAggregateType<T>>

    /**
     * Group by Inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventarioGroupByArgs['orderBy'] }
        : { orderBy?: InventarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Inventario model
   */
  readonly fields: InventarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Inventario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoria<T extends CategoriaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDefaultArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ubicacion<T extends UbicacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UbicacionDefaultArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transaccion<T extends Inventario$transaccionArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$transaccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedido<T extends Inventario$pedidoArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proceso_herramientas<T extends Inventario$proceso_herramientasArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$proceso_herramientasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proceso_inventario<T extends Inventario$proceso_inventarioArgs<ExtArgs> = {}>(args?: Subset<T, Inventario$proceso_inventarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Inventario model
   */
  interface InventarioFieldRefs {
    readonly id: FieldRef<"Inventario", 'Int'>
    readonly precio: FieldRef<"Inventario", 'Decimal'>
    readonly descuento: FieldRef<"Inventario", 'Decimal'>
    readonly cantidad: FieldRef<"Inventario", 'Float'>
    readonly id_categoria: FieldRef<"Inventario", 'Int'>
    readonly id_ubicacion: FieldRef<"Inventario", 'Int'>
    readonly id_proveedor: FieldRef<"Inventario", 'Int'>
    readonly estadoEliminado: FieldRef<"Inventario", 'EstadoEliminado'>
    readonly estado: FieldRef<"Inventario", 'EstadoHerramientas'>
    readonly createdBy: FieldRef<"Inventario", 'Int'>
    readonly updatedBy: FieldRef<"Inventario", 'Int'>
    readonly deletedBy: FieldRef<"Inventario", 'Int'>
    readonly createdDate: FieldRef<"Inventario", 'DateTime'>
    readonly updatedDate: FieldRef<"Inventario", 'DateTime'>
    readonly deletedDate: FieldRef<"Inventario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Inventario findUnique
   */
  export type InventarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario findUniqueOrThrow
   */
  export type InventarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario findFirst
   */
  export type InventarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inventarios.
     */
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario findFirstOrThrow
   */
  export type InventarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inventarios.
     */
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario findMany
   */
  export type InventarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventarios to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario create
   */
  export type InventarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Inventario.
     */
    data: XOR<InventarioCreateInput, InventarioUncheckedCreateInput>
  }

  /**
   * Inventario createMany
   */
  export type InventarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Inventarios.
     */
    data: InventarioCreateManyInput | InventarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Inventario createManyAndReturn
   */
  export type InventarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * The data used to create many Inventarios.
     */
    data: InventarioCreateManyInput | InventarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inventario update
   */
  export type InventarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Inventario.
     */
    data: XOR<InventarioUpdateInput, InventarioUncheckedUpdateInput>
    /**
     * Choose, which Inventario to update.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario updateMany
   */
  export type InventarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Inventarios.
     */
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyInput>
    /**
     * Filter which Inventarios to update
     */
    where?: InventarioWhereInput
    /**
     * Limit how many Inventarios to update.
     */
    limit?: number
  }

  /**
   * Inventario updateManyAndReturn
   */
  export type InventarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * The data used to update Inventarios.
     */
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyInput>
    /**
     * Filter which Inventarios to update
     */
    where?: InventarioWhereInput
    /**
     * Limit how many Inventarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inventario upsert
   */
  export type InventarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Inventario to update in case it exists.
     */
    where: InventarioWhereUniqueInput
    /**
     * In case the Inventario found by the `where` argument doesn't exist, create a new Inventario with this data.
     */
    create: XOR<InventarioCreateInput, InventarioUncheckedCreateInput>
    /**
     * In case the Inventario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventarioUpdateInput, InventarioUncheckedUpdateInput>
  }

  /**
   * Inventario delete
   */
  export type InventarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter which Inventario to delete.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario deleteMany
   */
  export type InventarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inventarios to delete
     */
    where?: InventarioWhereInput
    /**
     * Limit how many Inventarios to delete.
     */
    limit?: number
  }

  /**
   * Inventario.transaccion
   */
  export type Inventario$transaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    where?: transaccion_elementosWhereInput
    orderBy?: transaccion_elementosOrderByWithRelationInput | transaccion_elementosOrderByWithRelationInput[]
    cursor?: transaccion_elementosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Transaccion_elementosScalarFieldEnum | Transaccion_elementosScalarFieldEnum[]
  }

  /**
   * Inventario.pedido
   */
  export type Inventario$pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    where?: pedido_elementosWhereInput
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    cursor?: pedido_elementosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pedido_elementosScalarFieldEnum | Pedido_elementosScalarFieldEnum[]
  }

  /**
   * Inventario.proceso_herramientas
   */
  export type Inventario$proceso_herramientasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    where?: proceso_herramientasWhereInput
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    cursor?: proceso_herramientasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_herramientasScalarFieldEnum | Proceso_herramientasScalarFieldEnum[]
  }

  /**
   * Inventario.proceso_inventario
   */
  export type Inventario$proceso_inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    where?: proceso_inventarioWhereInput
    orderBy?: proceso_inventarioOrderByWithRelationInput | proceso_inventarioOrderByWithRelationInput[]
    cursor?: proceso_inventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_inventarioScalarFieldEnum | Proceso_inventarioScalarFieldEnum[]
  }

  /**
   * Inventario without action
   */
  export type InventarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
  }


  /**
   * Model Permiso
   */

  export type AggregatePermiso = {
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  export type PermisoAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PermisoSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PermisoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    estadoEliminado: $Enums.EstadoEliminado | null
    categoria: $Enums.CategoriasPermiso | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PermisoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    estadoEliminado: $Enums.EstadoEliminado | null
    categoria: $Enums.CategoriasPermiso | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PermisoCountAggregateOutputType = {
    id: number
    nombre: number
    estadoEliminado: number
    categoria: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type PermisoAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PermisoSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PermisoMinAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    categoria?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PermisoMaxAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    categoria?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PermisoCountAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    categoria?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type PermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permiso to aggregate.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permisos
    **/
    _count?: true | PermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoMaxAggregateInputType
  }

  export type GetPermisoAggregateType<T extends PermisoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermiso[P]>
      : GetScalarType<T[P], AggregatePermiso[P]>
  }




  export type PermisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithAggregationInput | PermisoOrderByWithAggregationInput[]
    by: PermisoScalarFieldEnum[] | PermisoScalarFieldEnum
    having?: PermisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoCountAggregateInputType | true
    _avg?: PermisoAvgAggregateInputType
    _sum?: PermisoSumAggregateInputType
    _min?: PermisoMinAggregateInputType
    _max?: PermisoMaxAggregateInputType
  }

  export type PermisoGroupByOutputType = {
    id: number
    nombre: string
    estadoEliminado: $Enums.EstadoEliminado
    categoria: $Enums.CategoriasPermiso
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  type GetPermisoGroupByPayload<T extends PermisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoGroupByOutputType[P]>
        }
      >
    >


  export type PermisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    categoria?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    posiciones?: boolean | Permiso$posicionesArgs<ExtArgs>
    _count?: boolean | PermisoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    categoria?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    categoria?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectScalar = {
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    categoria?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type PermisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "estadoEliminado" | "categoria" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["permiso"]>
  export type PermisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posiciones?: boolean | Permiso$posicionesArgs<ExtArgs>
    _count?: boolean | PermisoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permiso"
    objects: {
      posiciones: Prisma.$PosicionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      estadoEliminado: $Enums.EstadoEliminado
      categoria: $Enums.CategoriasPermiso
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["permiso"]>
    composites: {}
  }

  type PermisoGetPayload<S extends boolean | null | undefined | PermisoDefaultArgs> = $Result.GetResult<Prisma.$PermisoPayload, S>

  type PermisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoCountAggregateInputType | true
    }

  export interface PermisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permiso'], meta: { name: 'Permiso' } }
    /**
     * Find zero or one Permiso that matches the filter.
     * @param {PermisoFindUniqueArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoFindUniqueArgs>(args: SelectSubset<T, PermisoFindUniqueArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoFindUniqueOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoFindFirstArgs>(args?: SelectSubset<T, PermisoFindFirstArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permiso.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permiso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisoWithIdOnly = await prisma.permiso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermisoFindManyArgs>(args?: SelectSubset<T, PermisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permiso.
     * @param {PermisoCreateArgs} args - Arguments to create a Permiso.
     * @example
     * // Create one Permiso
     * const Permiso = await prisma.permiso.create({
     *   data: {
     *     // ... data to create a Permiso
     *   }
     * })
     * 
     */
    create<T extends PermisoCreateArgs>(args: SelectSubset<T, PermisoCreateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permisos.
     * @param {PermisoCreateManyArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoCreateManyArgs>(args?: SelectSubset<T, PermisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permisos and returns the data saved in the database.
     * @param {PermisoCreateManyAndReturnArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permiso.
     * @param {PermisoDeleteArgs} args - Arguments to delete one Permiso.
     * @example
     * // Delete one Permiso
     * const Permiso = await prisma.permiso.delete({
     *   where: {
     *     // ... filter to delete one Permiso
     *   }
     * })
     * 
     */
    delete<T extends PermisoDeleteArgs>(args: SelectSubset<T, PermisoDeleteArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permiso.
     * @param {PermisoUpdateArgs} args - Arguments to update one Permiso.
     * @example
     * // Update one Permiso
     * const permiso = await prisma.permiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoUpdateArgs>(args: SelectSubset<T, PermisoUpdateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permisos.
     * @param {PermisoDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoDeleteManyArgs>(args?: SelectSubset<T, PermisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoUpdateManyArgs>(args: SelectSubset<T, PermisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos and returns the data updated in the database.
     * @param {PermisoUpdateManyAndReturnArgs} args - Arguments to update many Permisos.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permiso.
     * @param {PermisoUpsertArgs} args - Arguments to update or create a Permiso.
     * @example
     * // Update or create a Permiso
     * const permiso = await prisma.permiso.upsert({
     *   create: {
     *     // ... data to create a Permiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permiso we want to update
     *   }
     * })
     */
    upsert<T extends PermisoUpsertArgs>(args: SelectSubset<T, PermisoUpsertArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permiso.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends PermisoCountArgs>(
      args?: Subset<T, PermisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoAggregateArgs>(args: Subset<T, PermisoAggregateArgs>): Prisma.PrismaPromise<GetPermisoAggregateType<T>>

    /**
     * Group by Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoGroupByArgs['orderBy'] }
        : { orderBy?: PermisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permiso model
   */
  readonly fields: PermisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posiciones<T extends Permiso$posicionesArgs<ExtArgs> = {}>(args?: Subset<T, Permiso$posicionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permiso model
   */
  interface PermisoFieldRefs {
    readonly id: FieldRef<"Permiso", 'Int'>
    readonly nombre: FieldRef<"Permiso", 'String'>
    readonly estadoEliminado: FieldRef<"Permiso", 'EstadoEliminado'>
    readonly categoria: FieldRef<"Permiso", 'CategoriasPermiso'>
    readonly createdBy: FieldRef<"Permiso", 'Int'>
    readonly updatedBy: FieldRef<"Permiso", 'Int'>
    readonly deletedBy: FieldRef<"Permiso", 'Int'>
    readonly createdDate: FieldRef<"Permiso", 'DateTime'>
    readonly updatedDate: FieldRef<"Permiso", 'DateTime'>
    readonly deletedDate: FieldRef<"Permiso", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Permiso findUnique
   */
  export type PermisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findUniqueOrThrow
   */
  export type PermisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findFirst
   */
  export type PermisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findFirstOrThrow
   */
  export type PermisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findMany
   */
  export type PermisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permisos to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso create
   */
  export type PermisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to create a Permiso.
     */
    data: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
  }

  /**
   * Permiso createMany
   */
  export type PermisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso createManyAndReturn
   */
  export type PermisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso update
   */
  export type PermisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to update a Permiso.
     */
    data: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
    /**
     * Choose, which Permiso to update.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso updateMany
   */
  export type PermisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso updateManyAndReturn
   */
  export type PermisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso upsert
   */
  export type PermisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The filter to search for the Permiso to update in case it exists.
     */
    where: PermisoWhereUniqueInput
    /**
     * In case the Permiso found by the `where` argument doesn't exist, create a new Permiso with this data.
     */
    create: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
    /**
     * In case the Permiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
  }

  /**
   * Permiso delete
   */
  export type PermisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter which Permiso to delete.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso deleteMany
   */
  export type PermisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permisos to delete
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to delete.
     */
    limit?: number
  }

  /**
   * Permiso.posiciones
   */
  export type Permiso$posicionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    where?: PosicionWhereInput
    orderBy?: PosicionOrderByWithRelationInput | PosicionOrderByWithRelationInput[]
    cursor?: PosicionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PosicionScalarFieldEnum | PosicionScalarFieldEnum[]
  }

  /**
   * Permiso without action
   */
  export type PermisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
  }


  /**
   * Model Posicion
   */

  export type AggregatePosicion = {
    _count: PosicionCountAggregateOutputType | null
    _avg: PosicionAvgAggregateOutputType | null
    _sum: PosicionSumAggregateOutputType | null
    _min: PosicionMinAggregateOutputType | null
    _max: PosicionMaxAggregateOutputType | null
  }

  export type PosicionAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PosicionSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PosicionMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PosicionMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PosicionCountAggregateOutputType = {
    id: number
    nombre: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type PosicionAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PosicionSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PosicionMinAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PosicionMaxAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PosicionCountAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type PosicionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posicion to aggregate.
     */
    where?: PosicionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posicions to fetch.
     */
    orderBy?: PosicionOrderByWithRelationInput | PosicionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PosicionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posicions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posicions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posicions
    **/
    _count?: true | PosicionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PosicionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PosicionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PosicionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PosicionMaxAggregateInputType
  }

  export type GetPosicionAggregateType<T extends PosicionAggregateArgs> = {
        [P in keyof T & keyof AggregatePosicion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePosicion[P]>
      : GetScalarType<T[P], AggregatePosicion[P]>
  }




  export type PosicionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PosicionWhereInput
    orderBy?: PosicionOrderByWithAggregationInput | PosicionOrderByWithAggregationInput[]
    by: PosicionScalarFieldEnum[] | PosicionScalarFieldEnum
    having?: PosicionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PosicionCountAggregateInputType | true
    _avg?: PosicionAvgAggregateInputType
    _sum?: PosicionSumAggregateInputType
    _min?: PosicionMinAggregateInputType
    _max?: PosicionMaxAggregateInputType
  }

  export type PosicionGroupByOutputType = {
    id: number
    nombre: string
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: PosicionCountAggregateOutputType | null
    _avg: PosicionAvgAggregateOutputType | null
    _sum: PosicionSumAggregateOutputType | null
    _min: PosicionMinAggregateOutputType | null
    _max: PosicionMaxAggregateOutputType | null
  }

  type GetPosicionGroupByPayload<T extends PosicionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PosicionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PosicionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PosicionGroupByOutputType[P]>
            : GetScalarType<T[P], PosicionGroupByOutputType[P]>
        }
      >
    >


  export type PosicionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    permisos?: boolean | Posicion$permisosArgs<ExtArgs>
    empleado?: boolean | Posicion$empleadoArgs<ExtArgs>
    _count?: boolean | PosicionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["posicion"]>

  export type PosicionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["posicion"]>

  export type PosicionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }, ExtArgs["result"]["posicion"]>

  export type PosicionSelectScalar = {
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type PosicionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["posicion"]>
  export type PosicionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permisos?: boolean | Posicion$permisosArgs<ExtArgs>
    empleado?: boolean | Posicion$empleadoArgs<ExtArgs>
    _count?: boolean | PosicionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PosicionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PosicionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PosicionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Posicion"
    objects: {
      permisos: Prisma.$PermisoPayload<ExtArgs>[]
      empleado: Prisma.$EmpleadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["posicion"]>
    composites: {}
  }

  type PosicionGetPayload<S extends boolean | null | undefined | PosicionDefaultArgs> = $Result.GetResult<Prisma.$PosicionPayload, S>

  type PosicionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PosicionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PosicionCountAggregateInputType | true
    }

  export interface PosicionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Posicion'], meta: { name: 'Posicion' } }
    /**
     * Find zero or one Posicion that matches the filter.
     * @param {PosicionFindUniqueArgs} args - Arguments to find a Posicion
     * @example
     * // Get one Posicion
     * const posicion = await prisma.posicion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PosicionFindUniqueArgs>(args: SelectSubset<T, PosicionFindUniqueArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Posicion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PosicionFindUniqueOrThrowArgs} args - Arguments to find a Posicion
     * @example
     * // Get one Posicion
     * const posicion = await prisma.posicion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PosicionFindUniqueOrThrowArgs>(args: SelectSubset<T, PosicionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Posicion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionFindFirstArgs} args - Arguments to find a Posicion
     * @example
     * // Get one Posicion
     * const posicion = await prisma.posicion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PosicionFindFirstArgs>(args?: SelectSubset<T, PosicionFindFirstArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Posicion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionFindFirstOrThrowArgs} args - Arguments to find a Posicion
     * @example
     * // Get one Posicion
     * const posicion = await prisma.posicion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PosicionFindFirstOrThrowArgs>(args?: SelectSubset<T, PosicionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posicions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posicions
     * const posicions = await prisma.posicion.findMany()
     * 
     * // Get first 10 Posicions
     * const posicions = await prisma.posicion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const posicionWithIdOnly = await prisma.posicion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PosicionFindManyArgs>(args?: SelectSubset<T, PosicionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Posicion.
     * @param {PosicionCreateArgs} args - Arguments to create a Posicion.
     * @example
     * // Create one Posicion
     * const Posicion = await prisma.posicion.create({
     *   data: {
     *     // ... data to create a Posicion
     *   }
     * })
     * 
     */
    create<T extends PosicionCreateArgs>(args: SelectSubset<T, PosicionCreateArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posicions.
     * @param {PosicionCreateManyArgs} args - Arguments to create many Posicions.
     * @example
     * // Create many Posicions
     * const posicion = await prisma.posicion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PosicionCreateManyArgs>(args?: SelectSubset<T, PosicionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posicions and returns the data saved in the database.
     * @param {PosicionCreateManyAndReturnArgs} args - Arguments to create many Posicions.
     * @example
     * // Create many Posicions
     * const posicion = await prisma.posicion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posicions and only return the `id`
     * const posicionWithIdOnly = await prisma.posicion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PosicionCreateManyAndReturnArgs>(args?: SelectSubset<T, PosicionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Posicion.
     * @param {PosicionDeleteArgs} args - Arguments to delete one Posicion.
     * @example
     * // Delete one Posicion
     * const Posicion = await prisma.posicion.delete({
     *   where: {
     *     // ... filter to delete one Posicion
     *   }
     * })
     * 
     */
    delete<T extends PosicionDeleteArgs>(args: SelectSubset<T, PosicionDeleteArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Posicion.
     * @param {PosicionUpdateArgs} args - Arguments to update one Posicion.
     * @example
     * // Update one Posicion
     * const posicion = await prisma.posicion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PosicionUpdateArgs>(args: SelectSubset<T, PosicionUpdateArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posicions.
     * @param {PosicionDeleteManyArgs} args - Arguments to filter Posicions to delete.
     * @example
     * // Delete a few Posicions
     * const { count } = await prisma.posicion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PosicionDeleteManyArgs>(args?: SelectSubset<T, PosicionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posicions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posicions
     * const posicion = await prisma.posicion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PosicionUpdateManyArgs>(args: SelectSubset<T, PosicionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posicions and returns the data updated in the database.
     * @param {PosicionUpdateManyAndReturnArgs} args - Arguments to update many Posicions.
     * @example
     * // Update many Posicions
     * const posicion = await prisma.posicion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Posicions and only return the `id`
     * const posicionWithIdOnly = await prisma.posicion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PosicionUpdateManyAndReturnArgs>(args: SelectSubset<T, PosicionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Posicion.
     * @param {PosicionUpsertArgs} args - Arguments to update or create a Posicion.
     * @example
     * // Update or create a Posicion
     * const posicion = await prisma.posicion.upsert({
     *   create: {
     *     // ... data to create a Posicion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Posicion we want to update
     *   }
     * })
     */
    upsert<T extends PosicionUpsertArgs>(args: SelectSubset<T, PosicionUpsertArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posicions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionCountArgs} args - Arguments to filter Posicions to count.
     * @example
     * // Count the number of Posicions
     * const count = await prisma.posicion.count({
     *   where: {
     *     // ... the filter for the Posicions we want to count
     *   }
     * })
    **/
    count<T extends PosicionCountArgs>(
      args?: Subset<T, PosicionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PosicionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Posicion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PosicionAggregateArgs>(args: Subset<T, PosicionAggregateArgs>): Prisma.PrismaPromise<GetPosicionAggregateType<T>>

    /**
     * Group by Posicion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PosicionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PosicionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PosicionGroupByArgs['orderBy'] }
        : { orderBy?: PosicionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PosicionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPosicionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Posicion model
   */
  readonly fields: PosicionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Posicion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PosicionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permisos<T extends Posicion$permisosArgs<ExtArgs> = {}>(args?: Subset<T, Posicion$permisosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    empleado<T extends Posicion$empleadoArgs<ExtArgs> = {}>(args?: Subset<T, Posicion$empleadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Posicion model
   */
  interface PosicionFieldRefs {
    readonly id: FieldRef<"Posicion", 'Int'>
    readonly nombre: FieldRef<"Posicion", 'String'>
    readonly estadoEliminado: FieldRef<"Posicion", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Posicion", 'Int'>
    readonly updatedBy: FieldRef<"Posicion", 'Int'>
    readonly deletedBy: FieldRef<"Posicion", 'Int'>
    readonly createdDate: FieldRef<"Posicion", 'DateTime'>
    readonly updatedDate: FieldRef<"Posicion", 'DateTime'>
    readonly deletedDate: FieldRef<"Posicion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Posicion findUnique
   */
  export type PosicionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * Filter, which Posicion to fetch.
     */
    where: PosicionWhereUniqueInput
  }

  /**
   * Posicion findUniqueOrThrow
   */
  export type PosicionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * Filter, which Posicion to fetch.
     */
    where: PosicionWhereUniqueInput
  }

  /**
   * Posicion findFirst
   */
  export type PosicionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * Filter, which Posicion to fetch.
     */
    where?: PosicionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posicions to fetch.
     */
    orderBy?: PosicionOrderByWithRelationInput | PosicionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posicions.
     */
    cursor?: PosicionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posicions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posicions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posicions.
     */
    distinct?: PosicionScalarFieldEnum | PosicionScalarFieldEnum[]
  }

  /**
   * Posicion findFirstOrThrow
   */
  export type PosicionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * Filter, which Posicion to fetch.
     */
    where?: PosicionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posicions to fetch.
     */
    orderBy?: PosicionOrderByWithRelationInput | PosicionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posicions.
     */
    cursor?: PosicionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posicions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posicions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posicions.
     */
    distinct?: PosicionScalarFieldEnum | PosicionScalarFieldEnum[]
  }

  /**
   * Posicion findMany
   */
  export type PosicionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * Filter, which Posicions to fetch.
     */
    where?: PosicionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posicions to fetch.
     */
    orderBy?: PosicionOrderByWithRelationInput | PosicionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posicions.
     */
    cursor?: PosicionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posicions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posicions.
     */
    skip?: number
    distinct?: PosicionScalarFieldEnum | PosicionScalarFieldEnum[]
  }

  /**
   * Posicion create
   */
  export type PosicionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * The data needed to create a Posicion.
     */
    data: XOR<PosicionCreateInput, PosicionUncheckedCreateInput>
  }

  /**
   * Posicion createMany
   */
  export type PosicionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posicions.
     */
    data: PosicionCreateManyInput | PosicionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Posicion createManyAndReturn
   */
  export type PosicionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * The data used to create many Posicions.
     */
    data: PosicionCreateManyInput | PosicionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Posicion update
   */
  export type PosicionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * The data needed to update a Posicion.
     */
    data: XOR<PosicionUpdateInput, PosicionUncheckedUpdateInput>
    /**
     * Choose, which Posicion to update.
     */
    where: PosicionWhereUniqueInput
  }

  /**
   * Posicion updateMany
   */
  export type PosicionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posicions.
     */
    data: XOR<PosicionUpdateManyMutationInput, PosicionUncheckedUpdateManyInput>
    /**
     * Filter which Posicions to update
     */
    where?: PosicionWhereInput
    /**
     * Limit how many Posicions to update.
     */
    limit?: number
  }

  /**
   * Posicion updateManyAndReturn
   */
  export type PosicionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * The data used to update Posicions.
     */
    data: XOR<PosicionUpdateManyMutationInput, PosicionUncheckedUpdateManyInput>
    /**
     * Filter which Posicions to update
     */
    where?: PosicionWhereInput
    /**
     * Limit how many Posicions to update.
     */
    limit?: number
  }

  /**
   * Posicion upsert
   */
  export type PosicionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * The filter to search for the Posicion to update in case it exists.
     */
    where: PosicionWhereUniqueInput
    /**
     * In case the Posicion found by the `where` argument doesn't exist, create a new Posicion with this data.
     */
    create: XOR<PosicionCreateInput, PosicionUncheckedCreateInput>
    /**
     * In case the Posicion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PosicionUpdateInput, PosicionUncheckedUpdateInput>
  }

  /**
   * Posicion delete
   */
  export type PosicionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
    /**
     * Filter which Posicion to delete.
     */
    where: PosicionWhereUniqueInput
  }

  /**
   * Posicion deleteMany
   */
  export type PosicionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posicions to delete
     */
    where?: PosicionWhereInput
    /**
     * Limit how many Posicions to delete.
     */
    limit?: number
  }

  /**
   * Posicion.permisos
   */
  export type Posicion$permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    cursor?: PermisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Posicion.empleado
   */
  export type Posicion$empleadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    where?: EmpleadoWhereInput
    orderBy?: EmpleadoOrderByWithRelationInput | EmpleadoOrderByWithRelationInput[]
    cursor?: EmpleadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * Posicion without action
   */
  export type PosicionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Posicion
     */
    select?: PosicionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Posicion
     */
    omit?: PosicionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PosicionInclude<ExtArgs> | null
  }


  /**
   * Model Empleado
   */

  export type AggregateEmpleado = {
    _count: EmpleadoCountAggregateOutputType | null
    _avg: EmpleadoAvgAggregateOutputType | null
    _sum: EmpleadoSumAggregateOutputType | null
    _min: EmpleadoMinAggregateOutputType | null
    _max: EmpleadoMaxAggregateOutputType | null
  }

  export type EmpleadoAvgAggregateOutputType = {
    id: number | null
    sueldo: Decimal | null
    latActual: Decimal | null
    lngActual: Decimal | null
    id_posicion: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type EmpleadoSumAggregateOutputType = {
    id: number | null
    sueldo: Decimal | null
    latActual: Decimal | null
    lngActual: Decimal | null
    id_posicion: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type EmpleadoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    cedula: string | null
    mail: string | null
    telefono: string | null
    sueldo: Decimal | null
    password: string | null
    latActual: Decimal | null
    lngActual: Decimal | null
    fecha_inicio: Date | null
    id_posicion: number | null
    estado: $Enums.EstadoTrabajador | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type EmpleadoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    cedula: string | null
    mail: string | null
    telefono: string | null
    sueldo: Decimal | null
    password: string | null
    latActual: Decimal | null
    lngActual: Decimal | null
    fecha_inicio: Date | null
    id_posicion: number | null
    estado: $Enums.EstadoTrabajador | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type EmpleadoCountAggregateOutputType = {
    id: number
    nombre: number
    cedula: number
    mail: number
    telefono: number
    sueldo: number
    password: number
    latActual: number
    lngActual: number
    fecha_inicio: number
    id_posicion: number
    estado: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type EmpleadoAvgAggregateInputType = {
    id?: true
    sueldo?: true
    latActual?: true
    lngActual?: true
    id_posicion?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type EmpleadoSumAggregateInputType = {
    id?: true
    sueldo?: true
    latActual?: true
    lngActual?: true
    id_posicion?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type EmpleadoMinAggregateInputType = {
    id?: true
    nombre?: true
    cedula?: true
    mail?: true
    telefono?: true
    sueldo?: true
    password?: true
    latActual?: true
    lngActual?: true
    fecha_inicio?: true
    id_posicion?: true
    estado?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type EmpleadoMaxAggregateInputType = {
    id?: true
    nombre?: true
    cedula?: true
    mail?: true
    telefono?: true
    sueldo?: true
    password?: true
    latActual?: true
    lngActual?: true
    fecha_inicio?: true
    id_posicion?: true
    estado?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type EmpleadoCountAggregateInputType = {
    id?: true
    nombre?: true
    cedula?: true
    mail?: true
    telefono?: true
    sueldo?: true
    password?: true
    latActual?: true
    lngActual?: true
    fecha_inicio?: true
    id_posicion?: true
    estado?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type EmpleadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empleado to aggregate.
     */
    where?: EmpleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empleados to fetch.
     */
    orderBy?: EmpleadoOrderByWithRelationInput | EmpleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmpleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Empleados
    **/
    _count?: true | EmpleadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpleadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpleadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpleadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpleadoMaxAggregateInputType
  }

  export type GetEmpleadoAggregateType<T extends EmpleadoAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpleado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpleado[P]>
      : GetScalarType<T[P], AggregateEmpleado[P]>
  }




  export type EmpleadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpleadoWhereInput
    orderBy?: EmpleadoOrderByWithAggregationInput | EmpleadoOrderByWithAggregationInput[]
    by: EmpleadoScalarFieldEnum[] | EmpleadoScalarFieldEnum
    having?: EmpleadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpleadoCountAggregateInputType | true
    _avg?: EmpleadoAvgAggregateInputType
    _sum?: EmpleadoSumAggregateInputType
    _min?: EmpleadoMinAggregateInputType
    _max?: EmpleadoMaxAggregateInputType
  }

  export type EmpleadoGroupByOutputType = {
    id: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal
    password: string
    latActual: Decimal | null
    lngActual: Decimal | null
    fecha_inicio: Date
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: EmpleadoCountAggregateOutputType | null
    _avg: EmpleadoAvgAggregateOutputType | null
    _sum: EmpleadoSumAggregateOutputType | null
    _min: EmpleadoMinAggregateOutputType | null
    _max: EmpleadoMaxAggregateOutputType | null
  }

  type GetEmpleadoGroupByPayload<T extends EmpleadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpleadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpleadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpleadoGroupByOutputType[P]>
            : GetScalarType<T[P], EmpleadoGroupByOutputType[P]>
        }
      >
    >


  export type EmpleadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cedula?: boolean
    mail?: boolean
    telefono?: boolean
    sueldo?: boolean
    password?: boolean
    latActual?: boolean
    lngActual?: boolean
    fecha_inicio?: boolean
    id_posicion?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    posicion?: boolean | PosicionDefaultArgs<ExtArgs>
    transaccion?: boolean | Empleado$transaccionArgs<ExtArgs>
    pedido?: boolean | Empleado$pedidoArgs<ExtArgs>
    proceso?: boolean | Empleado$procesoArgs<ExtArgs>
    ubicacion?: boolean | Empleado$ubicacionArgs<ExtArgs>
    mensajesEnviados?: boolean | Empleado$mensajesEnviadosArgs<ExtArgs>
    mensajesRecibidos?: boolean | Empleado$mensajesRecibidosArgs<ExtArgs>
    tareasAsignadas?: boolean | Empleado$tareasAsignadasArgs<ExtArgs>
    tareasRecibidas?: boolean | Empleado$tareasRecibidasArgs<ExtArgs>
    _count?: boolean | EmpleadoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleado"]>

  export type EmpleadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cedula?: boolean
    mail?: boolean
    telefono?: boolean
    sueldo?: boolean
    password?: boolean
    latActual?: boolean
    lngActual?: boolean
    fecha_inicio?: boolean
    id_posicion?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    posicion?: boolean | PosicionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleado"]>

  export type EmpleadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cedula?: boolean
    mail?: boolean
    telefono?: boolean
    sueldo?: boolean
    password?: boolean
    latActual?: boolean
    lngActual?: boolean
    fecha_inicio?: boolean
    id_posicion?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    posicion?: boolean | PosicionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empleado"]>

  export type EmpleadoSelectScalar = {
    id?: boolean
    nombre?: boolean
    cedula?: boolean
    mail?: boolean
    telefono?: boolean
    sueldo?: boolean
    password?: boolean
    latActual?: boolean
    lngActual?: boolean
    fecha_inicio?: boolean
    id_posicion?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type EmpleadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "cedula" | "mail" | "telefono" | "sueldo" | "password" | "latActual" | "lngActual" | "fecha_inicio" | "id_posicion" | "estado" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["empleado"]>
  export type EmpleadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posicion?: boolean | PosicionDefaultArgs<ExtArgs>
    transaccion?: boolean | Empleado$transaccionArgs<ExtArgs>
    pedido?: boolean | Empleado$pedidoArgs<ExtArgs>
    proceso?: boolean | Empleado$procesoArgs<ExtArgs>
    ubicacion?: boolean | Empleado$ubicacionArgs<ExtArgs>
    mensajesEnviados?: boolean | Empleado$mensajesEnviadosArgs<ExtArgs>
    mensajesRecibidos?: boolean | Empleado$mensajesRecibidosArgs<ExtArgs>
    tareasAsignadas?: boolean | Empleado$tareasAsignadasArgs<ExtArgs>
    tareasRecibidas?: boolean | Empleado$tareasRecibidasArgs<ExtArgs>
    _count?: boolean | EmpleadoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EmpleadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posicion?: boolean | PosicionDefaultArgs<ExtArgs>
  }
  export type EmpleadoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posicion?: boolean | PosicionDefaultArgs<ExtArgs>
  }

  export type $EmpleadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Empleado"
    objects: {
      posicion: Prisma.$PosicionPayload<ExtArgs>
      transaccion: Prisma.$TransaccionPayload<ExtArgs>[]
      pedido: Prisma.$pedido_elementosPayload<ExtArgs>[]
      proceso: Prisma.$proceso_empleadosPayload<ExtArgs>[]
      ubicacion: Prisma.$ubicacion_empleadoPayload<ExtArgs>[]
      mensajesEnviados: Prisma.$MensajePayload<ExtArgs>[]
      mensajesRecibidos: Prisma.$MensajePayload<ExtArgs>[]
      tareasAsignadas: Prisma.$TareaPayload<ExtArgs>[]
      tareasRecibidas: Prisma.$TareaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      cedula: string
      mail: string
      telefono: string
      sueldo: Prisma.Decimal
      password: string
      latActual: Prisma.Decimal | null
      lngActual: Prisma.Decimal | null
      fecha_inicio: Date
      id_posicion: number
      estado: $Enums.EstadoTrabajador
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["empleado"]>
    composites: {}
  }

  type EmpleadoGetPayload<S extends boolean | null | undefined | EmpleadoDefaultArgs> = $Result.GetResult<Prisma.$EmpleadoPayload, S>

  type EmpleadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmpleadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpleadoCountAggregateInputType | true
    }

  export interface EmpleadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Empleado'], meta: { name: 'Empleado' } }
    /**
     * Find zero or one Empleado that matches the filter.
     * @param {EmpleadoFindUniqueArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmpleadoFindUniqueArgs>(args: SelectSubset<T, EmpleadoFindUniqueArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empleado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmpleadoFindUniqueOrThrowArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmpleadoFindUniqueOrThrowArgs>(args: SelectSubset<T, EmpleadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empleado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoFindFirstArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmpleadoFindFirstArgs>(args?: SelectSubset<T, EmpleadoFindFirstArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empleado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoFindFirstOrThrowArgs} args - Arguments to find a Empleado
     * @example
     * // Get one Empleado
     * const empleado = await prisma.empleado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmpleadoFindFirstOrThrowArgs>(args?: SelectSubset<T, EmpleadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empleados
     * const empleados = await prisma.empleado.findMany()
     * 
     * // Get first 10 Empleados
     * const empleados = await prisma.empleado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const empleadoWithIdOnly = await prisma.empleado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmpleadoFindManyArgs>(args?: SelectSubset<T, EmpleadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empleado.
     * @param {EmpleadoCreateArgs} args - Arguments to create a Empleado.
     * @example
     * // Create one Empleado
     * const Empleado = await prisma.empleado.create({
     *   data: {
     *     // ... data to create a Empleado
     *   }
     * })
     * 
     */
    create<T extends EmpleadoCreateArgs>(args: SelectSubset<T, EmpleadoCreateArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empleados.
     * @param {EmpleadoCreateManyArgs} args - Arguments to create many Empleados.
     * @example
     * // Create many Empleados
     * const empleado = await prisma.empleado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmpleadoCreateManyArgs>(args?: SelectSubset<T, EmpleadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Empleados and returns the data saved in the database.
     * @param {EmpleadoCreateManyAndReturnArgs} args - Arguments to create many Empleados.
     * @example
     * // Create many Empleados
     * const empleado = await prisma.empleado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Empleados and only return the `id`
     * const empleadoWithIdOnly = await prisma.empleado.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmpleadoCreateManyAndReturnArgs>(args?: SelectSubset<T, EmpleadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Empleado.
     * @param {EmpleadoDeleteArgs} args - Arguments to delete one Empleado.
     * @example
     * // Delete one Empleado
     * const Empleado = await prisma.empleado.delete({
     *   where: {
     *     // ... filter to delete one Empleado
     *   }
     * })
     * 
     */
    delete<T extends EmpleadoDeleteArgs>(args: SelectSubset<T, EmpleadoDeleteArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empleado.
     * @param {EmpleadoUpdateArgs} args - Arguments to update one Empleado.
     * @example
     * // Update one Empleado
     * const empleado = await prisma.empleado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmpleadoUpdateArgs>(args: SelectSubset<T, EmpleadoUpdateArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empleados.
     * @param {EmpleadoDeleteManyArgs} args - Arguments to filter Empleados to delete.
     * @example
     * // Delete a few Empleados
     * const { count } = await prisma.empleado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmpleadoDeleteManyArgs>(args?: SelectSubset<T, EmpleadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empleados
     * const empleado = await prisma.empleado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmpleadoUpdateManyArgs>(args: SelectSubset<T, EmpleadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empleados and returns the data updated in the database.
     * @param {EmpleadoUpdateManyAndReturnArgs} args - Arguments to update many Empleados.
     * @example
     * // Update many Empleados
     * const empleado = await prisma.empleado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Empleados and only return the `id`
     * const empleadoWithIdOnly = await prisma.empleado.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmpleadoUpdateManyAndReturnArgs>(args: SelectSubset<T, EmpleadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Empleado.
     * @param {EmpleadoUpsertArgs} args - Arguments to update or create a Empleado.
     * @example
     * // Update or create a Empleado
     * const empleado = await prisma.empleado.upsert({
     *   create: {
     *     // ... data to create a Empleado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empleado we want to update
     *   }
     * })
     */
    upsert<T extends EmpleadoUpsertArgs>(args: SelectSubset<T, EmpleadoUpsertArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoCountArgs} args - Arguments to filter Empleados to count.
     * @example
     * // Count the number of Empleados
     * const count = await prisma.empleado.count({
     *   where: {
     *     // ... the filter for the Empleados we want to count
     *   }
     * })
    **/
    count<T extends EmpleadoCountArgs>(
      args?: Subset<T, EmpleadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpleadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpleadoAggregateArgs>(args: Subset<T, EmpleadoAggregateArgs>): Prisma.PrismaPromise<GetEmpleadoAggregateType<T>>

    /**
     * Group by Empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpleadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmpleadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmpleadoGroupByArgs['orderBy'] }
        : { orderBy?: EmpleadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmpleadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpleadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Empleado model
   */
  readonly fields: EmpleadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Empleado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmpleadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posicion<T extends PosicionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PosicionDefaultArgs<ExtArgs>>): Prisma__PosicionClient<$Result.GetResult<Prisma.$PosicionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transaccion<T extends Empleado$transaccionArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$transaccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedido<T extends Empleado$pedidoArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proceso<T extends Empleado$procesoArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$procesoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ubicacion<T extends Empleado$ubicacionArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$ubicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mensajesEnviados<T extends Empleado$mensajesEnviadosArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$mensajesEnviadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mensajesRecibidos<T extends Empleado$mensajesRecibidosArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$mensajesRecibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tareasAsignadas<T extends Empleado$tareasAsignadasArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$tareasAsignadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tareasRecibidas<T extends Empleado$tareasRecibidasArgs<ExtArgs> = {}>(args?: Subset<T, Empleado$tareasRecibidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Empleado model
   */
  interface EmpleadoFieldRefs {
    readonly id: FieldRef<"Empleado", 'Int'>
    readonly nombre: FieldRef<"Empleado", 'String'>
    readonly cedula: FieldRef<"Empleado", 'String'>
    readonly mail: FieldRef<"Empleado", 'String'>
    readonly telefono: FieldRef<"Empleado", 'String'>
    readonly sueldo: FieldRef<"Empleado", 'Decimal'>
    readonly password: FieldRef<"Empleado", 'String'>
    readonly latActual: FieldRef<"Empleado", 'Decimal'>
    readonly lngActual: FieldRef<"Empleado", 'Decimal'>
    readonly fecha_inicio: FieldRef<"Empleado", 'DateTime'>
    readonly id_posicion: FieldRef<"Empleado", 'Int'>
    readonly estado: FieldRef<"Empleado", 'EstadoTrabajador'>
    readonly estadoEliminado: FieldRef<"Empleado", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Empleado", 'Int'>
    readonly updatedBy: FieldRef<"Empleado", 'Int'>
    readonly deletedBy: FieldRef<"Empleado", 'Int'>
    readonly createdDate: FieldRef<"Empleado", 'DateTime'>
    readonly updatedDate: FieldRef<"Empleado", 'DateTime'>
    readonly deletedDate: FieldRef<"Empleado", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Empleado findUnique
   */
  export type EmpleadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * Filter, which Empleado to fetch.
     */
    where: EmpleadoWhereUniqueInput
  }

  /**
   * Empleado findUniqueOrThrow
   */
  export type EmpleadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * Filter, which Empleado to fetch.
     */
    where: EmpleadoWhereUniqueInput
  }

  /**
   * Empleado findFirst
   */
  export type EmpleadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * Filter, which Empleado to fetch.
     */
    where?: EmpleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empleados to fetch.
     */
    orderBy?: EmpleadoOrderByWithRelationInput | EmpleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empleados.
     */
    cursor?: EmpleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empleados.
     */
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * Empleado findFirstOrThrow
   */
  export type EmpleadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * Filter, which Empleado to fetch.
     */
    where?: EmpleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empleados to fetch.
     */
    orderBy?: EmpleadoOrderByWithRelationInput | EmpleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empleados.
     */
    cursor?: EmpleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empleados.
     */
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * Empleado findMany
   */
  export type EmpleadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * Filter, which Empleados to fetch.
     */
    where?: EmpleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empleados to fetch.
     */
    orderBy?: EmpleadoOrderByWithRelationInput | EmpleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Empleados.
     */
    cursor?: EmpleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empleados.
     */
    skip?: number
    distinct?: EmpleadoScalarFieldEnum | EmpleadoScalarFieldEnum[]
  }

  /**
   * Empleado create
   */
  export type EmpleadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * The data needed to create a Empleado.
     */
    data: XOR<EmpleadoCreateInput, EmpleadoUncheckedCreateInput>
  }

  /**
   * Empleado createMany
   */
  export type EmpleadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Empleados.
     */
    data: EmpleadoCreateManyInput | EmpleadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Empleado createManyAndReturn
   */
  export type EmpleadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * The data used to create many Empleados.
     */
    data: EmpleadoCreateManyInput | EmpleadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Empleado update
   */
  export type EmpleadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * The data needed to update a Empleado.
     */
    data: XOR<EmpleadoUpdateInput, EmpleadoUncheckedUpdateInput>
    /**
     * Choose, which Empleado to update.
     */
    where: EmpleadoWhereUniqueInput
  }

  /**
   * Empleado updateMany
   */
  export type EmpleadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Empleados.
     */
    data: XOR<EmpleadoUpdateManyMutationInput, EmpleadoUncheckedUpdateManyInput>
    /**
     * Filter which Empleados to update
     */
    where?: EmpleadoWhereInput
    /**
     * Limit how many Empleados to update.
     */
    limit?: number
  }

  /**
   * Empleado updateManyAndReturn
   */
  export type EmpleadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * The data used to update Empleados.
     */
    data: XOR<EmpleadoUpdateManyMutationInput, EmpleadoUncheckedUpdateManyInput>
    /**
     * Filter which Empleados to update
     */
    where?: EmpleadoWhereInput
    /**
     * Limit how many Empleados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Empleado upsert
   */
  export type EmpleadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * The filter to search for the Empleado to update in case it exists.
     */
    where: EmpleadoWhereUniqueInput
    /**
     * In case the Empleado found by the `where` argument doesn't exist, create a new Empleado with this data.
     */
    create: XOR<EmpleadoCreateInput, EmpleadoUncheckedCreateInput>
    /**
     * In case the Empleado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmpleadoUpdateInput, EmpleadoUncheckedUpdateInput>
  }

  /**
   * Empleado delete
   */
  export type EmpleadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    /**
     * Filter which Empleado to delete.
     */
    where: EmpleadoWhereUniqueInput
  }

  /**
   * Empleado deleteMany
   */
  export type EmpleadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empleados to delete
     */
    where?: EmpleadoWhereInput
    /**
     * Limit how many Empleados to delete.
     */
    limit?: number
  }

  /**
   * Empleado.transaccion
   */
  export type Empleado$transaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    cursor?: TransaccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Empleado.pedido
   */
  export type Empleado$pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    where?: pedido_elementosWhereInput
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    cursor?: pedido_elementosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pedido_elementosScalarFieldEnum | Pedido_elementosScalarFieldEnum[]
  }

  /**
   * Empleado.proceso
   */
  export type Empleado$procesoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    where?: proceso_empleadosWhereInput
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    cursor?: proceso_empleadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_empleadosScalarFieldEnum | Proceso_empleadosScalarFieldEnum[]
  }

  /**
   * Empleado.ubicacion
   */
  export type Empleado$ubicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    where?: ubicacion_empleadoWhereInput
    orderBy?: ubicacion_empleadoOrderByWithRelationInput | ubicacion_empleadoOrderByWithRelationInput[]
    cursor?: ubicacion_empleadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ubicacion_empleadoScalarFieldEnum | Ubicacion_empleadoScalarFieldEnum[]
  }

  /**
   * Empleado.mensajesEnviados
   */
  export type Empleado$mensajesEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    cursor?: MensajeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Empleado.mensajesRecibidos
   */
  export type Empleado$mensajesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    cursor?: MensajeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Empleado.tareasAsignadas
   */
  export type Empleado$tareasAsignadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    where?: TareaWhereInput
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    cursor?: TareaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Empleado.tareasRecibidas
   */
  export type Empleado$tareasRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    where?: TareaWhereInput
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    cursor?: TareaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Empleado without action
   */
  export type EmpleadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
  }


  /**
   * Model Mensaje
   */

  export type AggregateMensaje = {
    _count: MensajeCountAggregateOutputType | null
    _avg: MensajeAvgAggregateOutputType | null
    _sum: MensajeSumAggregateOutputType | null
    _min: MensajeMinAggregateOutputType | null
    _max: MensajeMaxAggregateOutputType | null
  }

  export type MensajeAvgAggregateOutputType = {
    id: number | null
    id_remitente: number | null
    id_destinario: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type MensajeSumAggregateOutputType = {
    id: number | null
    id_remitente: number | null
    id_destinario: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type MensajeMinAggregateOutputType = {
    id: number | null
    texto: string | null
    titulo: string | null
    fecha: Date | null
    tipo: $Enums.CategoriaMensajes | null
    estadoEliminado: $Enums.EstadoEliminado | null
    estado: $Enums.EstadoMensaje | null
    id_remitente: number | null
    id_destinario: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type MensajeMaxAggregateOutputType = {
    id: number | null
    texto: string | null
    titulo: string | null
    fecha: Date | null
    tipo: $Enums.CategoriaMensajes | null
    estadoEliminado: $Enums.EstadoEliminado | null
    estado: $Enums.EstadoMensaje | null
    id_remitente: number | null
    id_destinario: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type MensajeCountAggregateOutputType = {
    id: number
    texto: number
    titulo: number
    fecha: number
    tipo: number
    estadoEliminado: number
    estado: number
    id_remitente: number
    id_destinario: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type MensajeAvgAggregateInputType = {
    id?: true
    id_remitente?: true
    id_destinario?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type MensajeSumAggregateInputType = {
    id?: true
    id_remitente?: true
    id_destinario?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type MensajeMinAggregateInputType = {
    id?: true
    texto?: true
    titulo?: true
    fecha?: true
    tipo?: true
    estadoEliminado?: true
    estado?: true
    id_remitente?: true
    id_destinario?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type MensajeMaxAggregateInputType = {
    id?: true
    texto?: true
    titulo?: true
    fecha?: true
    tipo?: true
    estadoEliminado?: true
    estado?: true
    id_remitente?: true
    id_destinario?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type MensajeCountAggregateInputType = {
    id?: true
    texto?: true
    titulo?: true
    fecha?: true
    tipo?: true
    estadoEliminado?: true
    estado?: true
    id_remitente?: true
    id_destinario?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type MensajeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mensaje to aggregate.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mensajes
    **/
    _count?: true | MensajeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MensajeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MensajeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MensajeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MensajeMaxAggregateInputType
  }

  export type GetMensajeAggregateType<T extends MensajeAggregateArgs> = {
        [P in keyof T & keyof AggregateMensaje]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMensaje[P]>
      : GetScalarType<T[P], AggregateMensaje[P]>
  }




  export type MensajeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithAggregationInput | MensajeOrderByWithAggregationInput[]
    by: MensajeScalarFieldEnum[] | MensajeScalarFieldEnum
    having?: MensajeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MensajeCountAggregateInputType | true
    _avg?: MensajeAvgAggregateInputType
    _sum?: MensajeSumAggregateInputType
    _min?: MensajeMinAggregateInputType
    _max?: MensajeMaxAggregateInputType
  }

  export type MensajeGroupByOutputType = {
    id: number
    texto: string
    titulo: string
    fecha: Date
    tipo: $Enums.CategoriaMensajes
    estadoEliminado: $Enums.EstadoEliminado
    estado: $Enums.EstadoMensaje
    id_remitente: number
    id_destinario: number
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: MensajeCountAggregateOutputType | null
    _avg: MensajeAvgAggregateOutputType | null
    _sum: MensajeSumAggregateOutputType | null
    _min: MensajeMinAggregateOutputType | null
    _max: MensajeMaxAggregateOutputType | null
  }

  type GetMensajeGroupByPayload<T extends MensajeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MensajeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MensajeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MensajeGroupByOutputType[P]>
            : GetScalarType<T[P], MensajeGroupByOutputType[P]>
        }
      >
    >


  export type MensajeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    titulo?: boolean
    fecha?: boolean
    tipo?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    id_remitente?: boolean
    id_destinario?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    remitente?: boolean | EmpleadoDefaultArgs<ExtArgs>
    destinatario?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensaje"]>

  export type MensajeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    titulo?: boolean
    fecha?: boolean
    tipo?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    id_remitente?: boolean
    id_destinario?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    remitente?: boolean | EmpleadoDefaultArgs<ExtArgs>
    destinatario?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensaje"]>

  export type MensajeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    titulo?: boolean
    fecha?: boolean
    tipo?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    id_remitente?: boolean
    id_destinario?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    remitente?: boolean | EmpleadoDefaultArgs<ExtArgs>
    destinatario?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensaje"]>

  export type MensajeSelectScalar = {
    id?: boolean
    texto?: boolean
    titulo?: boolean
    fecha?: boolean
    tipo?: boolean
    estadoEliminado?: boolean
    estado?: boolean
    id_remitente?: boolean
    id_destinario?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type MensajeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "texto" | "titulo" | "fecha" | "tipo" | "estadoEliminado" | "estado" | "id_remitente" | "id_destinario" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["mensaje"]>
  export type MensajeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | EmpleadoDefaultArgs<ExtArgs>
    destinatario?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type MensajeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | EmpleadoDefaultArgs<ExtArgs>
    destinatario?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type MensajeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | EmpleadoDefaultArgs<ExtArgs>
    destinatario?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }

  export type $MensajePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mensaje"
    objects: {
      remitente: Prisma.$EmpleadoPayload<ExtArgs>
      destinatario: Prisma.$EmpleadoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      texto: string
      titulo: string
      fecha: Date
      tipo: $Enums.CategoriaMensajes
      estadoEliminado: $Enums.EstadoEliminado
      estado: $Enums.EstadoMensaje
      id_remitente: number
      id_destinario: number
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["mensaje"]>
    composites: {}
  }

  type MensajeGetPayload<S extends boolean | null | undefined | MensajeDefaultArgs> = $Result.GetResult<Prisma.$MensajePayload, S>

  type MensajeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MensajeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MensajeCountAggregateInputType | true
    }

  export interface MensajeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mensaje'], meta: { name: 'Mensaje' } }
    /**
     * Find zero or one Mensaje that matches the filter.
     * @param {MensajeFindUniqueArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MensajeFindUniqueArgs>(args: SelectSubset<T, MensajeFindUniqueArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mensaje that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MensajeFindUniqueOrThrowArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MensajeFindUniqueOrThrowArgs>(args: SelectSubset<T, MensajeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensaje that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeFindFirstArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MensajeFindFirstArgs>(args?: SelectSubset<T, MensajeFindFirstArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensaje that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeFindFirstOrThrowArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MensajeFindFirstOrThrowArgs>(args?: SelectSubset<T, MensajeFindFirstOrThrowArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mensajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mensajes
     * const mensajes = await prisma.mensaje.findMany()
     * 
     * // Get first 10 Mensajes
     * const mensajes = await prisma.mensaje.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mensajeWithIdOnly = await prisma.mensaje.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MensajeFindManyArgs>(args?: SelectSubset<T, MensajeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mensaje.
     * @param {MensajeCreateArgs} args - Arguments to create a Mensaje.
     * @example
     * // Create one Mensaje
     * const Mensaje = await prisma.mensaje.create({
     *   data: {
     *     // ... data to create a Mensaje
     *   }
     * })
     * 
     */
    create<T extends MensajeCreateArgs>(args: SelectSubset<T, MensajeCreateArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mensajes.
     * @param {MensajeCreateManyArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensaje = await prisma.mensaje.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MensajeCreateManyArgs>(args?: SelectSubset<T, MensajeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mensajes and returns the data saved in the database.
     * @param {MensajeCreateManyAndReturnArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensaje = await prisma.mensaje.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mensajes and only return the `id`
     * const mensajeWithIdOnly = await prisma.mensaje.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MensajeCreateManyAndReturnArgs>(args?: SelectSubset<T, MensajeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mensaje.
     * @param {MensajeDeleteArgs} args - Arguments to delete one Mensaje.
     * @example
     * // Delete one Mensaje
     * const Mensaje = await prisma.mensaje.delete({
     *   where: {
     *     // ... filter to delete one Mensaje
     *   }
     * })
     * 
     */
    delete<T extends MensajeDeleteArgs>(args: SelectSubset<T, MensajeDeleteArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mensaje.
     * @param {MensajeUpdateArgs} args - Arguments to update one Mensaje.
     * @example
     * // Update one Mensaje
     * const mensaje = await prisma.mensaje.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MensajeUpdateArgs>(args: SelectSubset<T, MensajeUpdateArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mensajes.
     * @param {MensajeDeleteManyArgs} args - Arguments to filter Mensajes to delete.
     * @example
     * // Delete a few Mensajes
     * const { count } = await prisma.mensaje.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MensajeDeleteManyArgs>(args?: SelectSubset<T, MensajeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mensajes
     * const mensaje = await prisma.mensaje.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MensajeUpdateManyArgs>(args: SelectSubset<T, MensajeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes and returns the data updated in the database.
     * @param {MensajeUpdateManyAndReturnArgs} args - Arguments to update many Mensajes.
     * @example
     * // Update many Mensajes
     * const mensaje = await prisma.mensaje.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mensajes and only return the `id`
     * const mensajeWithIdOnly = await prisma.mensaje.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MensajeUpdateManyAndReturnArgs>(args: SelectSubset<T, MensajeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mensaje.
     * @param {MensajeUpsertArgs} args - Arguments to update or create a Mensaje.
     * @example
     * // Update or create a Mensaje
     * const mensaje = await prisma.mensaje.upsert({
     *   create: {
     *     // ... data to create a Mensaje
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mensaje we want to update
     *   }
     * })
     */
    upsert<T extends MensajeUpsertArgs>(args: SelectSubset<T, MensajeUpsertArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeCountArgs} args - Arguments to filter Mensajes to count.
     * @example
     * // Count the number of Mensajes
     * const count = await prisma.mensaje.count({
     *   where: {
     *     // ... the filter for the Mensajes we want to count
     *   }
     * })
    **/
    count<T extends MensajeCountArgs>(
      args?: Subset<T, MensajeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MensajeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mensaje.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MensajeAggregateArgs>(args: Subset<T, MensajeAggregateArgs>): Prisma.PrismaPromise<GetMensajeAggregateType<T>>

    /**
     * Group by Mensaje.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MensajeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MensajeGroupByArgs['orderBy'] }
        : { orderBy?: MensajeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MensajeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMensajeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mensaje model
   */
  readonly fields: MensajeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mensaje.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MensajeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    remitente<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    destinatario<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mensaje model
   */
  interface MensajeFieldRefs {
    readonly id: FieldRef<"Mensaje", 'Int'>
    readonly texto: FieldRef<"Mensaje", 'String'>
    readonly titulo: FieldRef<"Mensaje", 'String'>
    readonly fecha: FieldRef<"Mensaje", 'DateTime'>
    readonly tipo: FieldRef<"Mensaje", 'CategoriaMensajes'>
    readonly estadoEliminado: FieldRef<"Mensaje", 'EstadoEliminado'>
    readonly estado: FieldRef<"Mensaje", 'EstadoMensaje'>
    readonly id_remitente: FieldRef<"Mensaje", 'Int'>
    readonly id_destinario: FieldRef<"Mensaje", 'Int'>
    readonly createdBy: FieldRef<"Mensaje", 'Int'>
    readonly updatedBy: FieldRef<"Mensaje", 'Int'>
    readonly deletedBy: FieldRef<"Mensaje", 'Int'>
    readonly createdDate: FieldRef<"Mensaje", 'DateTime'>
    readonly updatedDate: FieldRef<"Mensaje", 'DateTime'>
    readonly deletedDate: FieldRef<"Mensaje", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mensaje findUnique
   */
  export type MensajeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje findUniqueOrThrow
   */
  export type MensajeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje findFirst
   */
  export type MensajeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mensajes.
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mensajes.
     */
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Mensaje findFirstOrThrow
   */
  export type MensajeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mensajes.
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mensajes.
     */
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Mensaje findMany
   */
  export type MensajeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mensajes.
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Mensaje create
   */
  export type MensajeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * The data needed to create a Mensaje.
     */
    data: XOR<MensajeCreateInput, MensajeUncheckedCreateInput>
  }

  /**
   * Mensaje createMany
   */
  export type MensajeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mensajes.
     */
    data: MensajeCreateManyInput | MensajeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mensaje createManyAndReturn
   */
  export type MensajeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * The data used to create many Mensajes.
     */
    data: MensajeCreateManyInput | MensajeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mensaje update
   */
  export type MensajeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * The data needed to update a Mensaje.
     */
    data: XOR<MensajeUpdateInput, MensajeUncheckedUpdateInput>
    /**
     * Choose, which Mensaje to update.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje updateMany
   */
  export type MensajeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mensajes.
     */
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyInput>
    /**
     * Filter which Mensajes to update
     */
    where?: MensajeWhereInput
    /**
     * Limit how many Mensajes to update.
     */
    limit?: number
  }

  /**
   * Mensaje updateManyAndReturn
   */
  export type MensajeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * The data used to update Mensajes.
     */
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyInput>
    /**
     * Filter which Mensajes to update
     */
    where?: MensajeWhereInput
    /**
     * Limit how many Mensajes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mensaje upsert
   */
  export type MensajeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * The filter to search for the Mensaje to update in case it exists.
     */
    where: MensajeWhereUniqueInput
    /**
     * In case the Mensaje found by the `where` argument doesn't exist, create a new Mensaje with this data.
     */
    create: XOR<MensajeCreateInput, MensajeUncheckedCreateInput>
    /**
     * In case the Mensaje was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MensajeUpdateInput, MensajeUncheckedUpdateInput>
  }

  /**
   * Mensaje delete
   */
  export type MensajeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter which Mensaje to delete.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje deleteMany
   */
  export type MensajeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mensajes to delete
     */
    where?: MensajeWhereInput
    /**
     * Limit how many Mensajes to delete.
     */
    limit?: number
  }

  /**
   * Mensaje without action
   */
  export type MensajeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
  }


  /**
   * Model Proforma
   */

  export type AggregateProforma = {
    _count: ProformaCountAggregateOutputType | null
    _avg: ProformaAvgAggregateOutputType | null
    _sum: ProformaSumAggregateOutputType | null
    _min: ProformaMinAggregateOutputType | null
    _max: ProformaMaxAggregateOutputType | null
  }

  export type ProformaAvgAggregateOutputType = {
    id: number | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProformaSumAggregateOutputType = {
    id: number | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProformaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tiempo_esperado: Date | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type ProformaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tiempo_esperado: Date | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type ProformaCountAggregateOutputType = {
    id: number
    nombre: number
    tiempo_esperado: number
    porcentaje_venta: number
    id_punto: number
    id_cliente: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type ProformaAvgAggregateInputType = {
    id?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProformaSumAggregateInputType = {
    id?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProformaMinAggregateInputType = {
    id?: true
    nombre?: true
    tiempo_esperado?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type ProformaMaxAggregateInputType = {
    id?: true
    nombre?: true
    tiempo_esperado?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type ProformaCountAggregateInputType = {
    id?: true
    nombre?: true
    tiempo_esperado?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type ProformaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proforma to aggregate.
     */
    where?: ProformaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proformas to fetch.
     */
    orderBy?: ProformaOrderByWithRelationInput | ProformaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProformaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proformas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proformas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Proformas
    **/
    _count?: true | ProformaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProformaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProformaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProformaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProformaMaxAggregateInputType
  }

  export type GetProformaAggregateType<T extends ProformaAggregateArgs> = {
        [P in keyof T & keyof AggregateProforma]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProforma[P]>
      : GetScalarType<T[P], AggregateProforma[P]>
  }




  export type ProformaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProformaWhereInput
    orderBy?: ProformaOrderByWithAggregationInput | ProformaOrderByWithAggregationInput[]
    by: ProformaScalarFieldEnum[] | ProformaScalarFieldEnum
    having?: ProformaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProformaCountAggregateInputType | true
    _avg?: ProformaAvgAggregateInputType
    _sum?: ProformaSumAggregateInputType
    _min?: ProformaMinAggregateInputType
    _max?: ProformaMaxAggregateInputType
  }

  export type ProformaGroupByOutputType = {
    id: number
    nombre: string
    tiempo_esperado: Date
    porcentaje_venta: Decimal
    id_punto: number
    id_cliente: number
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: ProformaCountAggregateOutputType | null
    _avg: ProformaAvgAggregateOutputType | null
    _sum: ProformaSumAggregateOutputType | null
    _min: ProformaMinAggregateOutputType | null
    _max: ProformaMaxAggregateOutputType | null
  }

  type GetProformaGroupByPayload<T extends ProformaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProformaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProformaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProformaGroupByOutputType[P]>
            : GetScalarType<T[P], ProformaGroupByOutputType[P]>
        }
      >
    >


  export type ProformaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Proforma$obraArgs<ExtArgs>
    procesos?: boolean | Proforma$procesosArgs<ExtArgs>
    _count?: boolean | ProformaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proforma"]>

  export type ProformaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proforma"]>

  export type ProformaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proforma"]>

  export type ProformaSelectScalar = {
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type ProformaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "tiempo_esperado" | "porcentaje_venta" | "id_punto" | "id_cliente" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["proforma"]>
  export type ProformaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Proforma$obraArgs<ExtArgs>
    procesos?: boolean | Proforma$procesosArgs<ExtArgs>
    _count?: boolean | ProformaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProformaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }
  export type ProformaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }

  export type $ProformaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Proforma"
    objects: {
      punto: Prisma.$PuntoPayload<ExtArgs>
      cliente: Prisma.$PersonaPayload<ExtArgs>
      obra: Prisma.$ObraPayload<ExtArgs> | null
      procesos: Prisma.$ProcesoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tiempo_esperado: Date
      porcentaje_venta: Prisma.Decimal
      id_punto: number
      id_cliente: number
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["proforma"]>
    composites: {}
  }

  type ProformaGetPayload<S extends boolean | null | undefined | ProformaDefaultArgs> = $Result.GetResult<Prisma.$ProformaPayload, S>

  type ProformaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProformaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProformaCountAggregateInputType | true
    }

  export interface ProformaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Proforma'], meta: { name: 'Proforma' } }
    /**
     * Find zero or one Proforma that matches the filter.
     * @param {ProformaFindUniqueArgs} args - Arguments to find a Proforma
     * @example
     * // Get one Proforma
     * const proforma = await prisma.proforma.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProformaFindUniqueArgs>(args: SelectSubset<T, ProformaFindUniqueArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proforma that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProformaFindUniqueOrThrowArgs} args - Arguments to find a Proforma
     * @example
     * // Get one Proforma
     * const proforma = await prisma.proforma.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProformaFindUniqueOrThrowArgs>(args: SelectSubset<T, ProformaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proforma that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaFindFirstArgs} args - Arguments to find a Proforma
     * @example
     * // Get one Proforma
     * const proforma = await prisma.proforma.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProformaFindFirstArgs>(args?: SelectSubset<T, ProformaFindFirstArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proforma that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaFindFirstOrThrowArgs} args - Arguments to find a Proforma
     * @example
     * // Get one Proforma
     * const proforma = await prisma.proforma.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProformaFindFirstOrThrowArgs>(args?: SelectSubset<T, ProformaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proformas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proformas
     * const proformas = await prisma.proforma.findMany()
     * 
     * // Get first 10 Proformas
     * const proformas = await prisma.proforma.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proformaWithIdOnly = await prisma.proforma.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProformaFindManyArgs>(args?: SelectSubset<T, ProformaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proforma.
     * @param {ProformaCreateArgs} args - Arguments to create a Proforma.
     * @example
     * // Create one Proforma
     * const Proforma = await prisma.proforma.create({
     *   data: {
     *     // ... data to create a Proforma
     *   }
     * })
     * 
     */
    create<T extends ProformaCreateArgs>(args: SelectSubset<T, ProformaCreateArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proformas.
     * @param {ProformaCreateManyArgs} args - Arguments to create many Proformas.
     * @example
     * // Create many Proformas
     * const proforma = await prisma.proforma.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProformaCreateManyArgs>(args?: SelectSubset<T, ProformaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proformas and returns the data saved in the database.
     * @param {ProformaCreateManyAndReturnArgs} args - Arguments to create many Proformas.
     * @example
     * // Create many Proformas
     * const proforma = await prisma.proforma.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proformas and only return the `id`
     * const proformaWithIdOnly = await prisma.proforma.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProformaCreateManyAndReturnArgs>(args?: SelectSubset<T, ProformaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proforma.
     * @param {ProformaDeleteArgs} args - Arguments to delete one Proforma.
     * @example
     * // Delete one Proforma
     * const Proforma = await prisma.proforma.delete({
     *   where: {
     *     // ... filter to delete one Proforma
     *   }
     * })
     * 
     */
    delete<T extends ProformaDeleteArgs>(args: SelectSubset<T, ProformaDeleteArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proforma.
     * @param {ProformaUpdateArgs} args - Arguments to update one Proforma.
     * @example
     * // Update one Proforma
     * const proforma = await prisma.proforma.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProformaUpdateArgs>(args: SelectSubset<T, ProformaUpdateArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proformas.
     * @param {ProformaDeleteManyArgs} args - Arguments to filter Proformas to delete.
     * @example
     * // Delete a few Proformas
     * const { count } = await prisma.proforma.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProformaDeleteManyArgs>(args?: SelectSubset<T, ProformaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proformas
     * const proforma = await prisma.proforma.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProformaUpdateManyArgs>(args: SelectSubset<T, ProformaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proformas and returns the data updated in the database.
     * @param {ProformaUpdateManyAndReturnArgs} args - Arguments to update many Proformas.
     * @example
     * // Update many Proformas
     * const proforma = await prisma.proforma.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proformas and only return the `id`
     * const proformaWithIdOnly = await prisma.proforma.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProformaUpdateManyAndReturnArgs>(args: SelectSubset<T, ProformaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proforma.
     * @param {ProformaUpsertArgs} args - Arguments to update or create a Proforma.
     * @example
     * // Update or create a Proforma
     * const proforma = await prisma.proforma.upsert({
     *   create: {
     *     // ... data to create a Proforma
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proforma we want to update
     *   }
     * })
     */
    upsert<T extends ProformaUpsertArgs>(args: SelectSubset<T, ProformaUpsertArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proformas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaCountArgs} args - Arguments to filter Proformas to count.
     * @example
     * // Count the number of Proformas
     * const count = await prisma.proforma.count({
     *   where: {
     *     // ... the filter for the Proformas we want to count
     *   }
     * })
    **/
    count<T extends ProformaCountArgs>(
      args?: Subset<T, ProformaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProformaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proforma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProformaAggregateArgs>(args: Subset<T, ProformaAggregateArgs>): Prisma.PrismaPromise<GetProformaAggregateType<T>>

    /**
     * Group by Proforma.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProformaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProformaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProformaGroupByArgs['orderBy'] }
        : { orderBy?: ProformaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProformaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProformaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Proforma model
   */
  readonly fields: ProformaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Proforma.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProformaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    punto<T extends PuntoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PuntoDefaultArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cliente<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    obra<T extends Proforma$obraArgs<ExtArgs> = {}>(args?: Subset<T, Proforma$obraArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    procesos<T extends Proforma$procesosArgs<ExtArgs> = {}>(args?: Subset<T, Proforma$procesosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Proforma model
   */
  interface ProformaFieldRefs {
    readonly id: FieldRef<"Proforma", 'Int'>
    readonly nombre: FieldRef<"Proforma", 'String'>
    readonly tiempo_esperado: FieldRef<"Proforma", 'DateTime'>
    readonly porcentaje_venta: FieldRef<"Proforma", 'Decimal'>
    readonly id_punto: FieldRef<"Proforma", 'Int'>
    readonly id_cliente: FieldRef<"Proforma", 'Int'>
    readonly estadoEliminado: FieldRef<"Proforma", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Proforma", 'Int'>
    readonly updatedBy: FieldRef<"Proforma", 'Int'>
    readonly deletedBy: FieldRef<"Proforma", 'Int'>
    readonly createdDate: FieldRef<"Proforma", 'DateTime'>
    readonly updatedDate: FieldRef<"Proforma", 'DateTime'>
    readonly deletedDate: FieldRef<"Proforma", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Proforma findUnique
   */
  export type ProformaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * Filter, which Proforma to fetch.
     */
    where: ProformaWhereUniqueInput
  }

  /**
   * Proforma findUniqueOrThrow
   */
  export type ProformaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * Filter, which Proforma to fetch.
     */
    where: ProformaWhereUniqueInput
  }

  /**
   * Proforma findFirst
   */
  export type ProformaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * Filter, which Proforma to fetch.
     */
    where?: ProformaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proformas to fetch.
     */
    orderBy?: ProformaOrderByWithRelationInput | ProformaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proformas.
     */
    cursor?: ProformaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proformas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proformas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proformas.
     */
    distinct?: ProformaScalarFieldEnum | ProformaScalarFieldEnum[]
  }

  /**
   * Proforma findFirstOrThrow
   */
  export type ProformaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * Filter, which Proforma to fetch.
     */
    where?: ProformaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proformas to fetch.
     */
    orderBy?: ProformaOrderByWithRelationInput | ProformaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proformas.
     */
    cursor?: ProformaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proformas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proformas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proformas.
     */
    distinct?: ProformaScalarFieldEnum | ProformaScalarFieldEnum[]
  }

  /**
   * Proforma findMany
   */
  export type ProformaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * Filter, which Proformas to fetch.
     */
    where?: ProformaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proformas to fetch.
     */
    orderBy?: ProformaOrderByWithRelationInput | ProformaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Proformas.
     */
    cursor?: ProformaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proformas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proformas.
     */
    skip?: number
    distinct?: ProformaScalarFieldEnum | ProformaScalarFieldEnum[]
  }

  /**
   * Proforma create
   */
  export type ProformaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * The data needed to create a Proforma.
     */
    data: XOR<ProformaCreateInput, ProformaUncheckedCreateInput>
  }

  /**
   * Proforma createMany
   */
  export type ProformaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Proformas.
     */
    data: ProformaCreateManyInput | ProformaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proforma createManyAndReturn
   */
  export type ProformaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * The data used to create many Proformas.
     */
    data: ProformaCreateManyInput | ProformaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Proforma update
   */
  export type ProformaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * The data needed to update a Proforma.
     */
    data: XOR<ProformaUpdateInput, ProformaUncheckedUpdateInput>
    /**
     * Choose, which Proforma to update.
     */
    where: ProformaWhereUniqueInput
  }

  /**
   * Proforma updateMany
   */
  export type ProformaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Proformas.
     */
    data: XOR<ProformaUpdateManyMutationInput, ProformaUncheckedUpdateManyInput>
    /**
     * Filter which Proformas to update
     */
    where?: ProformaWhereInput
    /**
     * Limit how many Proformas to update.
     */
    limit?: number
  }

  /**
   * Proforma updateManyAndReturn
   */
  export type ProformaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * The data used to update Proformas.
     */
    data: XOR<ProformaUpdateManyMutationInput, ProformaUncheckedUpdateManyInput>
    /**
     * Filter which Proformas to update
     */
    where?: ProformaWhereInput
    /**
     * Limit how many Proformas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Proforma upsert
   */
  export type ProformaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * The filter to search for the Proforma to update in case it exists.
     */
    where: ProformaWhereUniqueInput
    /**
     * In case the Proforma found by the `where` argument doesn't exist, create a new Proforma with this data.
     */
    create: XOR<ProformaCreateInput, ProformaUncheckedCreateInput>
    /**
     * In case the Proforma was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProformaUpdateInput, ProformaUncheckedUpdateInput>
  }

  /**
   * Proforma delete
   */
  export type ProformaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    /**
     * Filter which Proforma to delete.
     */
    where: ProformaWhereUniqueInput
  }

  /**
   * Proforma deleteMany
   */
  export type ProformaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proformas to delete
     */
    where?: ProformaWhereInput
    /**
     * Limit how many Proformas to delete.
     */
    limit?: number
  }

  /**
   * Proforma.obra
   */
  export type Proforma$obraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    where?: ObraWhereInput
  }

  /**
   * Proforma.procesos
   */
  export type Proforma$procesosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    where?: ProcesoWhereInput
    orderBy?: ProcesoOrderByWithRelationInput | ProcesoOrderByWithRelationInput[]
    cursor?: ProcesoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcesoScalarFieldEnum | ProcesoScalarFieldEnum[]
  }

  /**
   * Proforma without action
   */
  export type ProformaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
  }


  /**
   * Model Proceso
   */

  export type AggregateProceso = {
    _count: ProcesoCountAggregateOutputType | null
    _avg: ProcesoAvgAggregateOutputType | null
    _sum: ProcesoSumAggregateOutputType | null
    _min: ProcesoMinAggregateOutputType | null
    _max: ProcesoMaxAggregateOutputType | null
  }

  export type ProcesoAvgAggregateOutputType = {
    id: number | null
    id_proforma: number | null
    id_obra: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProcesoSumAggregateOutputType = {
    id: number | null
    id_proforma: number | null
    id_obra: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ProcesoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    id_proforma: number | null
    id_obra: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type ProcesoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    id_proforma: number | null
    id_obra: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type ProcesoCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    id_proforma: number
    id_obra: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type ProcesoAvgAggregateInputType = {
    id?: true
    id_proforma?: true
    id_obra?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProcesoSumAggregateInputType = {
    id?: true
    id_proforma?: true
    id_obra?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ProcesoMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    id_proforma?: true
    id_obra?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type ProcesoMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    id_proforma?: true
    id_obra?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type ProcesoCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    id_proforma?: true
    id_obra?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type ProcesoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proceso to aggregate.
     */
    where?: ProcesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procesos to fetch.
     */
    orderBy?: ProcesoOrderByWithRelationInput | ProcesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProcesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procesos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Procesos
    **/
    _count?: true | ProcesoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProcesoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProcesoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProcesoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProcesoMaxAggregateInputType
  }

  export type GetProcesoAggregateType<T extends ProcesoAggregateArgs> = {
        [P in keyof T & keyof AggregateProceso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProceso[P]>
      : GetScalarType<T[P], AggregateProceso[P]>
  }




  export type ProcesoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProcesoWhereInput
    orderBy?: ProcesoOrderByWithAggregationInput | ProcesoOrderByWithAggregationInput[]
    by: ProcesoScalarFieldEnum[] | ProcesoScalarFieldEnum
    having?: ProcesoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProcesoCountAggregateInputType | true
    _avg?: ProcesoAvgAggregateInputType
    _sum?: ProcesoSumAggregateInputType
    _min?: ProcesoMinAggregateInputType
    _max?: ProcesoMaxAggregateInputType
  }

  export type ProcesoGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string
    id_proforma: number | null
    id_obra: number | null
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: ProcesoCountAggregateOutputType | null
    _avg: ProcesoAvgAggregateOutputType | null
    _sum: ProcesoSumAggregateOutputType | null
    _min: ProcesoMinAggregateOutputType | null
    _max: ProcesoMaxAggregateOutputType | null
  }

  type GetProcesoGroupByPayload<T extends ProcesoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProcesoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProcesoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProcesoGroupByOutputType[P]>
            : GetScalarType<T[P], ProcesoGroupByOutputType[P]>
        }
      >
    >


  export type ProcesoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_proforma?: boolean
    id_obra?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    empleados?: boolean | Proceso$empleadosArgs<ExtArgs>
    herramientas?: boolean | Proceso$herramientasArgs<ExtArgs>
    inventario?: boolean | Proceso$inventarioArgs<ExtArgs>
    proforma?: boolean | Proceso$proformaArgs<ExtArgs>
    obra?: boolean | Proceso$obraArgs<ExtArgs>
    _count?: boolean | ProcesoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso"]>

  export type ProcesoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_proforma?: boolean
    id_obra?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    proforma?: boolean | Proceso$proformaArgs<ExtArgs>
    obra?: boolean | Proceso$obraArgs<ExtArgs>
  }, ExtArgs["result"]["proceso"]>

  export type ProcesoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_proforma?: boolean
    id_obra?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    proforma?: boolean | Proceso$proformaArgs<ExtArgs>
    obra?: boolean | Proceso$obraArgs<ExtArgs>
  }, ExtArgs["result"]["proceso"]>

  export type ProcesoSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_proforma?: boolean
    id_obra?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type ProcesoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "id_proforma" | "id_obra" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["proceso"]>
  export type ProcesoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleados?: boolean | Proceso$empleadosArgs<ExtArgs>
    herramientas?: boolean | Proceso$herramientasArgs<ExtArgs>
    inventario?: boolean | Proceso$inventarioArgs<ExtArgs>
    proforma?: boolean | Proceso$proformaArgs<ExtArgs>
    obra?: boolean | Proceso$obraArgs<ExtArgs>
    _count?: boolean | ProcesoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProcesoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proforma?: boolean | Proceso$proformaArgs<ExtArgs>
    obra?: boolean | Proceso$obraArgs<ExtArgs>
  }
  export type ProcesoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proforma?: boolean | Proceso$proformaArgs<ExtArgs>
    obra?: boolean | Proceso$obraArgs<ExtArgs>
  }

  export type $ProcesoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Proceso"
    objects: {
      empleados: Prisma.$proceso_empleadosPayload<ExtArgs>[]
      herramientas: Prisma.$proceso_herramientasPayload<ExtArgs>[]
      inventario: Prisma.$proceso_inventarioPayload<ExtArgs>[]
      proforma: Prisma.$ProformaPayload<ExtArgs> | null
      obra: Prisma.$ObraPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string
      id_proforma: number | null
      id_obra: number | null
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["proceso"]>
    composites: {}
  }

  type ProcesoGetPayload<S extends boolean | null | undefined | ProcesoDefaultArgs> = $Result.GetResult<Prisma.$ProcesoPayload, S>

  type ProcesoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProcesoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProcesoCountAggregateInputType | true
    }

  export interface ProcesoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Proceso'], meta: { name: 'Proceso' } }
    /**
     * Find zero or one Proceso that matches the filter.
     * @param {ProcesoFindUniqueArgs} args - Arguments to find a Proceso
     * @example
     * // Get one Proceso
     * const proceso = await prisma.proceso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProcesoFindUniqueArgs>(args: SelectSubset<T, ProcesoFindUniqueArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proceso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProcesoFindUniqueOrThrowArgs} args - Arguments to find a Proceso
     * @example
     * // Get one Proceso
     * const proceso = await prisma.proceso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProcesoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProcesoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoFindFirstArgs} args - Arguments to find a Proceso
     * @example
     * // Get one Proceso
     * const proceso = await prisma.proceso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProcesoFindFirstArgs>(args?: SelectSubset<T, ProcesoFindFirstArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoFindFirstOrThrowArgs} args - Arguments to find a Proceso
     * @example
     * // Get one Proceso
     * const proceso = await prisma.proceso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProcesoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProcesoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Procesos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Procesos
     * const procesos = await prisma.proceso.findMany()
     * 
     * // Get first 10 Procesos
     * const procesos = await prisma.proceso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const procesoWithIdOnly = await prisma.proceso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProcesoFindManyArgs>(args?: SelectSubset<T, ProcesoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proceso.
     * @param {ProcesoCreateArgs} args - Arguments to create a Proceso.
     * @example
     * // Create one Proceso
     * const Proceso = await prisma.proceso.create({
     *   data: {
     *     // ... data to create a Proceso
     *   }
     * })
     * 
     */
    create<T extends ProcesoCreateArgs>(args: SelectSubset<T, ProcesoCreateArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Procesos.
     * @param {ProcesoCreateManyArgs} args - Arguments to create many Procesos.
     * @example
     * // Create many Procesos
     * const proceso = await prisma.proceso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProcesoCreateManyArgs>(args?: SelectSubset<T, ProcesoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Procesos and returns the data saved in the database.
     * @param {ProcesoCreateManyAndReturnArgs} args - Arguments to create many Procesos.
     * @example
     * // Create many Procesos
     * const proceso = await prisma.proceso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Procesos and only return the `id`
     * const procesoWithIdOnly = await prisma.proceso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProcesoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProcesoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proceso.
     * @param {ProcesoDeleteArgs} args - Arguments to delete one Proceso.
     * @example
     * // Delete one Proceso
     * const Proceso = await prisma.proceso.delete({
     *   where: {
     *     // ... filter to delete one Proceso
     *   }
     * })
     * 
     */
    delete<T extends ProcesoDeleteArgs>(args: SelectSubset<T, ProcesoDeleteArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proceso.
     * @param {ProcesoUpdateArgs} args - Arguments to update one Proceso.
     * @example
     * // Update one Proceso
     * const proceso = await prisma.proceso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProcesoUpdateArgs>(args: SelectSubset<T, ProcesoUpdateArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Procesos.
     * @param {ProcesoDeleteManyArgs} args - Arguments to filter Procesos to delete.
     * @example
     * // Delete a few Procesos
     * const { count } = await prisma.proceso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProcesoDeleteManyArgs>(args?: SelectSubset<T, ProcesoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Procesos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Procesos
     * const proceso = await prisma.proceso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProcesoUpdateManyArgs>(args: SelectSubset<T, ProcesoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Procesos and returns the data updated in the database.
     * @param {ProcesoUpdateManyAndReturnArgs} args - Arguments to update many Procesos.
     * @example
     * // Update many Procesos
     * const proceso = await prisma.proceso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Procesos and only return the `id`
     * const procesoWithIdOnly = await prisma.proceso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProcesoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProcesoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proceso.
     * @param {ProcesoUpsertArgs} args - Arguments to update or create a Proceso.
     * @example
     * // Update or create a Proceso
     * const proceso = await prisma.proceso.upsert({
     *   create: {
     *     // ... data to create a Proceso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proceso we want to update
     *   }
     * })
     */
    upsert<T extends ProcesoUpsertArgs>(args: SelectSubset<T, ProcesoUpsertArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Procesos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoCountArgs} args - Arguments to filter Procesos to count.
     * @example
     * // Count the number of Procesos
     * const count = await prisma.proceso.count({
     *   where: {
     *     // ... the filter for the Procesos we want to count
     *   }
     * })
    **/
    count<T extends ProcesoCountArgs>(
      args?: Subset<T, ProcesoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProcesoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proceso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProcesoAggregateArgs>(args: Subset<T, ProcesoAggregateArgs>): Prisma.PrismaPromise<GetProcesoAggregateType<T>>

    /**
     * Group by Proceso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcesoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProcesoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProcesoGroupByArgs['orderBy'] }
        : { orderBy?: ProcesoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProcesoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProcesoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Proceso model
   */
  readonly fields: ProcesoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Proceso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProcesoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleados<T extends Proceso$empleadosArgs<ExtArgs> = {}>(args?: Subset<T, Proceso$empleadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    herramientas<T extends Proceso$herramientasArgs<ExtArgs> = {}>(args?: Subset<T, Proceso$herramientasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inventario<T extends Proceso$inventarioArgs<ExtArgs> = {}>(args?: Subset<T, Proceso$inventarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proforma<T extends Proceso$proformaArgs<ExtArgs> = {}>(args?: Subset<T, Proceso$proformaArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    obra<T extends Proceso$obraArgs<ExtArgs> = {}>(args?: Subset<T, Proceso$obraArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Proceso model
   */
  interface ProcesoFieldRefs {
    readonly id: FieldRef<"Proceso", 'Int'>
    readonly nombre: FieldRef<"Proceso", 'String'>
    readonly descripcion: FieldRef<"Proceso", 'String'>
    readonly id_proforma: FieldRef<"Proceso", 'Int'>
    readonly id_obra: FieldRef<"Proceso", 'Int'>
    readonly estadoEliminado: FieldRef<"Proceso", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Proceso", 'Int'>
    readonly updatedBy: FieldRef<"Proceso", 'Int'>
    readonly deletedBy: FieldRef<"Proceso", 'Int'>
    readonly createdDate: FieldRef<"Proceso", 'DateTime'>
    readonly updatedDate: FieldRef<"Proceso", 'DateTime'>
    readonly deletedDate: FieldRef<"Proceso", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Proceso findUnique
   */
  export type ProcesoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * Filter, which Proceso to fetch.
     */
    where: ProcesoWhereUniqueInput
  }

  /**
   * Proceso findUniqueOrThrow
   */
  export type ProcesoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * Filter, which Proceso to fetch.
     */
    where: ProcesoWhereUniqueInput
  }

  /**
   * Proceso findFirst
   */
  export type ProcesoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * Filter, which Proceso to fetch.
     */
    where?: ProcesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procesos to fetch.
     */
    orderBy?: ProcesoOrderByWithRelationInput | ProcesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Procesos.
     */
    cursor?: ProcesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procesos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Procesos.
     */
    distinct?: ProcesoScalarFieldEnum | ProcesoScalarFieldEnum[]
  }

  /**
   * Proceso findFirstOrThrow
   */
  export type ProcesoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * Filter, which Proceso to fetch.
     */
    where?: ProcesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procesos to fetch.
     */
    orderBy?: ProcesoOrderByWithRelationInput | ProcesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Procesos.
     */
    cursor?: ProcesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procesos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Procesos.
     */
    distinct?: ProcesoScalarFieldEnum | ProcesoScalarFieldEnum[]
  }

  /**
   * Proceso findMany
   */
  export type ProcesoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * Filter, which Procesos to fetch.
     */
    where?: ProcesoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procesos to fetch.
     */
    orderBy?: ProcesoOrderByWithRelationInput | ProcesoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Procesos.
     */
    cursor?: ProcesoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procesos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procesos.
     */
    skip?: number
    distinct?: ProcesoScalarFieldEnum | ProcesoScalarFieldEnum[]
  }

  /**
   * Proceso create
   */
  export type ProcesoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * The data needed to create a Proceso.
     */
    data: XOR<ProcesoCreateInput, ProcesoUncheckedCreateInput>
  }

  /**
   * Proceso createMany
   */
  export type ProcesoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Procesos.
     */
    data: ProcesoCreateManyInput | ProcesoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proceso createManyAndReturn
   */
  export type ProcesoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * The data used to create many Procesos.
     */
    data: ProcesoCreateManyInput | ProcesoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Proceso update
   */
  export type ProcesoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * The data needed to update a Proceso.
     */
    data: XOR<ProcesoUpdateInput, ProcesoUncheckedUpdateInput>
    /**
     * Choose, which Proceso to update.
     */
    where: ProcesoWhereUniqueInput
  }

  /**
   * Proceso updateMany
   */
  export type ProcesoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Procesos.
     */
    data: XOR<ProcesoUpdateManyMutationInput, ProcesoUncheckedUpdateManyInput>
    /**
     * Filter which Procesos to update
     */
    where?: ProcesoWhereInput
    /**
     * Limit how many Procesos to update.
     */
    limit?: number
  }

  /**
   * Proceso updateManyAndReturn
   */
  export type ProcesoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * The data used to update Procesos.
     */
    data: XOR<ProcesoUpdateManyMutationInput, ProcesoUncheckedUpdateManyInput>
    /**
     * Filter which Procesos to update
     */
    where?: ProcesoWhereInput
    /**
     * Limit how many Procesos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Proceso upsert
   */
  export type ProcesoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * The filter to search for the Proceso to update in case it exists.
     */
    where: ProcesoWhereUniqueInput
    /**
     * In case the Proceso found by the `where` argument doesn't exist, create a new Proceso with this data.
     */
    create: XOR<ProcesoCreateInput, ProcesoUncheckedCreateInput>
    /**
     * In case the Proceso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProcesoUpdateInput, ProcesoUncheckedUpdateInput>
  }

  /**
   * Proceso delete
   */
  export type ProcesoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    /**
     * Filter which Proceso to delete.
     */
    where: ProcesoWhereUniqueInput
  }

  /**
   * Proceso deleteMany
   */
  export type ProcesoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Procesos to delete
     */
    where?: ProcesoWhereInput
    /**
     * Limit how many Procesos to delete.
     */
    limit?: number
  }

  /**
   * Proceso.empleados
   */
  export type Proceso$empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    where?: proceso_empleadosWhereInput
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    cursor?: proceso_empleadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_empleadosScalarFieldEnum | Proceso_empleadosScalarFieldEnum[]
  }

  /**
   * Proceso.herramientas
   */
  export type Proceso$herramientasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    where?: proceso_herramientasWhereInput
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    cursor?: proceso_herramientasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_herramientasScalarFieldEnum | Proceso_herramientasScalarFieldEnum[]
  }

  /**
   * Proceso.inventario
   */
  export type Proceso$inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    where?: proceso_inventarioWhereInput
    orderBy?: proceso_inventarioOrderByWithRelationInput | proceso_inventarioOrderByWithRelationInput[]
    cursor?: proceso_inventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_inventarioScalarFieldEnum | Proceso_inventarioScalarFieldEnum[]
  }

  /**
   * Proceso.proforma
   */
  export type Proceso$proformaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proforma
     */
    select?: ProformaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proforma
     */
    omit?: ProformaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProformaInclude<ExtArgs> | null
    where?: ProformaWhereInput
  }

  /**
   * Proceso.obra
   */
  export type Proceso$obraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    where?: ObraWhereInput
  }

  /**
   * Proceso without action
   */
  export type ProcesoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
  }


  /**
   * Model proceso_empleados
   */

  export type AggregateProceso_empleados = {
    _count: Proceso_empleadosCountAggregateOutputType | null
    _avg: Proceso_empleadosAvgAggregateOutputType | null
    _sum: Proceso_empleadosSumAggregateOutputType | null
    _min: Proceso_empleadosMinAggregateOutputType | null
    _max: Proceso_empleadosMaxAggregateOutputType | null
  }

  export type Proceso_empleadosAvgAggregateOutputType = {
    id: number | null
    horas: number | null
    sueldo: number | null
    id_proceso: number | null
    id_empleado: number | null
  }

  export type Proceso_empleadosSumAggregateOutputType = {
    id: number | null
    horas: number | null
    sueldo: number | null
    id_proceso: number | null
    id_empleado: number | null
  }

  export type Proceso_empleadosMinAggregateOutputType = {
    id: number | null
    horas: number | null
    sueldo: number | null
    id_proceso: number | null
    id_empleado: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Proceso_empleadosMaxAggregateOutputType = {
    id: number | null
    horas: number | null
    sueldo: number | null
    id_proceso: number | null
    id_empleado: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Proceso_empleadosCountAggregateOutputType = {
    id: number
    horas: number
    sueldo: number
    id_proceso: number
    id_empleado: number
    estadoEliminado: number
    _all: number
  }


  export type Proceso_empleadosAvgAggregateInputType = {
    id?: true
    horas?: true
    sueldo?: true
    id_proceso?: true
    id_empleado?: true
  }

  export type Proceso_empleadosSumAggregateInputType = {
    id?: true
    horas?: true
    sueldo?: true
    id_proceso?: true
    id_empleado?: true
  }

  export type Proceso_empleadosMinAggregateInputType = {
    id?: true
    horas?: true
    sueldo?: true
    id_proceso?: true
    id_empleado?: true
    estadoEliminado?: true
  }

  export type Proceso_empleadosMaxAggregateInputType = {
    id?: true
    horas?: true
    sueldo?: true
    id_proceso?: true
    id_empleado?: true
    estadoEliminado?: true
  }

  export type Proceso_empleadosCountAggregateInputType = {
    id?: true
    horas?: true
    sueldo?: true
    id_proceso?: true
    id_empleado?: true
    estadoEliminado?: true
    _all?: true
  }

  export type Proceso_empleadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proceso_empleados to aggregate.
     */
    where?: proceso_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_empleados to fetch.
     */
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proceso_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proceso_empleados
    **/
    _count?: true | Proceso_empleadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Proceso_empleadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Proceso_empleadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Proceso_empleadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Proceso_empleadosMaxAggregateInputType
  }

  export type GetProceso_empleadosAggregateType<T extends Proceso_empleadosAggregateArgs> = {
        [P in keyof T & keyof AggregateProceso_empleados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProceso_empleados[P]>
      : GetScalarType<T[P], AggregateProceso_empleados[P]>
  }




  export type proceso_empleadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_empleadosWhereInput
    orderBy?: proceso_empleadosOrderByWithAggregationInput | proceso_empleadosOrderByWithAggregationInput[]
    by: Proceso_empleadosScalarFieldEnum[] | Proceso_empleadosScalarFieldEnum
    having?: proceso_empleadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Proceso_empleadosCountAggregateInputType | true
    _avg?: Proceso_empleadosAvgAggregateInputType
    _sum?: Proceso_empleadosSumAggregateInputType
    _min?: Proceso_empleadosMinAggregateInputType
    _max?: Proceso_empleadosMaxAggregateInputType
  }

  export type Proceso_empleadosGroupByOutputType = {
    id: number
    horas: number
    sueldo: number
    id_proceso: number
    id_empleado: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: Proceso_empleadosCountAggregateOutputType | null
    _avg: Proceso_empleadosAvgAggregateOutputType | null
    _sum: Proceso_empleadosSumAggregateOutputType | null
    _min: Proceso_empleadosMinAggregateOutputType | null
    _max: Proceso_empleadosMaxAggregateOutputType | null
  }

  type GetProceso_empleadosGroupByPayload<T extends proceso_empleadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Proceso_empleadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Proceso_empleadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Proceso_empleadosGroupByOutputType[P]>
            : GetScalarType<T[P], Proceso_empleadosGroupByOutputType[P]>
        }
      >
    >


  export type proceso_empleadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
    sueldo?: boolean
    id_proceso?: boolean
    id_empleado?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    horarios?: boolean | proceso_empleados$horariosArgs<ExtArgs>
    _count?: boolean | Proceso_empleadosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_empleados"]>

  export type proceso_empleadosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
    sueldo?: boolean
    id_proceso?: boolean
    id_empleado?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_empleados"]>

  export type proceso_empleadosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
    sueldo?: boolean
    id_proceso?: boolean
    id_empleado?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_empleados"]>

  export type proceso_empleadosSelectScalar = {
    id?: boolean
    horas?: boolean
    sueldo?: boolean
    id_proceso?: boolean
    id_empleado?: boolean
    estadoEliminado?: boolean
  }

  export type proceso_empleadosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "horas" | "sueldo" | "id_proceso" | "id_empleado" | "estadoEliminado", ExtArgs["result"]["proceso_empleados"]>
  export type proceso_empleadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    horarios?: boolean | proceso_empleados$horariosArgs<ExtArgs>
    _count?: boolean | Proceso_empleadosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type proceso_empleadosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type proceso_empleadosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }

  export type $proceso_empleadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proceso_empleados"
    objects: {
      proceso: Prisma.$ProcesoPayload<ExtArgs>
      empleado: Prisma.$EmpleadoPayload<ExtArgs>
      horarios: Prisma.$HorarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      horas: number
      sueldo: number
      id_proceso: number
      id_empleado: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["proceso_empleados"]>
    composites: {}
  }

  type proceso_empleadosGetPayload<S extends boolean | null | undefined | proceso_empleadosDefaultArgs> = $Result.GetResult<Prisma.$proceso_empleadosPayload, S>

  type proceso_empleadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proceso_empleadosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Proceso_empleadosCountAggregateInputType | true
    }

  export interface proceso_empleadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proceso_empleados'], meta: { name: 'proceso_empleados' } }
    /**
     * Find zero or one Proceso_empleados that matches the filter.
     * @param {proceso_empleadosFindUniqueArgs} args - Arguments to find a Proceso_empleados
     * @example
     * // Get one Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proceso_empleadosFindUniqueArgs>(args: SelectSubset<T, proceso_empleadosFindUniqueArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proceso_empleados that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proceso_empleadosFindUniqueOrThrowArgs} args - Arguments to find a Proceso_empleados
     * @example
     * // Get one Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proceso_empleadosFindUniqueOrThrowArgs>(args: SelectSubset<T, proceso_empleadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso_empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_empleadosFindFirstArgs} args - Arguments to find a Proceso_empleados
     * @example
     * // Get one Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proceso_empleadosFindFirstArgs>(args?: SelectSubset<T, proceso_empleadosFindFirstArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso_empleados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_empleadosFindFirstOrThrowArgs} args - Arguments to find a Proceso_empleados
     * @example
     * // Get one Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proceso_empleadosFindFirstOrThrowArgs>(args?: SelectSubset<T, proceso_empleadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proceso_empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_empleadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.findMany()
     * 
     * // Get first 10 Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proceso_empleadosWithIdOnly = await prisma.proceso_empleados.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends proceso_empleadosFindManyArgs>(args?: SelectSubset<T, proceso_empleadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proceso_empleados.
     * @param {proceso_empleadosCreateArgs} args - Arguments to create a Proceso_empleados.
     * @example
     * // Create one Proceso_empleados
     * const Proceso_empleados = await prisma.proceso_empleados.create({
     *   data: {
     *     // ... data to create a Proceso_empleados
     *   }
     * })
     * 
     */
    create<T extends proceso_empleadosCreateArgs>(args: SelectSubset<T, proceso_empleadosCreateArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proceso_empleados.
     * @param {proceso_empleadosCreateManyArgs} args - Arguments to create many Proceso_empleados.
     * @example
     * // Create many Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proceso_empleadosCreateManyArgs>(args?: SelectSubset<T, proceso_empleadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proceso_empleados and returns the data saved in the database.
     * @param {proceso_empleadosCreateManyAndReturnArgs} args - Arguments to create many Proceso_empleados.
     * @example
     * // Create many Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proceso_empleados and only return the `id`
     * const proceso_empleadosWithIdOnly = await prisma.proceso_empleados.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proceso_empleadosCreateManyAndReturnArgs>(args?: SelectSubset<T, proceso_empleadosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proceso_empleados.
     * @param {proceso_empleadosDeleteArgs} args - Arguments to delete one Proceso_empleados.
     * @example
     * // Delete one Proceso_empleados
     * const Proceso_empleados = await prisma.proceso_empleados.delete({
     *   where: {
     *     // ... filter to delete one Proceso_empleados
     *   }
     * })
     * 
     */
    delete<T extends proceso_empleadosDeleteArgs>(args: SelectSubset<T, proceso_empleadosDeleteArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proceso_empleados.
     * @param {proceso_empleadosUpdateArgs} args - Arguments to update one Proceso_empleados.
     * @example
     * // Update one Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proceso_empleadosUpdateArgs>(args: SelectSubset<T, proceso_empleadosUpdateArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proceso_empleados.
     * @param {proceso_empleadosDeleteManyArgs} args - Arguments to filter Proceso_empleados to delete.
     * @example
     * // Delete a few Proceso_empleados
     * const { count } = await prisma.proceso_empleados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proceso_empleadosDeleteManyArgs>(args?: SelectSubset<T, proceso_empleadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proceso_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_empleadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proceso_empleadosUpdateManyArgs>(args: SelectSubset<T, proceso_empleadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proceso_empleados and returns the data updated in the database.
     * @param {proceso_empleadosUpdateManyAndReturnArgs} args - Arguments to update many Proceso_empleados.
     * @example
     * // Update many Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proceso_empleados and only return the `id`
     * const proceso_empleadosWithIdOnly = await prisma.proceso_empleados.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proceso_empleadosUpdateManyAndReturnArgs>(args: SelectSubset<T, proceso_empleadosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proceso_empleados.
     * @param {proceso_empleadosUpsertArgs} args - Arguments to update or create a Proceso_empleados.
     * @example
     * // Update or create a Proceso_empleados
     * const proceso_empleados = await prisma.proceso_empleados.upsert({
     *   create: {
     *     // ... data to create a Proceso_empleados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proceso_empleados we want to update
     *   }
     * })
     */
    upsert<T extends proceso_empleadosUpsertArgs>(args: SelectSubset<T, proceso_empleadosUpsertArgs<ExtArgs>>): Prisma__proceso_empleadosClient<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proceso_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_empleadosCountArgs} args - Arguments to filter Proceso_empleados to count.
     * @example
     * // Count the number of Proceso_empleados
     * const count = await prisma.proceso_empleados.count({
     *   where: {
     *     // ... the filter for the Proceso_empleados we want to count
     *   }
     * })
    **/
    count<T extends proceso_empleadosCountArgs>(
      args?: Subset<T, proceso_empleadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Proceso_empleadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proceso_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proceso_empleadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Proceso_empleadosAggregateArgs>(args: Subset<T, Proceso_empleadosAggregateArgs>): Prisma.PrismaPromise<GetProceso_empleadosAggregateType<T>>

    /**
     * Group by Proceso_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_empleadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proceso_empleadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proceso_empleadosGroupByArgs['orderBy'] }
        : { orderBy?: proceso_empleadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proceso_empleadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProceso_empleadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proceso_empleados model
   */
  readonly fields: proceso_empleadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proceso_empleados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proceso_empleadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    proceso<T extends ProcesoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProcesoDefaultArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleado<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    horarios<T extends proceso_empleados$horariosArgs<ExtArgs> = {}>(args?: Subset<T, proceso_empleados$horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proceso_empleados model
   */
  interface proceso_empleadosFieldRefs {
    readonly id: FieldRef<"proceso_empleados", 'Int'>
    readonly horas: FieldRef<"proceso_empleados", 'Int'>
    readonly sueldo: FieldRef<"proceso_empleados", 'Float'>
    readonly id_proceso: FieldRef<"proceso_empleados", 'Int'>
    readonly id_empleado: FieldRef<"proceso_empleados", 'Int'>
    readonly estadoEliminado: FieldRef<"proceso_empleados", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * proceso_empleados findUnique
   */
  export type proceso_empleadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which proceso_empleados to fetch.
     */
    where: proceso_empleadosWhereUniqueInput
  }

  /**
   * proceso_empleados findUniqueOrThrow
   */
  export type proceso_empleadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which proceso_empleados to fetch.
     */
    where: proceso_empleadosWhereUniqueInput
  }

  /**
   * proceso_empleados findFirst
   */
  export type proceso_empleadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which proceso_empleados to fetch.
     */
    where?: proceso_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_empleados to fetch.
     */
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proceso_empleados.
     */
    cursor?: proceso_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proceso_empleados.
     */
    distinct?: Proceso_empleadosScalarFieldEnum | Proceso_empleadosScalarFieldEnum[]
  }

  /**
   * proceso_empleados findFirstOrThrow
   */
  export type proceso_empleadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which proceso_empleados to fetch.
     */
    where?: proceso_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_empleados to fetch.
     */
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proceso_empleados.
     */
    cursor?: proceso_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proceso_empleados.
     */
    distinct?: Proceso_empleadosScalarFieldEnum | Proceso_empleadosScalarFieldEnum[]
  }

  /**
   * proceso_empleados findMany
   */
  export type proceso_empleadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * Filter, which proceso_empleados to fetch.
     */
    where?: proceso_empleadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_empleados to fetch.
     */
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proceso_empleados.
     */
    cursor?: proceso_empleadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_empleados.
     */
    skip?: number
    distinct?: Proceso_empleadosScalarFieldEnum | Proceso_empleadosScalarFieldEnum[]
  }

  /**
   * proceso_empleados create
   */
  export type proceso_empleadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * The data needed to create a proceso_empleados.
     */
    data: XOR<proceso_empleadosCreateInput, proceso_empleadosUncheckedCreateInput>
  }

  /**
   * proceso_empleados createMany
   */
  export type proceso_empleadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proceso_empleados.
     */
    data: proceso_empleadosCreateManyInput | proceso_empleadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proceso_empleados createManyAndReturn
   */
  export type proceso_empleadosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * The data used to create many proceso_empleados.
     */
    data: proceso_empleadosCreateManyInput | proceso_empleadosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * proceso_empleados update
   */
  export type proceso_empleadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * The data needed to update a proceso_empleados.
     */
    data: XOR<proceso_empleadosUpdateInput, proceso_empleadosUncheckedUpdateInput>
    /**
     * Choose, which proceso_empleados to update.
     */
    where: proceso_empleadosWhereUniqueInput
  }

  /**
   * proceso_empleados updateMany
   */
  export type proceso_empleadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proceso_empleados.
     */
    data: XOR<proceso_empleadosUpdateManyMutationInput, proceso_empleadosUncheckedUpdateManyInput>
    /**
     * Filter which proceso_empleados to update
     */
    where?: proceso_empleadosWhereInput
    /**
     * Limit how many proceso_empleados to update.
     */
    limit?: number
  }

  /**
   * proceso_empleados updateManyAndReturn
   */
  export type proceso_empleadosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * The data used to update proceso_empleados.
     */
    data: XOR<proceso_empleadosUpdateManyMutationInput, proceso_empleadosUncheckedUpdateManyInput>
    /**
     * Filter which proceso_empleados to update
     */
    where?: proceso_empleadosWhereInput
    /**
     * Limit how many proceso_empleados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * proceso_empleados upsert
   */
  export type proceso_empleadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * The filter to search for the proceso_empleados to update in case it exists.
     */
    where: proceso_empleadosWhereUniqueInput
    /**
     * In case the proceso_empleados found by the `where` argument doesn't exist, create a new proceso_empleados with this data.
     */
    create: XOR<proceso_empleadosCreateInput, proceso_empleadosUncheckedCreateInput>
    /**
     * In case the proceso_empleados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proceso_empleadosUpdateInput, proceso_empleadosUncheckedUpdateInput>
  }

  /**
   * proceso_empleados delete
   */
  export type proceso_empleadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    /**
     * Filter which proceso_empleados to delete.
     */
    where: proceso_empleadosWhereUniqueInput
  }

  /**
   * proceso_empleados deleteMany
   */
  export type proceso_empleadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proceso_empleados to delete
     */
    where?: proceso_empleadosWhereInput
    /**
     * Limit how many proceso_empleados to delete.
     */
    limit?: number
  }

  /**
   * proceso_empleados.horarios
   */
  export type proceso_empleados$horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    where?: HorarioWhereInput
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    cursor?: HorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorarioScalarFieldEnum | HorarioScalarFieldEnum[]
  }

  /**
   * proceso_empleados without action
   */
  export type proceso_empleadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
  }


  /**
   * Model proceso_herramientas
   */

  export type AggregateProceso_herramientas = {
    _count: Proceso_herramientasCountAggregateOutputType | null
    _avg: Proceso_herramientasAvgAggregateOutputType | null
    _sum: Proceso_herramientasSumAggregateOutputType | null
    _min: Proceso_herramientasMinAggregateOutputType | null
    _max: Proceso_herramientasMaxAggregateOutputType | null
  }

  export type Proceso_herramientasAvgAggregateOutputType = {
    id: number | null
    horas: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_herramienta: number | null
  }

  export type Proceso_herramientasSumAggregateOutputType = {
    id: number | null
    horas: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_herramienta: number | null
  }

  export type Proceso_herramientasMinAggregateOutputType = {
    id: number | null
    horas: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_herramienta: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Proceso_herramientasMaxAggregateOutputType = {
    id: number | null
    horas: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_herramienta: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Proceso_herramientasCountAggregateOutputType = {
    id: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    id_herramienta: number
    estadoEliminado: number
    _all: number
  }


  export type Proceso_herramientasAvgAggregateInputType = {
    id?: true
    horas?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_herramienta?: true
  }

  export type Proceso_herramientasSumAggregateInputType = {
    id?: true
    horas?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_herramienta?: true
  }

  export type Proceso_herramientasMinAggregateInputType = {
    id?: true
    horas?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_herramienta?: true
    estadoEliminado?: true
  }

  export type Proceso_herramientasMaxAggregateInputType = {
    id?: true
    horas?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_herramienta?: true
    estadoEliminado?: true
  }

  export type Proceso_herramientasCountAggregateInputType = {
    id?: true
    horas?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_herramienta?: true
    estadoEliminado?: true
    _all?: true
  }

  export type Proceso_herramientasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proceso_herramientas to aggregate.
     */
    where?: proceso_herramientasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_herramientas to fetch.
     */
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proceso_herramientasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_herramientas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_herramientas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proceso_herramientas
    **/
    _count?: true | Proceso_herramientasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Proceso_herramientasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Proceso_herramientasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Proceso_herramientasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Proceso_herramientasMaxAggregateInputType
  }

  export type GetProceso_herramientasAggregateType<T extends Proceso_herramientasAggregateArgs> = {
        [P in keyof T & keyof AggregateProceso_herramientas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProceso_herramientas[P]>
      : GetScalarType<T[P], AggregateProceso_herramientas[P]>
  }




  export type proceso_herramientasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_herramientasWhereInput
    orderBy?: proceso_herramientasOrderByWithAggregationInput | proceso_herramientasOrderByWithAggregationInput[]
    by: Proceso_herramientasScalarFieldEnum[] | Proceso_herramientasScalarFieldEnum
    having?: proceso_herramientasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Proceso_herramientasCountAggregateInputType | true
    _avg?: Proceso_herramientasAvgAggregateInputType
    _sum?: Proceso_herramientasSumAggregateInputType
    _min?: Proceso_herramientasMinAggregateInputType
    _max?: Proceso_herramientasMaxAggregateInputType
  }

  export type Proceso_herramientasGroupByOutputType = {
    id: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    id_herramienta: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: Proceso_herramientasCountAggregateOutputType | null
    _avg: Proceso_herramientasAvgAggregateOutputType | null
    _sum: Proceso_herramientasSumAggregateOutputType | null
    _min: Proceso_herramientasMinAggregateOutputType | null
    _max: Proceso_herramientasMaxAggregateOutputType | null
  }

  type GetProceso_herramientasGroupByPayload<T extends proceso_herramientasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Proceso_herramientasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Proceso_herramientasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Proceso_herramientasGroupByOutputType[P]>
            : GetScalarType<T[P], Proceso_herramientasGroupByOutputType[P]>
        }
      >
    >


  export type proceso_herramientasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_herramienta?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    herramienta?: boolean | InventarioDefaultArgs<ExtArgs>
    horarios?: boolean | proceso_herramientas$horariosArgs<ExtArgs>
    _count?: boolean | Proceso_herramientasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_herramientas"]>

  export type proceso_herramientasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_herramienta?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    herramienta?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_herramientas"]>

  export type proceso_herramientasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    horas?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_herramienta?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    herramienta?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_herramientas"]>

  export type proceso_herramientasSelectScalar = {
    id?: boolean
    horas?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_herramienta?: boolean
    estadoEliminado?: boolean
  }

  export type proceso_herramientasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "horas" | "descuento" | "precio" | "id_proceso" | "id_herramienta" | "estadoEliminado", ExtArgs["result"]["proceso_herramientas"]>
  export type proceso_herramientasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    herramienta?: boolean | InventarioDefaultArgs<ExtArgs>
    horarios?: boolean | proceso_herramientas$horariosArgs<ExtArgs>
    _count?: boolean | Proceso_herramientasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type proceso_herramientasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    herramienta?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type proceso_herramientasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    herramienta?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $proceso_herramientasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proceso_herramientas"
    objects: {
      proceso: Prisma.$ProcesoPayload<ExtArgs>
      herramienta: Prisma.$InventarioPayload<ExtArgs>
      horarios: Prisma.$HorarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      horas: number
      descuento: number
      precio: number
      id_proceso: number
      id_herramienta: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["proceso_herramientas"]>
    composites: {}
  }

  type proceso_herramientasGetPayload<S extends boolean | null | undefined | proceso_herramientasDefaultArgs> = $Result.GetResult<Prisma.$proceso_herramientasPayload, S>

  type proceso_herramientasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proceso_herramientasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Proceso_herramientasCountAggregateInputType | true
    }

  export interface proceso_herramientasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proceso_herramientas'], meta: { name: 'proceso_herramientas' } }
    /**
     * Find zero or one Proceso_herramientas that matches the filter.
     * @param {proceso_herramientasFindUniqueArgs} args - Arguments to find a Proceso_herramientas
     * @example
     * // Get one Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proceso_herramientasFindUniqueArgs>(args: SelectSubset<T, proceso_herramientasFindUniqueArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proceso_herramientas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proceso_herramientasFindUniqueOrThrowArgs} args - Arguments to find a Proceso_herramientas
     * @example
     * // Get one Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proceso_herramientasFindUniqueOrThrowArgs>(args: SelectSubset<T, proceso_herramientasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso_herramientas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_herramientasFindFirstArgs} args - Arguments to find a Proceso_herramientas
     * @example
     * // Get one Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proceso_herramientasFindFirstArgs>(args?: SelectSubset<T, proceso_herramientasFindFirstArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso_herramientas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_herramientasFindFirstOrThrowArgs} args - Arguments to find a Proceso_herramientas
     * @example
     * // Get one Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proceso_herramientasFindFirstOrThrowArgs>(args?: SelectSubset<T, proceso_herramientasFindFirstOrThrowArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proceso_herramientas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_herramientasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.findMany()
     * 
     * // Get first 10 Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proceso_herramientasWithIdOnly = await prisma.proceso_herramientas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends proceso_herramientasFindManyArgs>(args?: SelectSubset<T, proceso_herramientasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proceso_herramientas.
     * @param {proceso_herramientasCreateArgs} args - Arguments to create a Proceso_herramientas.
     * @example
     * // Create one Proceso_herramientas
     * const Proceso_herramientas = await prisma.proceso_herramientas.create({
     *   data: {
     *     // ... data to create a Proceso_herramientas
     *   }
     * })
     * 
     */
    create<T extends proceso_herramientasCreateArgs>(args: SelectSubset<T, proceso_herramientasCreateArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proceso_herramientas.
     * @param {proceso_herramientasCreateManyArgs} args - Arguments to create many Proceso_herramientas.
     * @example
     * // Create many Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proceso_herramientasCreateManyArgs>(args?: SelectSubset<T, proceso_herramientasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proceso_herramientas and returns the data saved in the database.
     * @param {proceso_herramientasCreateManyAndReturnArgs} args - Arguments to create many Proceso_herramientas.
     * @example
     * // Create many Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proceso_herramientas and only return the `id`
     * const proceso_herramientasWithIdOnly = await prisma.proceso_herramientas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proceso_herramientasCreateManyAndReturnArgs>(args?: SelectSubset<T, proceso_herramientasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proceso_herramientas.
     * @param {proceso_herramientasDeleteArgs} args - Arguments to delete one Proceso_herramientas.
     * @example
     * // Delete one Proceso_herramientas
     * const Proceso_herramientas = await prisma.proceso_herramientas.delete({
     *   where: {
     *     // ... filter to delete one Proceso_herramientas
     *   }
     * })
     * 
     */
    delete<T extends proceso_herramientasDeleteArgs>(args: SelectSubset<T, proceso_herramientasDeleteArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proceso_herramientas.
     * @param {proceso_herramientasUpdateArgs} args - Arguments to update one Proceso_herramientas.
     * @example
     * // Update one Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proceso_herramientasUpdateArgs>(args: SelectSubset<T, proceso_herramientasUpdateArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proceso_herramientas.
     * @param {proceso_herramientasDeleteManyArgs} args - Arguments to filter Proceso_herramientas to delete.
     * @example
     * // Delete a few Proceso_herramientas
     * const { count } = await prisma.proceso_herramientas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proceso_herramientasDeleteManyArgs>(args?: SelectSubset<T, proceso_herramientasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proceso_herramientas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_herramientasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proceso_herramientasUpdateManyArgs>(args: SelectSubset<T, proceso_herramientasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proceso_herramientas and returns the data updated in the database.
     * @param {proceso_herramientasUpdateManyAndReturnArgs} args - Arguments to update many Proceso_herramientas.
     * @example
     * // Update many Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proceso_herramientas and only return the `id`
     * const proceso_herramientasWithIdOnly = await prisma.proceso_herramientas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proceso_herramientasUpdateManyAndReturnArgs>(args: SelectSubset<T, proceso_herramientasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proceso_herramientas.
     * @param {proceso_herramientasUpsertArgs} args - Arguments to update or create a Proceso_herramientas.
     * @example
     * // Update or create a Proceso_herramientas
     * const proceso_herramientas = await prisma.proceso_herramientas.upsert({
     *   create: {
     *     // ... data to create a Proceso_herramientas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proceso_herramientas we want to update
     *   }
     * })
     */
    upsert<T extends proceso_herramientasUpsertArgs>(args: SelectSubset<T, proceso_herramientasUpsertArgs<ExtArgs>>): Prisma__proceso_herramientasClient<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proceso_herramientas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_herramientasCountArgs} args - Arguments to filter Proceso_herramientas to count.
     * @example
     * // Count the number of Proceso_herramientas
     * const count = await prisma.proceso_herramientas.count({
     *   where: {
     *     // ... the filter for the Proceso_herramientas we want to count
     *   }
     * })
    **/
    count<T extends proceso_herramientasCountArgs>(
      args?: Subset<T, proceso_herramientasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Proceso_herramientasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proceso_herramientas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proceso_herramientasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Proceso_herramientasAggregateArgs>(args: Subset<T, Proceso_herramientasAggregateArgs>): Prisma.PrismaPromise<GetProceso_herramientasAggregateType<T>>

    /**
     * Group by Proceso_herramientas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_herramientasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proceso_herramientasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proceso_herramientasGroupByArgs['orderBy'] }
        : { orderBy?: proceso_herramientasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proceso_herramientasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProceso_herramientasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proceso_herramientas model
   */
  readonly fields: proceso_herramientasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proceso_herramientas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proceso_herramientasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    proceso<T extends ProcesoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProcesoDefaultArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    herramienta<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    horarios<T extends proceso_herramientas$horariosArgs<ExtArgs> = {}>(args?: Subset<T, proceso_herramientas$horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proceso_herramientas model
   */
  interface proceso_herramientasFieldRefs {
    readonly id: FieldRef<"proceso_herramientas", 'Int'>
    readonly horas: FieldRef<"proceso_herramientas", 'Int'>
    readonly descuento: FieldRef<"proceso_herramientas", 'Float'>
    readonly precio: FieldRef<"proceso_herramientas", 'Float'>
    readonly id_proceso: FieldRef<"proceso_herramientas", 'Int'>
    readonly id_herramienta: FieldRef<"proceso_herramientas", 'Int'>
    readonly estadoEliminado: FieldRef<"proceso_herramientas", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * proceso_herramientas findUnique
   */
  export type proceso_herramientasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * Filter, which proceso_herramientas to fetch.
     */
    where: proceso_herramientasWhereUniqueInput
  }

  /**
   * proceso_herramientas findUniqueOrThrow
   */
  export type proceso_herramientasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * Filter, which proceso_herramientas to fetch.
     */
    where: proceso_herramientasWhereUniqueInput
  }

  /**
   * proceso_herramientas findFirst
   */
  export type proceso_herramientasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * Filter, which proceso_herramientas to fetch.
     */
    where?: proceso_herramientasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_herramientas to fetch.
     */
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proceso_herramientas.
     */
    cursor?: proceso_herramientasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_herramientas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_herramientas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proceso_herramientas.
     */
    distinct?: Proceso_herramientasScalarFieldEnum | Proceso_herramientasScalarFieldEnum[]
  }

  /**
   * proceso_herramientas findFirstOrThrow
   */
  export type proceso_herramientasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * Filter, which proceso_herramientas to fetch.
     */
    where?: proceso_herramientasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_herramientas to fetch.
     */
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proceso_herramientas.
     */
    cursor?: proceso_herramientasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_herramientas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_herramientas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proceso_herramientas.
     */
    distinct?: Proceso_herramientasScalarFieldEnum | Proceso_herramientasScalarFieldEnum[]
  }

  /**
   * proceso_herramientas findMany
   */
  export type proceso_herramientasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * Filter, which proceso_herramientas to fetch.
     */
    where?: proceso_herramientasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_herramientas to fetch.
     */
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proceso_herramientas.
     */
    cursor?: proceso_herramientasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_herramientas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_herramientas.
     */
    skip?: number
    distinct?: Proceso_herramientasScalarFieldEnum | Proceso_herramientasScalarFieldEnum[]
  }

  /**
   * proceso_herramientas create
   */
  export type proceso_herramientasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * The data needed to create a proceso_herramientas.
     */
    data: XOR<proceso_herramientasCreateInput, proceso_herramientasUncheckedCreateInput>
  }

  /**
   * proceso_herramientas createMany
   */
  export type proceso_herramientasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proceso_herramientas.
     */
    data: proceso_herramientasCreateManyInput | proceso_herramientasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proceso_herramientas createManyAndReturn
   */
  export type proceso_herramientasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * The data used to create many proceso_herramientas.
     */
    data: proceso_herramientasCreateManyInput | proceso_herramientasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * proceso_herramientas update
   */
  export type proceso_herramientasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * The data needed to update a proceso_herramientas.
     */
    data: XOR<proceso_herramientasUpdateInput, proceso_herramientasUncheckedUpdateInput>
    /**
     * Choose, which proceso_herramientas to update.
     */
    where: proceso_herramientasWhereUniqueInput
  }

  /**
   * proceso_herramientas updateMany
   */
  export type proceso_herramientasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proceso_herramientas.
     */
    data: XOR<proceso_herramientasUpdateManyMutationInput, proceso_herramientasUncheckedUpdateManyInput>
    /**
     * Filter which proceso_herramientas to update
     */
    where?: proceso_herramientasWhereInput
    /**
     * Limit how many proceso_herramientas to update.
     */
    limit?: number
  }

  /**
   * proceso_herramientas updateManyAndReturn
   */
  export type proceso_herramientasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * The data used to update proceso_herramientas.
     */
    data: XOR<proceso_herramientasUpdateManyMutationInput, proceso_herramientasUncheckedUpdateManyInput>
    /**
     * Filter which proceso_herramientas to update
     */
    where?: proceso_herramientasWhereInput
    /**
     * Limit how many proceso_herramientas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * proceso_herramientas upsert
   */
  export type proceso_herramientasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * The filter to search for the proceso_herramientas to update in case it exists.
     */
    where: proceso_herramientasWhereUniqueInput
    /**
     * In case the proceso_herramientas found by the `where` argument doesn't exist, create a new proceso_herramientas with this data.
     */
    create: XOR<proceso_herramientasCreateInput, proceso_herramientasUncheckedCreateInput>
    /**
     * In case the proceso_herramientas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proceso_herramientasUpdateInput, proceso_herramientasUncheckedUpdateInput>
  }

  /**
   * proceso_herramientas delete
   */
  export type proceso_herramientasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    /**
     * Filter which proceso_herramientas to delete.
     */
    where: proceso_herramientasWhereUniqueInput
  }

  /**
   * proceso_herramientas deleteMany
   */
  export type proceso_herramientasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proceso_herramientas to delete
     */
    where?: proceso_herramientasWhereInput
    /**
     * Limit how many proceso_herramientas to delete.
     */
    limit?: number
  }

  /**
   * proceso_herramientas.horarios
   */
  export type proceso_herramientas$horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    where?: HorarioWhereInput
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    cursor?: HorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorarioScalarFieldEnum | HorarioScalarFieldEnum[]
  }

  /**
   * proceso_herramientas without action
   */
  export type proceso_herramientasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
  }


  /**
   * Model proceso_inventario
   */

  export type AggregateProceso_inventario = {
    _count: Proceso_inventarioCountAggregateOutputType | null
    _avg: Proceso_inventarioAvgAggregateOutputType | null
    _sum: Proceso_inventarioSumAggregateOutputType | null
    _min: Proceso_inventarioMinAggregateOutputType | null
    _max: Proceso_inventarioMaxAggregateOutputType | null
  }

  export type Proceso_inventarioAvgAggregateOutputType = {
    id: number | null
    cantidad: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_elemento: number | null
  }

  export type Proceso_inventarioSumAggregateOutputType = {
    id: number | null
    cantidad: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_elemento: number | null
  }

  export type Proceso_inventarioMinAggregateOutputType = {
    id: number | null
    cantidad: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_elemento: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Proceso_inventarioMaxAggregateOutputType = {
    id: number | null
    cantidad: number | null
    descuento: number | null
    precio: number | null
    id_proceso: number | null
    id_elemento: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Proceso_inventarioCountAggregateOutputType = {
    id: number
    cantidad: number
    descuento: number
    precio: number
    id_proceso: number
    id_elemento: number
    estadoEliminado: number
    _all: number
  }


  export type Proceso_inventarioAvgAggregateInputType = {
    id?: true
    cantidad?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_elemento?: true
  }

  export type Proceso_inventarioSumAggregateInputType = {
    id?: true
    cantidad?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_elemento?: true
  }

  export type Proceso_inventarioMinAggregateInputType = {
    id?: true
    cantidad?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_elemento?: true
    estadoEliminado?: true
  }

  export type Proceso_inventarioMaxAggregateInputType = {
    id?: true
    cantidad?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_elemento?: true
    estadoEliminado?: true
  }

  export type Proceso_inventarioCountAggregateInputType = {
    id?: true
    cantidad?: true
    descuento?: true
    precio?: true
    id_proceso?: true
    id_elemento?: true
    estadoEliminado?: true
    _all?: true
  }

  export type Proceso_inventarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proceso_inventario to aggregate.
     */
    where?: proceso_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_inventarios to fetch.
     */
    orderBy?: proceso_inventarioOrderByWithRelationInput | proceso_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proceso_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proceso_inventarios
    **/
    _count?: true | Proceso_inventarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Proceso_inventarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Proceso_inventarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Proceso_inventarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Proceso_inventarioMaxAggregateInputType
  }

  export type GetProceso_inventarioAggregateType<T extends Proceso_inventarioAggregateArgs> = {
        [P in keyof T & keyof AggregateProceso_inventario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProceso_inventario[P]>
      : GetScalarType<T[P], AggregateProceso_inventario[P]>
  }




  export type proceso_inventarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proceso_inventarioWhereInput
    orderBy?: proceso_inventarioOrderByWithAggregationInput | proceso_inventarioOrderByWithAggregationInput[]
    by: Proceso_inventarioScalarFieldEnum[] | Proceso_inventarioScalarFieldEnum
    having?: proceso_inventarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Proceso_inventarioCountAggregateInputType | true
    _avg?: Proceso_inventarioAvgAggregateInputType
    _sum?: Proceso_inventarioSumAggregateInputType
    _min?: Proceso_inventarioMinAggregateInputType
    _max?: Proceso_inventarioMaxAggregateInputType
  }

  export type Proceso_inventarioGroupByOutputType = {
    id: number
    cantidad: number
    descuento: number
    precio: number
    id_proceso: number
    id_elemento: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: Proceso_inventarioCountAggregateOutputType | null
    _avg: Proceso_inventarioAvgAggregateOutputType | null
    _sum: Proceso_inventarioSumAggregateOutputType | null
    _min: Proceso_inventarioMinAggregateOutputType | null
    _max: Proceso_inventarioMaxAggregateOutputType | null
  }

  type GetProceso_inventarioGroupByPayload<T extends proceso_inventarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Proceso_inventarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Proceso_inventarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Proceso_inventarioGroupByOutputType[P]>
            : GetScalarType<T[P], Proceso_inventarioGroupByOutputType[P]>
        }
      >
    >


  export type proceso_inventarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_elemento?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_inventario"]>

  export type proceso_inventarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_elemento?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_inventario"]>

  export type proceso_inventarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cantidad?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_elemento?: boolean
    estadoEliminado?: boolean
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proceso_inventario"]>

  export type proceso_inventarioSelectScalar = {
    id?: boolean
    cantidad?: boolean
    descuento?: boolean
    precio?: boolean
    id_proceso?: boolean
    id_elemento?: boolean
    estadoEliminado?: boolean
  }

  export type proceso_inventarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cantidad" | "descuento" | "precio" | "id_proceso" | "id_elemento" | "estadoEliminado", ExtArgs["result"]["proceso_inventario"]>
  export type proceso_inventarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type proceso_inventarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type proceso_inventarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proceso?: boolean | ProcesoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $proceso_inventarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proceso_inventario"
    objects: {
      proceso: Prisma.$ProcesoPayload<ExtArgs>
      elemento: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cantidad: number
      descuento: number
      precio: number
      id_proceso: number
      id_elemento: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["proceso_inventario"]>
    composites: {}
  }

  type proceso_inventarioGetPayload<S extends boolean | null | undefined | proceso_inventarioDefaultArgs> = $Result.GetResult<Prisma.$proceso_inventarioPayload, S>

  type proceso_inventarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proceso_inventarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Proceso_inventarioCountAggregateInputType | true
    }

  export interface proceso_inventarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proceso_inventario'], meta: { name: 'proceso_inventario' } }
    /**
     * Find zero or one Proceso_inventario that matches the filter.
     * @param {proceso_inventarioFindUniqueArgs} args - Arguments to find a Proceso_inventario
     * @example
     * // Get one Proceso_inventario
     * const proceso_inventario = await prisma.proceso_inventario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proceso_inventarioFindUniqueArgs>(args: SelectSubset<T, proceso_inventarioFindUniqueArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proceso_inventario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proceso_inventarioFindUniqueOrThrowArgs} args - Arguments to find a Proceso_inventario
     * @example
     * // Get one Proceso_inventario
     * const proceso_inventario = await prisma.proceso_inventario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proceso_inventarioFindUniqueOrThrowArgs>(args: SelectSubset<T, proceso_inventarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso_inventario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_inventarioFindFirstArgs} args - Arguments to find a Proceso_inventario
     * @example
     * // Get one Proceso_inventario
     * const proceso_inventario = await prisma.proceso_inventario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proceso_inventarioFindFirstArgs>(args?: SelectSubset<T, proceso_inventarioFindFirstArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proceso_inventario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_inventarioFindFirstOrThrowArgs} args - Arguments to find a Proceso_inventario
     * @example
     * // Get one Proceso_inventario
     * const proceso_inventario = await prisma.proceso_inventario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proceso_inventarioFindFirstOrThrowArgs>(args?: SelectSubset<T, proceso_inventarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proceso_inventarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_inventarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proceso_inventarios
     * const proceso_inventarios = await prisma.proceso_inventario.findMany()
     * 
     * // Get first 10 Proceso_inventarios
     * const proceso_inventarios = await prisma.proceso_inventario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proceso_inventarioWithIdOnly = await prisma.proceso_inventario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends proceso_inventarioFindManyArgs>(args?: SelectSubset<T, proceso_inventarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proceso_inventario.
     * @param {proceso_inventarioCreateArgs} args - Arguments to create a Proceso_inventario.
     * @example
     * // Create one Proceso_inventario
     * const Proceso_inventario = await prisma.proceso_inventario.create({
     *   data: {
     *     // ... data to create a Proceso_inventario
     *   }
     * })
     * 
     */
    create<T extends proceso_inventarioCreateArgs>(args: SelectSubset<T, proceso_inventarioCreateArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proceso_inventarios.
     * @param {proceso_inventarioCreateManyArgs} args - Arguments to create many Proceso_inventarios.
     * @example
     * // Create many Proceso_inventarios
     * const proceso_inventario = await prisma.proceso_inventario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proceso_inventarioCreateManyArgs>(args?: SelectSubset<T, proceso_inventarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proceso_inventarios and returns the data saved in the database.
     * @param {proceso_inventarioCreateManyAndReturnArgs} args - Arguments to create many Proceso_inventarios.
     * @example
     * // Create many Proceso_inventarios
     * const proceso_inventario = await prisma.proceso_inventario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proceso_inventarios and only return the `id`
     * const proceso_inventarioWithIdOnly = await prisma.proceso_inventario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proceso_inventarioCreateManyAndReturnArgs>(args?: SelectSubset<T, proceso_inventarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proceso_inventario.
     * @param {proceso_inventarioDeleteArgs} args - Arguments to delete one Proceso_inventario.
     * @example
     * // Delete one Proceso_inventario
     * const Proceso_inventario = await prisma.proceso_inventario.delete({
     *   where: {
     *     // ... filter to delete one Proceso_inventario
     *   }
     * })
     * 
     */
    delete<T extends proceso_inventarioDeleteArgs>(args: SelectSubset<T, proceso_inventarioDeleteArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proceso_inventario.
     * @param {proceso_inventarioUpdateArgs} args - Arguments to update one Proceso_inventario.
     * @example
     * // Update one Proceso_inventario
     * const proceso_inventario = await prisma.proceso_inventario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proceso_inventarioUpdateArgs>(args: SelectSubset<T, proceso_inventarioUpdateArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proceso_inventarios.
     * @param {proceso_inventarioDeleteManyArgs} args - Arguments to filter Proceso_inventarios to delete.
     * @example
     * // Delete a few Proceso_inventarios
     * const { count } = await prisma.proceso_inventario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proceso_inventarioDeleteManyArgs>(args?: SelectSubset<T, proceso_inventarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proceso_inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_inventarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proceso_inventarios
     * const proceso_inventario = await prisma.proceso_inventario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proceso_inventarioUpdateManyArgs>(args: SelectSubset<T, proceso_inventarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proceso_inventarios and returns the data updated in the database.
     * @param {proceso_inventarioUpdateManyAndReturnArgs} args - Arguments to update many Proceso_inventarios.
     * @example
     * // Update many Proceso_inventarios
     * const proceso_inventario = await prisma.proceso_inventario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proceso_inventarios and only return the `id`
     * const proceso_inventarioWithIdOnly = await prisma.proceso_inventario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proceso_inventarioUpdateManyAndReturnArgs>(args: SelectSubset<T, proceso_inventarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proceso_inventario.
     * @param {proceso_inventarioUpsertArgs} args - Arguments to update or create a Proceso_inventario.
     * @example
     * // Update or create a Proceso_inventario
     * const proceso_inventario = await prisma.proceso_inventario.upsert({
     *   create: {
     *     // ... data to create a Proceso_inventario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proceso_inventario we want to update
     *   }
     * })
     */
    upsert<T extends proceso_inventarioUpsertArgs>(args: SelectSubset<T, proceso_inventarioUpsertArgs<ExtArgs>>): Prisma__proceso_inventarioClient<$Result.GetResult<Prisma.$proceso_inventarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proceso_inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_inventarioCountArgs} args - Arguments to filter Proceso_inventarios to count.
     * @example
     * // Count the number of Proceso_inventarios
     * const count = await prisma.proceso_inventario.count({
     *   where: {
     *     // ... the filter for the Proceso_inventarios we want to count
     *   }
     * })
    **/
    count<T extends proceso_inventarioCountArgs>(
      args?: Subset<T, proceso_inventarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Proceso_inventarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proceso_inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Proceso_inventarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Proceso_inventarioAggregateArgs>(args: Subset<T, Proceso_inventarioAggregateArgs>): Prisma.PrismaPromise<GetProceso_inventarioAggregateType<T>>

    /**
     * Group by Proceso_inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proceso_inventarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proceso_inventarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proceso_inventarioGroupByArgs['orderBy'] }
        : { orderBy?: proceso_inventarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proceso_inventarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProceso_inventarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proceso_inventario model
   */
  readonly fields: proceso_inventarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proceso_inventario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proceso_inventarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    proceso<T extends ProcesoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProcesoDefaultArgs<ExtArgs>>): Prisma__ProcesoClient<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    elemento<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proceso_inventario model
   */
  interface proceso_inventarioFieldRefs {
    readonly id: FieldRef<"proceso_inventario", 'Int'>
    readonly cantidad: FieldRef<"proceso_inventario", 'Float'>
    readonly descuento: FieldRef<"proceso_inventario", 'Float'>
    readonly precio: FieldRef<"proceso_inventario", 'Float'>
    readonly id_proceso: FieldRef<"proceso_inventario", 'Int'>
    readonly id_elemento: FieldRef<"proceso_inventario", 'Int'>
    readonly estadoEliminado: FieldRef<"proceso_inventario", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * proceso_inventario findUnique
   */
  export type proceso_inventarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which proceso_inventario to fetch.
     */
    where: proceso_inventarioWhereUniqueInput
  }

  /**
   * proceso_inventario findUniqueOrThrow
   */
  export type proceso_inventarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which proceso_inventario to fetch.
     */
    where: proceso_inventarioWhereUniqueInput
  }

  /**
   * proceso_inventario findFirst
   */
  export type proceso_inventarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which proceso_inventario to fetch.
     */
    where?: proceso_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_inventarios to fetch.
     */
    orderBy?: proceso_inventarioOrderByWithRelationInput | proceso_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proceso_inventarios.
     */
    cursor?: proceso_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proceso_inventarios.
     */
    distinct?: Proceso_inventarioScalarFieldEnum | Proceso_inventarioScalarFieldEnum[]
  }

  /**
   * proceso_inventario findFirstOrThrow
   */
  export type proceso_inventarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which proceso_inventario to fetch.
     */
    where?: proceso_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_inventarios to fetch.
     */
    orderBy?: proceso_inventarioOrderByWithRelationInput | proceso_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proceso_inventarios.
     */
    cursor?: proceso_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proceso_inventarios.
     */
    distinct?: Proceso_inventarioScalarFieldEnum | Proceso_inventarioScalarFieldEnum[]
  }

  /**
   * proceso_inventario findMany
   */
  export type proceso_inventarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which proceso_inventarios to fetch.
     */
    where?: proceso_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proceso_inventarios to fetch.
     */
    orderBy?: proceso_inventarioOrderByWithRelationInput | proceso_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proceso_inventarios.
     */
    cursor?: proceso_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proceso_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proceso_inventarios.
     */
    skip?: number
    distinct?: Proceso_inventarioScalarFieldEnum | Proceso_inventarioScalarFieldEnum[]
  }

  /**
   * proceso_inventario create
   */
  export type proceso_inventarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * The data needed to create a proceso_inventario.
     */
    data: XOR<proceso_inventarioCreateInput, proceso_inventarioUncheckedCreateInput>
  }

  /**
   * proceso_inventario createMany
   */
  export type proceso_inventarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proceso_inventarios.
     */
    data: proceso_inventarioCreateManyInput | proceso_inventarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proceso_inventario createManyAndReturn
   */
  export type proceso_inventarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * The data used to create many proceso_inventarios.
     */
    data: proceso_inventarioCreateManyInput | proceso_inventarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * proceso_inventario update
   */
  export type proceso_inventarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * The data needed to update a proceso_inventario.
     */
    data: XOR<proceso_inventarioUpdateInput, proceso_inventarioUncheckedUpdateInput>
    /**
     * Choose, which proceso_inventario to update.
     */
    where: proceso_inventarioWhereUniqueInput
  }

  /**
   * proceso_inventario updateMany
   */
  export type proceso_inventarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proceso_inventarios.
     */
    data: XOR<proceso_inventarioUpdateManyMutationInput, proceso_inventarioUncheckedUpdateManyInput>
    /**
     * Filter which proceso_inventarios to update
     */
    where?: proceso_inventarioWhereInput
    /**
     * Limit how many proceso_inventarios to update.
     */
    limit?: number
  }

  /**
   * proceso_inventario updateManyAndReturn
   */
  export type proceso_inventarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * The data used to update proceso_inventarios.
     */
    data: XOR<proceso_inventarioUpdateManyMutationInput, proceso_inventarioUncheckedUpdateManyInput>
    /**
     * Filter which proceso_inventarios to update
     */
    where?: proceso_inventarioWhereInput
    /**
     * Limit how many proceso_inventarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * proceso_inventario upsert
   */
  export type proceso_inventarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * The filter to search for the proceso_inventario to update in case it exists.
     */
    where: proceso_inventarioWhereUniqueInput
    /**
     * In case the proceso_inventario found by the `where` argument doesn't exist, create a new proceso_inventario with this data.
     */
    create: XOR<proceso_inventarioCreateInput, proceso_inventarioUncheckedCreateInput>
    /**
     * In case the proceso_inventario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proceso_inventarioUpdateInput, proceso_inventarioUncheckedUpdateInput>
  }

  /**
   * proceso_inventario delete
   */
  export type proceso_inventarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
    /**
     * Filter which proceso_inventario to delete.
     */
    where: proceso_inventarioWhereUniqueInput
  }

  /**
   * proceso_inventario deleteMany
   */
  export type proceso_inventarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proceso_inventarios to delete
     */
    where?: proceso_inventarioWhereInput
    /**
     * Limit how many proceso_inventarios to delete.
     */
    limit?: number
  }

  /**
   * proceso_inventario without action
   */
  export type proceso_inventarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_inventario
     */
    select?: proceso_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_inventario
     */
    omit?: proceso_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_inventarioInclude<ExtArgs> | null
  }


  /**
   * Model Obra
   */

  export type AggregateObra = {
    _count: ObraCountAggregateOutputType | null
    _avg: ObraAvgAggregateOutputType | null
    _sum: ObraSumAggregateOutputType | null
    _min: ObraMinAggregateOutputType | null
    _max: ObraMaxAggregateOutputType | null
  }

  export type ObraAvgAggregateOutputType = {
    id: number | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    id_proforma: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ObraSumAggregateOutputType = {
    id: number | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    id_proforma: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type ObraMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tiempo_esperado: Date | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    id_proforma: number | null
    estado: $Enums.EstadoObra | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type ObraMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tiempo_esperado: Date | null
    porcentaje_venta: Decimal | null
    id_punto: number | null
    id_cliente: number | null
    id_proforma: number | null
    estado: $Enums.EstadoObra | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type ObraCountAggregateOutputType = {
    id: number
    nombre: number
    tiempo_esperado: number
    porcentaje_venta: number
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type ObraAvgAggregateInputType = {
    id?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    id_proforma?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ObraSumAggregateInputType = {
    id?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    id_proforma?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type ObraMinAggregateInputType = {
    id?: true
    nombre?: true
    tiempo_esperado?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    id_proforma?: true
    estado?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type ObraMaxAggregateInputType = {
    id?: true
    nombre?: true
    tiempo_esperado?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    id_proforma?: true
    estado?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type ObraCountAggregateInputType = {
    id?: true
    nombre?: true
    tiempo_esperado?: true
    porcentaje_venta?: true
    id_punto?: true
    id_cliente?: true
    id_proforma?: true
    estado?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type ObraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Obra to aggregate.
     */
    where?: ObraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Obras to fetch.
     */
    orderBy?: ObraOrderByWithRelationInput | ObraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ObraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Obras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Obras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Obras
    **/
    _count?: true | ObraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ObraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ObraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ObraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ObraMaxAggregateInputType
  }

  export type GetObraAggregateType<T extends ObraAggregateArgs> = {
        [P in keyof T & keyof AggregateObra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateObra[P]>
      : GetScalarType<T[P], AggregateObra[P]>
  }




  export type ObraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ObraWhereInput
    orderBy?: ObraOrderByWithAggregationInput | ObraOrderByWithAggregationInput[]
    by: ObraScalarFieldEnum[] | ObraScalarFieldEnum
    having?: ObraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ObraCountAggregateInputType | true
    _avg?: ObraAvgAggregateInputType
    _sum?: ObraSumAggregateInputType
    _min?: ObraMinAggregateInputType
    _max?: ObraMaxAggregateInputType
  }

  export type ObraGroupByOutputType = {
    id: number
    nombre: string
    tiempo_esperado: Date
    porcentaje_venta: Decimal
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado: $Enums.EstadoObra
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: ObraCountAggregateOutputType | null
    _avg: ObraAvgAggregateOutputType | null
    _sum: ObraSumAggregateOutputType | null
    _min: ObraMinAggregateOutputType | null
    _max: ObraMaxAggregateOutputType | null
  }

  type GetObraGroupByPayload<T extends ObraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ObraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ObraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ObraGroupByOutputType[P]>
            : GetScalarType<T[P], ObraGroupByOutputType[P]>
        }
      >
    >


  export type ObraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    id_proforma?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    proforma?: boolean | ProformaDefaultArgs<ExtArgs>
    proceso?: boolean | Obra$procesoArgs<ExtArgs>
    transaccion?: boolean | Obra$transaccionArgs<ExtArgs>
    pedido?: boolean | Obra$pedidoArgs<ExtArgs>
    tarea?: boolean | Obra$tareaArgs<ExtArgs>
    _count?: boolean | ObraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["obra"]>

  export type ObraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    id_proforma?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    proforma?: boolean | ProformaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["obra"]>

  export type ObraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    id_proforma?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    proforma?: boolean | ProformaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["obra"]>

  export type ObraSelectScalar = {
    id?: boolean
    nombre?: boolean
    tiempo_esperado?: boolean
    porcentaje_venta?: boolean
    id_punto?: boolean
    id_cliente?: boolean
    id_proforma?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type ObraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "tiempo_esperado" | "porcentaje_venta" | "id_punto" | "id_cliente" | "id_proforma" | "estado" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["obra"]>
  export type ObraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    proforma?: boolean | ProformaDefaultArgs<ExtArgs>
    proceso?: boolean | Obra$procesoArgs<ExtArgs>
    transaccion?: boolean | Obra$transaccionArgs<ExtArgs>
    pedido?: boolean | Obra$pedidoArgs<ExtArgs>
    tarea?: boolean | Obra$tareaArgs<ExtArgs>
    _count?: boolean | ObraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ObraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    proforma?: boolean | ProformaDefaultArgs<ExtArgs>
  }
  export type ObraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    proforma?: boolean | ProformaDefaultArgs<ExtArgs>
  }

  export type $ObraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Obra"
    objects: {
      punto: Prisma.$PuntoPayload<ExtArgs>
      cliente: Prisma.$PersonaPayload<ExtArgs>
      proforma: Prisma.$ProformaPayload<ExtArgs>
      proceso: Prisma.$ProcesoPayload<ExtArgs>[]
      transaccion: Prisma.$TransaccionPayload<ExtArgs>[]
      pedido: Prisma.$PedidoPayload<ExtArgs>[]
      tarea: Prisma.$TareaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tiempo_esperado: Date
      porcentaje_venta: Prisma.Decimal
      id_punto: number
      id_cliente: number
      id_proforma: number
      estado: $Enums.EstadoObra
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["obra"]>
    composites: {}
  }

  type ObraGetPayload<S extends boolean | null | undefined | ObraDefaultArgs> = $Result.GetResult<Prisma.$ObraPayload, S>

  type ObraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ObraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ObraCountAggregateInputType | true
    }

  export interface ObraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Obra'], meta: { name: 'Obra' } }
    /**
     * Find zero or one Obra that matches the filter.
     * @param {ObraFindUniqueArgs} args - Arguments to find a Obra
     * @example
     * // Get one Obra
     * const obra = await prisma.obra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ObraFindUniqueArgs>(args: SelectSubset<T, ObraFindUniqueArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Obra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ObraFindUniqueOrThrowArgs} args - Arguments to find a Obra
     * @example
     * // Get one Obra
     * const obra = await prisma.obra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ObraFindUniqueOrThrowArgs>(args: SelectSubset<T, ObraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Obra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraFindFirstArgs} args - Arguments to find a Obra
     * @example
     * // Get one Obra
     * const obra = await prisma.obra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ObraFindFirstArgs>(args?: SelectSubset<T, ObraFindFirstArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Obra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraFindFirstOrThrowArgs} args - Arguments to find a Obra
     * @example
     * // Get one Obra
     * const obra = await prisma.obra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ObraFindFirstOrThrowArgs>(args?: SelectSubset<T, ObraFindFirstOrThrowArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Obras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Obras
     * const obras = await prisma.obra.findMany()
     * 
     * // Get first 10 Obras
     * const obras = await prisma.obra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const obraWithIdOnly = await prisma.obra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ObraFindManyArgs>(args?: SelectSubset<T, ObraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Obra.
     * @param {ObraCreateArgs} args - Arguments to create a Obra.
     * @example
     * // Create one Obra
     * const Obra = await prisma.obra.create({
     *   data: {
     *     // ... data to create a Obra
     *   }
     * })
     * 
     */
    create<T extends ObraCreateArgs>(args: SelectSubset<T, ObraCreateArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Obras.
     * @param {ObraCreateManyArgs} args - Arguments to create many Obras.
     * @example
     * // Create many Obras
     * const obra = await prisma.obra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ObraCreateManyArgs>(args?: SelectSubset<T, ObraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Obras and returns the data saved in the database.
     * @param {ObraCreateManyAndReturnArgs} args - Arguments to create many Obras.
     * @example
     * // Create many Obras
     * const obra = await prisma.obra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Obras and only return the `id`
     * const obraWithIdOnly = await prisma.obra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ObraCreateManyAndReturnArgs>(args?: SelectSubset<T, ObraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Obra.
     * @param {ObraDeleteArgs} args - Arguments to delete one Obra.
     * @example
     * // Delete one Obra
     * const Obra = await prisma.obra.delete({
     *   where: {
     *     // ... filter to delete one Obra
     *   }
     * })
     * 
     */
    delete<T extends ObraDeleteArgs>(args: SelectSubset<T, ObraDeleteArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Obra.
     * @param {ObraUpdateArgs} args - Arguments to update one Obra.
     * @example
     * // Update one Obra
     * const obra = await prisma.obra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ObraUpdateArgs>(args: SelectSubset<T, ObraUpdateArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Obras.
     * @param {ObraDeleteManyArgs} args - Arguments to filter Obras to delete.
     * @example
     * // Delete a few Obras
     * const { count } = await prisma.obra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ObraDeleteManyArgs>(args?: SelectSubset<T, ObraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Obras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Obras
     * const obra = await prisma.obra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ObraUpdateManyArgs>(args: SelectSubset<T, ObraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Obras and returns the data updated in the database.
     * @param {ObraUpdateManyAndReturnArgs} args - Arguments to update many Obras.
     * @example
     * // Update many Obras
     * const obra = await prisma.obra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Obras and only return the `id`
     * const obraWithIdOnly = await prisma.obra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ObraUpdateManyAndReturnArgs>(args: SelectSubset<T, ObraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Obra.
     * @param {ObraUpsertArgs} args - Arguments to update or create a Obra.
     * @example
     * // Update or create a Obra
     * const obra = await prisma.obra.upsert({
     *   create: {
     *     // ... data to create a Obra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Obra we want to update
     *   }
     * })
     */
    upsert<T extends ObraUpsertArgs>(args: SelectSubset<T, ObraUpsertArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Obras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraCountArgs} args - Arguments to filter Obras to count.
     * @example
     * // Count the number of Obras
     * const count = await prisma.obra.count({
     *   where: {
     *     // ... the filter for the Obras we want to count
     *   }
     * })
    **/
    count<T extends ObraCountArgs>(
      args?: Subset<T, ObraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ObraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Obra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ObraAggregateArgs>(args: Subset<T, ObraAggregateArgs>): Prisma.PrismaPromise<GetObraAggregateType<T>>

    /**
     * Group by Obra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ObraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ObraGroupByArgs['orderBy'] }
        : { orderBy?: ObraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ObraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetObraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Obra model
   */
  readonly fields: ObraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Obra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ObraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    punto<T extends PuntoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PuntoDefaultArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cliente<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proforma<T extends ProformaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProformaDefaultArgs<ExtArgs>>): Prisma__ProformaClient<$Result.GetResult<Prisma.$ProformaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proceso<T extends Obra$procesoArgs<ExtArgs> = {}>(args?: Subset<T, Obra$procesoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaccion<T extends Obra$transaccionArgs<ExtArgs> = {}>(args?: Subset<T, Obra$transaccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedido<T extends Obra$pedidoArgs<ExtArgs> = {}>(args?: Subset<T, Obra$pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tarea<T extends Obra$tareaArgs<ExtArgs> = {}>(args?: Subset<T, Obra$tareaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Obra model
   */
  interface ObraFieldRefs {
    readonly id: FieldRef<"Obra", 'Int'>
    readonly nombre: FieldRef<"Obra", 'String'>
    readonly tiempo_esperado: FieldRef<"Obra", 'DateTime'>
    readonly porcentaje_venta: FieldRef<"Obra", 'Decimal'>
    readonly id_punto: FieldRef<"Obra", 'Int'>
    readonly id_cliente: FieldRef<"Obra", 'Int'>
    readonly id_proforma: FieldRef<"Obra", 'Int'>
    readonly estado: FieldRef<"Obra", 'EstadoObra'>
    readonly estadoEliminado: FieldRef<"Obra", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Obra", 'Int'>
    readonly updatedBy: FieldRef<"Obra", 'Int'>
    readonly deletedBy: FieldRef<"Obra", 'Int'>
    readonly createdDate: FieldRef<"Obra", 'DateTime'>
    readonly updatedDate: FieldRef<"Obra", 'DateTime'>
    readonly deletedDate: FieldRef<"Obra", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Obra findUnique
   */
  export type ObraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * Filter, which Obra to fetch.
     */
    where: ObraWhereUniqueInput
  }

  /**
   * Obra findUniqueOrThrow
   */
  export type ObraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * Filter, which Obra to fetch.
     */
    where: ObraWhereUniqueInput
  }

  /**
   * Obra findFirst
   */
  export type ObraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * Filter, which Obra to fetch.
     */
    where?: ObraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Obras to fetch.
     */
    orderBy?: ObraOrderByWithRelationInput | ObraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Obras.
     */
    cursor?: ObraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Obras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Obras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Obras.
     */
    distinct?: ObraScalarFieldEnum | ObraScalarFieldEnum[]
  }

  /**
   * Obra findFirstOrThrow
   */
  export type ObraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * Filter, which Obra to fetch.
     */
    where?: ObraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Obras to fetch.
     */
    orderBy?: ObraOrderByWithRelationInput | ObraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Obras.
     */
    cursor?: ObraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Obras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Obras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Obras.
     */
    distinct?: ObraScalarFieldEnum | ObraScalarFieldEnum[]
  }

  /**
   * Obra findMany
   */
  export type ObraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * Filter, which Obras to fetch.
     */
    where?: ObraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Obras to fetch.
     */
    orderBy?: ObraOrderByWithRelationInput | ObraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Obras.
     */
    cursor?: ObraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Obras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Obras.
     */
    skip?: number
    distinct?: ObraScalarFieldEnum | ObraScalarFieldEnum[]
  }

  /**
   * Obra create
   */
  export type ObraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * The data needed to create a Obra.
     */
    data: XOR<ObraCreateInput, ObraUncheckedCreateInput>
  }

  /**
   * Obra createMany
   */
  export type ObraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Obras.
     */
    data: ObraCreateManyInput | ObraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Obra createManyAndReturn
   */
  export type ObraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * The data used to create many Obras.
     */
    data: ObraCreateManyInput | ObraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Obra update
   */
  export type ObraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * The data needed to update a Obra.
     */
    data: XOR<ObraUpdateInput, ObraUncheckedUpdateInput>
    /**
     * Choose, which Obra to update.
     */
    where: ObraWhereUniqueInput
  }

  /**
   * Obra updateMany
   */
  export type ObraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Obras.
     */
    data: XOR<ObraUpdateManyMutationInput, ObraUncheckedUpdateManyInput>
    /**
     * Filter which Obras to update
     */
    where?: ObraWhereInput
    /**
     * Limit how many Obras to update.
     */
    limit?: number
  }

  /**
   * Obra updateManyAndReturn
   */
  export type ObraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * The data used to update Obras.
     */
    data: XOR<ObraUpdateManyMutationInput, ObraUncheckedUpdateManyInput>
    /**
     * Filter which Obras to update
     */
    where?: ObraWhereInput
    /**
     * Limit how many Obras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Obra upsert
   */
  export type ObraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * The filter to search for the Obra to update in case it exists.
     */
    where: ObraWhereUniqueInput
    /**
     * In case the Obra found by the `where` argument doesn't exist, create a new Obra with this data.
     */
    create: XOR<ObraCreateInput, ObraUncheckedCreateInput>
    /**
     * In case the Obra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ObraUpdateInput, ObraUncheckedUpdateInput>
  }

  /**
   * Obra delete
   */
  export type ObraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    /**
     * Filter which Obra to delete.
     */
    where: ObraWhereUniqueInput
  }

  /**
   * Obra deleteMany
   */
  export type ObraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Obras to delete
     */
    where?: ObraWhereInput
    /**
     * Limit how many Obras to delete.
     */
    limit?: number
  }

  /**
   * Obra.proceso
   */
  export type Obra$procesoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proceso
     */
    select?: ProcesoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proceso
     */
    omit?: ProcesoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcesoInclude<ExtArgs> | null
    where?: ProcesoWhereInput
    orderBy?: ProcesoOrderByWithRelationInput | ProcesoOrderByWithRelationInput[]
    cursor?: ProcesoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcesoScalarFieldEnum | ProcesoScalarFieldEnum[]
  }

  /**
   * Obra.transaccion
   */
  export type Obra$transaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    cursor?: TransaccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Obra.pedido
   */
  export type Obra$pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Obra.tarea
   */
  export type Obra$tareaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    where?: TareaWhereInput
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    cursor?: TareaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Obra without action
   */
  export type ObraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
  }


  /**
   * Model Transaccion
   */

  export type AggregateTransaccion = {
    _count: TransaccionCountAggregateOutputType | null
    _avg: TransaccionAvgAggregateOutputType | null
    _sum: TransaccionSumAggregateOutputType | null
    _min: TransaccionMinAggregateOutputType | null
    _max: TransaccionMaxAggregateOutputType | null
  }

  export type TransaccionAvgAggregateOutputType = {
    id: number | null
    id_empleado: number | null
    id_persona: number | null
    id_obra: number | null
    id_compra: number | null
    id_venta: number | null
    id_devolucion: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type TransaccionSumAggregateOutputType = {
    id: number | null
    id_empleado: number | null
    id_persona: number | null
    id_obra: number | null
    id_compra: number | null
    id_venta: number | null
    id_devolucion: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type TransaccionMinAggregateOutputType = {
    id: number | null
    fecha: Date | null
    id_empleado: number | null
    id_persona: number | null
    id_obra: number | null
    id_compra: number | null
    id_venta: number | null
    id_devolucion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type TransaccionMaxAggregateOutputType = {
    id: number | null
    fecha: Date | null
    id_empleado: number | null
    id_persona: number | null
    id_obra: number | null
    id_compra: number | null
    id_venta: number | null
    id_devolucion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type TransaccionCountAggregateOutputType = {
    id: number
    fecha: number
    id_empleado: number
    id_persona: number
    id_obra: number
    id_compra: number
    id_venta: number
    id_devolucion: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type TransaccionAvgAggregateInputType = {
    id?: true
    id_empleado?: true
    id_persona?: true
    id_obra?: true
    id_compra?: true
    id_venta?: true
    id_devolucion?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type TransaccionSumAggregateInputType = {
    id?: true
    id_empleado?: true
    id_persona?: true
    id_obra?: true
    id_compra?: true
    id_venta?: true
    id_devolucion?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type TransaccionMinAggregateInputType = {
    id?: true
    fecha?: true
    id_empleado?: true
    id_persona?: true
    id_obra?: true
    id_compra?: true
    id_venta?: true
    id_devolucion?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type TransaccionMaxAggregateInputType = {
    id?: true
    fecha?: true
    id_empleado?: true
    id_persona?: true
    id_obra?: true
    id_compra?: true
    id_venta?: true
    id_devolucion?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type TransaccionCountAggregateInputType = {
    id?: true
    fecha?: true
    id_empleado?: true
    id_persona?: true
    id_obra?: true
    id_compra?: true
    id_venta?: true
    id_devolucion?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type TransaccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaccion to aggregate.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transaccions
    **/
    _count?: true | TransaccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransaccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransaccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaccionMaxAggregateInputType
  }

  export type GetTransaccionAggregateType<T extends TransaccionAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaccion[P]>
      : GetScalarType<T[P], AggregateTransaccion[P]>
  }




  export type TransaccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionWhereInput
    orderBy?: TransaccionOrderByWithAggregationInput | TransaccionOrderByWithAggregationInput[]
    by: TransaccionScalarFieldEnum[] | TransaccionScalarFieldEnum
    having?: TransaccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaccionCountAggregateInputType | true
    _avg?: TransaccionAvgAggregateInputType
    _sum?: TransaccionSumAggregateInputType
    _min?: TransaccionMinAggregateInputType
    _max?: TransaccionMaxAggregateInputType
  }

  export type TransaccionGroupByOutputType = {
    id: number
    fecha: Date
    id_empleado: number
    id_persona: number
    id_obra: number | null
    id_compra: number | null
    id_venta: number | null
    id_devolucion: number | null
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: TransaccionCountAggregateOutputType | null
    _avg: TransaccionAvgAggregateOutputType | null
    _sum: TransaccionSumAggregateOutputType | null
    _min: TransaccionMinAggregateOutputType | null
    _max: TransaccionMaxAggregateOutputType | null
  }

  type GetTransaccionGroupByPayload<T extends TransaccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaccionGroupByOutputType[P]>
            : GetScalarType<T[P], TransaccionGroupByOutputType[P]>
        }
      >
    >


  export type TransaccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    id_empleado?: boolean
    id_persona?: boolean
    id_obra?: boolean
    id_compra?: boolean
    id_venta?: boolean
    id_devolucion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Transaccion$obraArgs<ExtArgs>
    elementos?: boolean | Transaccion$elementosArgs<ExtArgs>
    pedido?: boolean | Transaccion$pedidoArgs<ExtArgs>
    compra?: boolean | Transaccion$compraArgs<ExtArgs>
    venta?: boolean | Transaccion$ventaArgs<ExtArgs>
    devolucion?: boolean | Transaccion$devolucionArgs<ExtArgs>
    _count?: boolean | TransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion"]>

  export type TransaccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    id_empleado?: boolean
    id_persona?: boolean
    id_obra?: boolean
    id_compra?: boolean
    id_venta?: boolean
    id_devolucion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Transaccion$obraArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion"]>

  export type TransaccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    id_empleado?: boolean
    id_persona?: boolean
    id_obra?: boolean
    id_compra?: boolean
    id_venta?: boolean
    id_devolucion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Transaccion$obraArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion"]>

  export type TransaccionSelectScalar = {
    id?: boolean
    fecha?: boolean
    id_empleado?: boolean
    id_persona?: boolean
    id_obra?: boolean
    id_compra?: boolean
    id_venta?: boolean
    id_devolucion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type TransaccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fecha" | "id_empleado" | "id_persona" | "id_obra" | "id_compra" | "id_venta" | "id_devolucion" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["transaccion"]>
  export type TransaccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Transaccion$obraArgs<ExtArgs>
    elementos?: boolean | Transaccion$elementosArgs<ExtArgs>
    pedido?: boolean | Transaccion$pedidoArgs<ExtArgs>
    compra?: boolean | Transaccion$compraArgs<ExtArgs>
    venta?: boolean | Transaccion$ventaArgs<ExtArgs>
    devolucion?: boolean | Transaccion$devolucionArgs<ExtArgs>
    _count?: boolean | TransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TransaccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Transaccion$obraArgs<ExtArgs>
  }
  export type TransaccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    obra?: boolean | Transaccion$obraArgs<ExtArgs>
  }

  export type $TransaccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaccion"
    objects: {
      empleado: Prisma.$EmpleadoPayload<ExtArgs>
      persona: Prisma.$PersonaPayload<ExtArgs>
      obra: Prisma.$ObraPayload<ExtArgs> | null
      elementos: Prisma.$transaccion_elementosPayload<ExtArgs>[]
      pedido: Prisma.$PedidoPayload<ExtArgs>[]
      compra: Prisma.$CompraPayload<ExtArgs> | null
      venta: Prisma.$VentaPayload<ExtArgs> | null
      devolucion: Prisma.$DevolucionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fecha: Date
      id_empleado: number
      id_persona: number
      id_obra: number | null
      id_compra: number | null
      id_venta: number | null
      id_devolucion: number | null
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["transaccion"]>
    composites: {}
  }

  type TransaccionGetPayload<S extends boolean | null | undefined | TransaccionDefaultArgs> = $Result.GetResult<Prisma.$TransaccionPayload, S>

  type TransaccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransaccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransaccionCountAggregateInputType | true
    }

  export interface TransaccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaccion'], meta: { name: 'Transaccion' } }
    /**
     * Find zero or one Transaccion that matches the filter.
     * @param {TransaccionFindUniqueArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransaccionFindUniqueArgs>(args: SelectSubset<T, TransaccionFindUniqueArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransaccionFindUniqueOrThrowArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransaccionFindUniqueOrThrowArgs>(args: SelectSubset<T, TransaccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionFindFirstArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransaccionFindFirstArgs>(args?: SelectSubset<T, TransaccionFindFirstArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionFindFirstOrThrowArgs} args - Arguments to find a Transaccion
     * @example
     * // Get one Transaccion
     * const transaccion = await prisma.transaccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransaccionFindFirstOrThrowArgs>(args?: SelectSubset<T, TransaccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaccions
     * const transaccions = await prisma.transaccion.findMany()
     * 
     * // Get first 10 Transaccions
     * const transaccions = await prisma.transaccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaccionWithIdOnly = await prisma.transaccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransaccionFindManyArgs>(args?: SelectSubset<T, TransaccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaccion.
     * @param {TransaccionCreateArgs} args - Arguments to create a Transaccion.
     * @example
     * // Create one Transaccion
     * const Transaccion = await prisma.transaccion.create({
     *   data: {
     *     // ... data to create a Transaccion
     *   }
     * })
     * 
     */
    create<T extends TransaccionCreateArgs>(args: SelectSubset<T, TransaccionCreateArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaccions.
     * @param {TransaccionCreateManyArgs} args - Arguments to create many Transaccions.
     * @example
     * // Create many Transaccions
     * const transaccion = await prisma.transaccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransaccionCreateManyArgs>(args?: SelectSubset<T, TransaccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transaccions and returns the data saved in the database.
     * @param {TransaccionCreateManyAndReturnArgs} args - Arguments to create many Transaccions.
     * @example
     * // Create many Transaccions
     * const transaccion = await prisma.transaccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transaccions and only return the `id`
     * const transaccionWithIdOnly = await prisma.transaccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransaccionCreateManyAndReturnArgs>(args?: SelectSubset<T, TransaccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaccion.
     * @param {TransaccionDeleteArgs} args - Arguments to delete one Transaccion.
     * @example
     * // Delete one Transaccion
     * const Transaccion = await prisma.transaccion.delete({
     *   where: {
     *     // ... filter to delete one Transaccion
     *   }
     * })
     * 
     */
    delete<T extends TransaccionDeleteArgs>(args: SelectSubset<T, TransaccionDeleteArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaccion.
     * @param {TransaccionUpdateArgs} args - Arguments to update one Transaccion.
     * @example
     * // Update one Transaccion
     * const transaccion = await prisma.transaccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransaccionUpdateArgs>(args: SelectSubset<T, TransaccionUpdateArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaccions.
     * @param {TransaccionDeleteManyArgs} args - Arguments to filter Transaccions to delete.
     * @example
     * // Delete a few Transaccions
     * const { count } = await prisma.transaccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransaccionDeleteManyArgs>(args?: SelectSubset<T, TransaccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaccions
     * const transaccion = await prisma.transaccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransaccionUpdateManyArgs>(args: SelectSubset<T, TransaccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccions and returns the data updated in the database.
     * @param {TransaccionUpdateManyAndReturnArgs} args - Arguments to update many Transaccions.
     * @example
     * // Update many Transaccions
     * const transaccion = await prisma.transaccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transaccions and only return the `id`
     * const transaccionWithIdOnly = await prisma.transaccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransaccionUpdateManyAndReturnArgs>(args: SelectSubset<T, TransaccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaccion.
     * @param {TransaccionUpsertArgs} args - Arguments to update or create a Transaccion.
     * @example
     * // Update or create a Transaccion
     * const transaccion = await prisma.transaccion.upsert({
     *   create: {
     *     // ... data to create a Transaccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaccion we want to update
     *   }
     * })
     */
    upsert<T extends TransaccionUpsertArgs>(args: SelectSubset<T, TransaccionUpsertArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionCountArgs} args - Arguments to filter Transaccions to count.
     * @example
     * // Count the number of Transaccions
     * const count = await prisma.transaccion.count({
     *   where: {
     *     // ... the filter for the Transaccions we want to count
     *   }
     * })
    **/
    count<T extends TransaccionCountArgs>(
      args?: Subset<T, TransaccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaccionAggregateArgs>(args: Subset<T, TransaccionAggregateArgs>): Prisma.PrismaPromise<GetTransaccionAggregateType<T>>

    /**
     * Group by Transaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransaccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransaccionGroupByArgs['orderBy'] }
        : { orderBy?: TransaccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransaccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaccion model
   */
  readonly fields: TransaccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransaccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empleado<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    persona<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    obra<T extends Transaccion$obraArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$obraArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    elementos<T extends Transaccion$elementosArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$elementosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedido<T extends Transaccion$pedidoArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$pedidoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    compra<T extends Transaccion$compraArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$compraArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    venta<T extends Transaccion$ventaArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$ventaArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    devolucion<T extends Transaccion$devolucionArgs<ExtArgs> = {}>(args?: Subset<T, Transaccion$devolucionArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaccion model
   */
  interface TransaccionFieldRefs {
    readonly id: FieldRef<"Transaccion", 'Int'>
    readonly fecha: FieldRef<"Transaccion", 'DateTime'>
    readonly id_empleado: FieldRef<"Transaccion", 'Int'>
    readonly id_persona: FieldRef<"Transaccion", 'Int'>
    readonly id_obra: FieldRef<"Transaccion", 'Int'>
    readonly id_compra: FieldRef<"Transaccion", 'Int'>
    readonly id_venta: FieldRef<"Transaccion", 'Int'>
    readonly id_devolucion: FieldRef<"Transaccion", 'Int'>
    readonly estadoEliminado: FieldRef<"Transaccion", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Transaccion", 'Int'>
    readonly updatedBy: FieldRef<"Transaccion", 'Int'>
    readonly deletedBy: FieldRef<"Transaccion", 'Int'>
    readonly createdDate: FieldRef<"Transaccion", 'DateTime'>
    readonly updatedDate: FieldRef<"Transaccion", 'DateTime'>
    readonly deletedDate: FieldRef<"Transaccion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Transaccion findUnique
   */
  export type TransaccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion findUniqueOrThrow
   */
  export type TransaccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion findFirst
   */
  export type TransaccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaccions.
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaccions.
     */
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Transaccion findFirstOrThrow
   */
  export type TransaccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccion to fetch.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transaccions.
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transaccions.
     */
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Transaccion findMany
   */
  export type TransaccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter, which Transaccions to fetch.
     */
    where?: TransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transaccions to fetch.
     */
    orderBy?: TransaccionOrderByWithRelationInput | TransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transaccions.
     */
    cursor?: TransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transaccions.
     */
    skip?: number
    distinct?: TransaccionScalarFieldEnum | TransaccionScalarFieldEnum[]
  }

  /**
   * Transaccion create
   */
  export type TransaccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaccion.
     */
    data: XOR<TransaccionCreateInput, TransaccionUncheckedCreateInput>
  }

  /**
   * Transaccion createMany
   */
  export type TransaccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transaccions.
     */
    data: TransaccionCreateManyInput | TransaccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaccion createManyAndReturn
   */
  export type TransaccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * The data used to create many Transaccions.
     */
    data: TransaccionCreateManyInput | TransaccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaccion update
   */
  export type TransaccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaccion.
     */
    data: XOR<TransaccionUpdateInput, TransaccionUncheckedUpdateInput>
    /**
     * Choose, which Transaccion to update.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion updateMany
   */
  export type TransaccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transaccions.
     */
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyInput>
    /**
     * Filter which Transaccions to update
     */
    where?: TransaccionWhereInput
    /**
     * Limit how many Transaccions to update.
     */
    limit?: number
  }

  /**
   * Transaccion updateManyAndReturn
   */
  export type TransaccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * The data used to update Transaccions.
     */
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyInput>
    /**
     * Filter which Transaccions to update
     */
    where?: TransaccionWhereInput
    /**
     * Limit how many Transaccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaccion upsert
   */
  export type TransaccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaccion to update in case it exists.
     */
    where: TransaccionWhereUniqueInput
    /**
     * In case the Transaccion found by the `where` argument doesn't exist, create a new Transaccion with this data.
     */
    create: XOR<TransaccionCreateInput, TransaccionUncheckedCreateInput>
    /**
     * In case the Transaccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransaccionUpdateInput, TransaccionUncheckedUpdateInput>
  }

  /**
   * Transaccion delete
   */
  export type TransaccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
    /**
     * Filter which Transaccion to delete.
     */
    where: TransaccionWhereUniqueInput
  }

  /**
   * Transaccion deleteMany
   */
  export type TransaccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaccions to delete
     */
    where?: TransaccionWhereInput
    /**
     * Limit how many Transaccions to delete.
     */
    limit?: number
  }

  /**
   * Transaccion.obra
   */
  export type Transaccion$obraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    where?: ObraWhereInput
  }

  /**
   * Transaccion.elementos
   */
  export type Transaccion$elementosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    where?: transaccion_elementosWhereInput
    orderBy?: transaccion_elementosOrderByWithRelationInput | transaccion_elementosOrderByWithRelationInput[]
    cursor?: transaccion_elementosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Transaccion_elementosScalarFieldEnum | Transaccion_elementosScalarFieldEnum[]
  }

  /**
   * Transaccion.pedido
   */
  export type Transaccion$pedidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Transaccion.compra
   */
  export type Transaccion$compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    where?: CompraWhereInput
  }

  /**
   * Transaccion.venta
   */
  export type Transaccion$ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
  }

  /**
   * Transaccion.devolucion
   */
  export type Transaccion$devolucionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    where?: DevolucionWhereInput
  }

  /**
   * Transaccion without action
   */
  export type TransaccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaccion
     */
    select?: TransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaccion
     */
    omit?: TransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionInclude<ExtArgs> | null
  }


  /**
   * Model transaccion_elementos
   */

  export type AggregateTransaccion_elementos = {
    _count: Transaccion_elementosCountAggregateOutputType | null
    _avg: Transaccion_elementosAvgAggregateOutputType | null
    _sum: Transaccion_elementosSumAggregateOutputType | null
    _min: Transaccion_elementosMinAggregateOutputType | null
    _max: Transaccion_elementosMaxAggregateOutputType | null
  }

  export type Transaccion_elementosAvgAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
    id_elementos: number | null
    cantidad: number | null
  }

  export type Transaccion_elementosSumAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
    id_elementos: number | null
    cantidad: number | null
  }

  export type Transaccion_elementosMinAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
    id_elementos: number | null
    cantidad: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Transaccion_elementosMaxAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
    id_elementos: number | null
    cantidad: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Transaccion_elementosCountAggregateOutputType = {
    id: number
    id_transaccion: number
    id_elementos: number
    cantidad: number
    estadoEliminado: number
    _all: number
  }


  export type Transaccion_elementosAvgAggregateInputType = {
    id?: true
    id_transaccion?: true
    id_elementos?: true
    cantidad?: true
  }

  export type Transaccion_elementosSumAggregateInputType = {
    id?: true
    id_transaccion?: true
    id_elementos?: true
    cantidad?: true
  }

  export type Transaccion_elementosMinAggregateInputType = {
    id?: true
    id_transaccion?: true
    id_elementos?: true
    cantidad?: true
    estadoEliminado?: true
  }

  export type Transaccion_elementosMaxAggregateInputType = {
    id?: true
    id_transaccion?: true
    id_elementos?: true
    cantidad?: true
    estadoEliminado?: true
  }

  export type Transaccion_elementosCountAggregateInputType = {
    id?: true
    id_transaccion?: true
    id_elementos?: true
    cantidad?: true
    estadoEliminado?: true
    _all?: true
  }

  export type Transaccion_elementosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaccion_elementos to aggregate.
     */
    where?: transaccion_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccion_elementos to fetch.
     */
    orderBy?: transaccion_elementosOrderByWithRelationInput | transaccion_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transaccion_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccion_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccion_elementos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transaccion_elementos
    **/
    _count?: true | Transaccion_elementosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Transaccion_elementosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Transaccion_elementosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Transaccion_elementosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Transaccion_elementosMaxAggregateInputType
  }

  export type GetTransaccion_elementosAggregateType<T extends Transaccion_elementosAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaccion_elementos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaccion_elementos[P]>
      : GetScalarType<T[P], AggregateTransaccion_elementos[P]>
  }




  export type transaccion_elementosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaccion_elementosWhereInput
    orderBy?: transaccion_elementosOrderByWithAggregationInput | transaccion_elementosOrderByWithAggregationInput[]
    by: Transaccion_elementosScalarFieldEnum[] | Transaccion_elementosScalarFieldEnum
    having?: transaccion_elementosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Transaccion_elementosCountAggregateInputType | true
    _avg?: Transaccion_elementosAvgAggregateInputType
    _sum?: Transaccion_elementosSumAggregateInputType
    _min?: Transaccion_elementosMinAggregateInputType
    _max?: Transaccion_elementosMaxAggregateInputType
  }

  export type Transaccion_elementosGroupByOutputType = {
    id: number
    id_transaccion: number
    id_elementos: number
    cantidad: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: Transaccion_elementosCountAggregateOutputType | null
    _avg: Transaccion_elementosAvgAggregateOutputType | null
    _sum: Transaccion_elementosSumAggregateOutputType | null
    _min: Transaccion_elementosMinAggregateOutputType | null
    _max: Transaccion_elementosMaxAggregateOutputType | null
  }

  type GetTransaccion_elementosGroupByPayload<T extends transaccion_elementosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Transaccion_elementosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Transaccion_elementosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Transaccion_elementosGroupByOutputType[P]>
            : GetScalarType<T[P], Transaccion_elementosGroupByOutputType[P]>
        }
      >
    >


  export type transaccion_elementosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_transaccion?: boolean
    id_elementos?: boolean
    cantidad?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion_elementos"]>

  export type transaccion_elementosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_transaccion?: boolean
    id_elementos?: boolean
    cantidad?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion_elementos"]>

  export type transaccion_elementosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_transaccion?: boolean
    id_elementos?: boolean
    cantidad?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaccion_elementos"]>

  export type transaccion_elementosSelectScalar = {
    id?: boolean
    id_transaccion?: boolean
    id_elementos?: boolean
    cantidad?: boolean
    estadoEliminado?: boolean
  }

  export type transaccion_elementosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_transaccion" | "id_elementos" | "cantidad" | "estadoEliminado", ExtArgs["result"]["transaccion_elementos"]>
  export type transaccion_elementosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type transaccion_elementosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }
  export type transaccion_elementosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
  }

  export type $transaccion_elementosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transaccion_elementos"
    objects: {
      transaccion: Prisma.$TransaccionPayload<ExtArgs>
      elemento: Prisma.$InventarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_transaccion: number
      id_elementos: number
      cantidad: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["transaccion_elementos"]>
    composites: {}
  }

  type transaccion_elementosGetPayload<S extends boolean | null | undefined | transaccion_elementosDefaultArgs> = $Result.GetResult<Prisma.$transaccion_elementosPayload, S>

  type transaccion_elementosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transaccion_elementosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Transaccion_elementosCountAggregateInputType | true
    }

  export interface transaccion_elementosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transaccion_elementos'], meta: { name: 'transaccion_elementos' } }
    /**
     * Find zero or one Transaccion_elementos that matches the filter.
     * @param {transaccion_elementosFindUniqueArgs} args - Arguments to find a Transaccion_elementos
     * @example
     * // Get one Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transaccion_elementosFindUniqueArgs>(args: SelectSubset<T, transaccion_elementosFindUniqueArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaccion_elementos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transaccion_elementosFindUniqueOrThrowArgs} args - Arguments to find a Transaccion_elementos
     * @example
     * // Get one Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transaccion_elementosFindUniqueOrThrowArgs>(args: SelectSubset<T, transaccion_elementosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccion_elementos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccion_elementosFindFirstArgs} args - Arguments to find a Transaccion_elementos
     * @example
     * // Get one Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transaccion_elementosFindFirstArgs>(args?: SelectSubset<T, transaccion_elementosFindFirstArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccion_elementos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccion_elementosFindFirstOrThrowArgs} args - Arguments to find a Transaccion_elementos
     * @example
     * // Get one Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transaccion_elementosFindFirstOrThrowArgs>(args?: SelectSubset<T, transaccion_elementosFindFirstOrThrowArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaccion_elementos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccion_elementosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.findMany()
     * 
     * // Get first 10 Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaccion_elementosWithIdOnly = await prisma.transaccion_elementos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transaccion_elementosFindManyArgs>(args?: SelectSubset<T, transaccion_elementosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaccion_elementos.
     * @param {transaccion_elementosCreateArgs} args - Arguments to create a Transaccion_elementos.
     * @example
     * // Create one Transaccion_elementos
     * const Transaccion_elementos = await prisma.transaccion_elementos.create({
     *   data: {
     *     // ... data to create a Transaccion_elementos
     *   }
     * })
     * 
     */
    create<T extends transaccion_elementosCreateArgs>(args: SelectSubset<T, transaccion_elementosCreateArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaccion_elementos.
     * @param {transaccion_elementosCreateManyArgs} args - Arguments to create many Transaccion_elementos.
     * @example
     * // Create many Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transaccion_elementosCreateManyArgs>(args?: SelectSubset<T, transaccion_elementosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transaccion_elementos and returns the data saved in the database.
     * @param {transaccion_elementosCreateManyAndReturnArgs} args - Arguments to create many Transaccion_elementos.
     * @example
     * // Create many Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transaccion_elementos and only return the `id`
     * const transaccion_elementosWithIdOnly = await prisma.transaccion_elementos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends transaccion_elementosCreateManyAndReturnArgs>(args?: SelectSubset<T, transaccion_elementosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaccion_elementos.
     * @param {transaccion_elementosDeleteArgs} args - Arguments to delete one Transaccion_elementos.
     * @example
     * // Delete one Transaccion_elementos
     * const Transaccion_elementos = await prisma.transaccion_elementos.delete({
     *   where: {
     *     // ... filter to delete one Transaccion_elementos
     *   }
     * })
     * 
     */
    delete<T extends transaccion_elementosDeleteArgs>(args: SelectSubset<T, transaccion_elementosDeleteArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaccion_elementos.
     * @param {transaccion_elementosUpdateArgs} args - Arguments to update one Transaccion_elementos.
     * @example
     * // Update one Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transaccion_elementosUpdateArgs>(args: SelectSubset<T, transaccion_elementosUpdateArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaccion_elementos.
     * @param {transaccion_elementosDeleteManyArgs} args - Arguments to filter Transaccion_elementos to delete.
     * @example
     * // Delete a few Transaccion_elementos
     * const { count } = await prisma.transaccion_elementos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transaccion_elementosDeleteManyArgs>(args?: SelectSubset<T, transaccion_elementosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccion_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccion_elementosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transaccion_elementosUpdateManyArgs>(args: SelectSubset<T, transaccion_elementosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccion_elementos and returns the data updated in the database.
     * @param {transaccion_elementosUpdateManyAndReturnArgs} args - Arguments to update many Transaccion_elementos.
     * @example
     * // Update many Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transaccion_elementos and only return the `id`
     * const transaccion_elementosWithIdOnly = await prisma.transaccion_elementos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends transaccion_elementosUpdateManyAndReturnArgs>(args: SelectSubset<T, transaccion_elementosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaccion_elementos.
     * @param {transaccion_elementosUpsertArgs} args - Arguments to update or create a Transaccion_elementos.
     * @example
     * // Update or create a Transaccion_elementos
     * const transaccion_elementos = await prisma.transaccion_elementos.upsert({
     *   create: {
     *     // ... data to create a Transaccion_elementos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaccion_elementos we want to update
     *   }
     * })
     */
    upsert<T extends transaccion_elementosUpsertArgs>(args: SelectSubset<T, transaccion_elementosUpsertArgs<ExtArgs>>): Prisma__transaccion_elementosClient<$Result.GetResult<Prisma.$transaccion_elementosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaccion_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccion_elementosCountArgs} args - Arguments to filter Transaccion_elementos to count.
     * @example
     * // Count the number of Transaccion_elementos
     * const count = await prisma.transaccion_elementos.count({
     *   where: {
     *     // ... the filter for the Transaccion_elementos we want to count
     *   }
     * })
    **/
    count<T extends transaccion_elementosCountArgs>(
      args?: Subset<T, transaccion_elementosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Transaccion_elementosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaccion_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Transaccion_elementosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Transaccion_elementosAggregateArgs>(args: Subset<T, Transaccion_elementosAggregateArgs>): Prisma.PrismaPromise<GetTransaccion_elementosAggregateType<T>>

    /**
     * Group by Transaccion_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccion_elementosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transaccion_elementosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transaccion_elementosGroupByArgs['orderBy'] }
        : { orderBy?: transaccion_elementosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transaccion_elementosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaccion_elementosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transaccion_elementos model
   */
  readonly fields: transaccion_elementosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transaccion_elementos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transaccion_elementosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaccion<T extends TransaccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransaccionDefaultArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    elemento<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transaccion_elementos model
   */
  interface transaccion_elementosFieldRefs {
    readonly id: FieldRef<"transaccion_elementos", 'Int'>
    readonly id_transaccion: FieldRef<"transaccion_elementos", 'Int'>
    readonly id_elementos: FieldRef<"transaccion_elementos", 'Int'>
    readonly cantidad: FieldRef<"transaccion_elementos", 'Float'>
    readonly estadoEliminado: FieldRef<"transaccion_elementos", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * transaccion_elementos findUnique
   */
  export type transaccion_elementosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * Filter, which transaccion_elementos to fetch.
     */
    where: transaccion_elementosWhereUniqueInput
  }

  /**
   * transaccion_elementos findUniqueOrThrow
   */
  export type transaccion_elementosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * Filter, which transaccion_elementos to fetch.
     */
    where: transaccion_elementosWhereUniqueInput
  }

  /**
   * transaccion_elementos findFirst
   */
  export type transaccion_elementosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * Filter, which transaccion_elementos to fetch.
     */
    where?: transaccion_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccion_elementos to fetch.
     */
    orderBy?: transaccion_elementosOrderByWithRelationInput | transaccion_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaccion_elementos.
     */
    cursor?: transaccion_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccion_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccion_elementos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaccion_elementos.
     */
    distinct?: Transaccion_elementosScalarFieldEnum | Transaccion_elementosScalarFieldEnum[]
  }

  /**
   * transaccion_elementos findFirstOrThrow
   */
  export type transaccion_elementosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * Filter, which transaccion_elementos to fetch.
     */
    where?: transaccion_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccion_elementos to fetch.
     */
    orderBy?: transaccion_elementosOrderByWithRelationInput | transaccion_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaccion_elementos.
     */
    cursor?: transaccion_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccion_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccion_elementos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaccion_elementos.
     */
    distinct?: Transaccion_elementosScalarFieldEnum | Transaccion_elementosScalarFieldEnum[]
  }

  /**
   * transaccion_elementos findMany
   */
  export type transaccion_elementosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * Filter, which transaccion_elementos to fetch.
     */
    where?: transaccion_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccion_elementos to fetch.
     */
    orderBy?: transaccion_elementosOrderByWithRelationInput | transaccion_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transaccion_elementos.
     */
    cursor?: transaccion_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccion_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccion_elementos.
     */
    skip?: number
    distinct?: Transaccion_elementosScalarFieldEnum | Transaccion_elementosScalarFieldEnum[]
  }

  /**
   * transaccion_elementos create
   */
  export type transaccion_elementosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * The data needed to create a transaccion_elementos.
     */
    data: XOR<transaccion_elementosCreateInput, transaccion_elementosUncheckedCreateInput>
  }

  /**
   * transaccion_elementos createMany
   */
  export type transaccion_elementosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transaccion_elementos.
     */
    data: transaccion_elementosCreateManyInput | transaccion_elementosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaccion_elementos createManyAndReturn
   */
  export type transaccion_elementosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * The data used to create many transaccion_elementos.
     */
    data: transaccion_elementosCreateManyInput | transaccion_elementosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * transaccion_elementos update
   */
  export type transaccion_elementosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * The data needed to update a transaccion_elementos.
     */
    data: XOR<transaccion_elementosUpdateInput, transaccion_elementosUncheckedUpdateInput>
    /**
     * Choose, which transaccion_elementos to update.
     */
    where: transaccion_elementosWhereUniqueInput
  }

  /**
   * transaccion_elementos updateMany
   */
  export type transaccion_elementosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transaccion_elementos.
     */
    data: XOR<transaccion_elementosUpdateManyMutationInput, transaccion_elementosUncheckedUpdateManyInput>
    /**
     * Filter which transaccion_elementos to update
     */
    where?: transaccion_elementosWhereInput
    /**
     * Limit how many transaccion_elementos to update.
     */
    limit?: number
  }

  /**
   * transaccion_elementos updateManyAndReturn
   */
  export type transaccion_elementosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * The data used to update transaccion_elementos.
     */
    data: XOR<transaccion_elementosUpdateManyMutationInput, transaccion_elementosUncheckedUpdateManyInput>
    /**
     * Filter which transaccion_elementos to update
     */
    where?: transaccion_elementosWhereInput
    /**
     * Limit how many transaccion_elementos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * transaccion_elementos upsert
   */
  export type transaccion_elementosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * The filter to search for the transaccion_elementos to update in case it exists.
     */
    where: transaccion_elementosWhereUniqueInput
    /**
     * In case the transaccion_elementos found by the `where` argument doesn't exist, create a new transaccion_elementos with this data.
     */
    create: XOR<transaccion_elementosCreateInput, transaccion_elementosUncheckedCreateInput>
    /**
     * In case the transaccion_elementos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transaccion_elementosUpdateInput, transaccion_elementosUncheckedUpdateInput>
  }

  /**
   * transaccion_elementos delete
   */
  export type transaccion_elementosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
    /**
     * Filter which transaccion_elementos to delete.
     */
    where: transaccion_elementosWhereUniqueInput
  }

  /**
   * transaccion_elementos deleteMany
   */
  export type transaccion_elementosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaccion_elementos to delete
     */
    where?: transaccion_elementosWhereInput
    /**
     * Limit how many transaccion_elementos to delete.
     */
    limit?: number
  }

  /**
   * transaccion_elementos without action
   */
  export type transaccion_elementosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccion_elementos
     */
    select?: transaccion_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccion_elementos
     */
    omit?: transaccion_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccion_elementosInclude<ExtArgs> | null
  }


  /**
   * Model Compra
   */

  export type AggregateCompra = {
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  export type CompraAvgAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
  }

  export type CompraSumAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
  }

  export type CompraMinAggregateOutputType = {
    id: number | null
    fechaCredito: Date | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type CompraMaxAggregateOutputType = {
    id: number | null
    fechaCredito: Date | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type CompraCountAggregateOutputType = {
    id: number
    fechaCredito: number
    id_transaccion: number
    estadoEliminado: number
    _all: number
  }


  export type CompraAvgAggregateInputType = {
    id?: true
    id_transaccion?: true
  }

  export type CompraSumAggregateInputType = {
    id?: true
    id_transaccion?: true
  }

  export type CompraMinAggregateInputType = {
    id?: true
    fechaCredito?: true
    id_transaccion?: true
    estadoEliminado?: true
  }

  export type CompraMaxAggregateInputType = {
    id?: true
    fechaCredito?: true
    id_transaccion?: true
    estadoEliminado?: true
  }

  export type CompraCountAggregateInputType = {
    id?: true
    fechaCredito?: true
    id_transaccion?: true
    estadoEliminado?: true
    _all?: true
  }

  export type CompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Compra to aggregate.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Compras
    **/
    _count?: true | CompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompraMaxAggregateInputType
  }

  export type GetCompraAggregateType<T extends CompraAggregateArgs> = {
        [P in keyof T & keyof AggregateCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompra[P]>
      : GetScalarType<T[P], AggregateCompra[P]>
  }




  export type CompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompraWhereInput
    orderBy?: CompraOrderByWithAggregationInput | CompraOrderByWithAggregationInput[]
    by: CompraScalarFieldEnum[] | CompraScalarFieldEnum
    having?: CompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompraCountAggregateInputType | true
    _avg?: CompraAvgAggregateInputType
    _sum?: CompraSumAggregateInputType
    _min?: CompraMinAggregateInputType
    _max?: CompraMaxAggregateInputType
  }

  export type CompraGroupByOutputType = {
    id: number
    fechaCredito: Date | null
    id_transaccion: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  type GetCompraGroupByPayload<T extends CompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompraGroupByOutputType[P]>
            : GetScalarType<T[P], CompraGroupByOutputType[P]>
        }
      >
    >


  export type CompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaCredito?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type CompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaCredito?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type CompraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaCredito?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type CompraSelectScalar = {
    id?: boolean
    fechaCredito?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
  }

  export type CompraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fechaCredito" | "id_transaccion" | "estadoEliminado", ExtArgs["result"]["compra"]>
  export type CompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type CompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type CompraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }

  export type $CompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Compra"
    objects: {
      transaccion: Prisma.$TransaccionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fechaCredito: Date | null
      id_transaccion: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["compra"]>
    composites: {}
  }

  type CompraGetPayload<S extends boolean | null | undefined | CompraDefaultArgs> = $Result.GetResult<Prisma.$CompraPayload, S>

  type CompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompraCountAggregateInputType | true
    }

  export interface CompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Compra'], meta: { name: 'Compra' } }
    /**
     * Find zero or one Compra that matches the filter.
     * @param {CompraFindUniqueArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompraFindUniqueArgs>(args: SelectSubset<T, CompraFindUniqueArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Compra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompraFindUniqueOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompraFindUniqueOrThrowArgs>(args: SelectSubset<T, CompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraFindFirstArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompraFindFirstArgs>(args?: SelectSubset<T, CompraFindFirstArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraFindFirstOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompraFindFirstOrThrowArgs>(args?: SelectSubset<T, CompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compras
     * const compras = await prisma.compra.findMany()
     * 
     * // Get first 10 Compras
     * const compras = await prisma.compra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const compraWithIdOnly = await prisma.compra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompraFindManyArgs>(args?: SelectSubset<T, CompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Compra.
     * @param {CompraCreateArgs} args - Arguments to create a Compra.
     * @example
     * // Create one Compra
     * const Compra = await prisma.compra.create({
     *   data: {
     *     // ... data to create a Compra
     *   }
     * })
     * 
     */
    create<T extends CompraCreateArgs>(args: SelectSubset<T, CompraCreateArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Compras.
     * @param {CompraCreateManyArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompraCreateManyArgs>(args?: SelectSubset<T, CompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compras and returns the data saved in the database.
     * @param {CompraCreateManyAndReturnArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compras and only return the `id`
     * const compraWithIdOnly = await prisma.compra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompraCreateManyAndReturnArgs>(args?: SelectSubset<T, CompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Compra.
     * @param {CompraDeleteArgs} args - Arguments to delete one Compra.
     * @example
     * // Delete one Compra
     * const Compra = await prisma.compra.delete({
     *   where: {
     *     // ... filter to delete one Compra
     *   }
     * })
     * 
     */
    delete<T extends CompraDeleteArgs>(args: SelectSubset<T, CompraDeleteArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Compra.
     * @param {CompraUpdateArgs} args - Arguments to update one Compra.
     * @example
     * // Update one Compra
     * const compra = await prisma.compra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompraUpdateArgs>(args: SelectSubset<T, CompraUpdateArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Compras.
     * @param {CompraDeleteManyArgs} args - Arguments to filter Compras to delete.
     * @example
     * // Delete a few Compras
     * const { count } = await prisma.compra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompraDeleteManyArgs>(args?: SelectSubset<T, CompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompraUpdateManyArgs>(args: SelectSubset<T, CompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras and returns the data updated in the database.
     * @param {CompraUpdateManyAndReturnArgs} args - Arguments to update many Compras.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Compras and only return the `id`
     * const compraWithIdOnly = await prisma.compra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CompraUpdateManyAndReturnArgs>(args: SelectSubset<T, CompraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Compra.
     * @param {CompraUpsertArgs} args - Arguments to update or create a Compra.
     * @example
     * // Update or create a Compra
     * const compra = await prisma.compra.upsert({
     *   create: {
     *     // ... data to create a Compra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compra we want to update
     *   }
     * })
     */
    upsert<T extends CompraUpsertArgs>(args: SelectSubset<T, CompraUpsertArgs<ExtArgs>>): Prisma__CompraClient<$Result.GetResult<Prisma.$CompraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraCountArgs} args - Arguments to filter Compras to count.
     * @example
     * // Count the number of Compras
     * const count = await prisma.compra.count({
     *   where: {
     *     // ... the filter for the Compras we want to count
     *   }
     * })
    **/
    count<T extends CompraCountArgs>(
      args?: Subset<T, CompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompraAggregateArgs>(args: Subset<T, CompraAggregateArgs>): Prisma.PrismaPromise<GetCompraAggregateType<T>>

    /**
     * Group by Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompraGroupByArgs['orderBy'] }
        : { orderBy?: CompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Compra model
   */
  readonly fields: CompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Compra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaccion<T extends TransaccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransaccionDefaultArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Compra model
   */
  interface CompraFieldRefs {
    readonly id: FieldRef<"Compra", 'Int'>
    readonly fechaCredito: FieldRef<"Compra", 'DateTime'>
    readonly id_transaccion: FieldRef<"Compra", 'Int'>
    readonly estadoEliminado: FieldRef<"Compra", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * Compra findUnique
   */
  export type CompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra findUniqueOrThrow
   */
  export type CompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra findFirst
   */
  export type CompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Compras.
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * Compra findFirstOrThrow
   */
  export type CompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compra to fetch.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Compras.
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * Compra findMany
   */
  export type CompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter, which Compras to fetch.
     */
    where?: CompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Compras to fetch.
     */
    orderBy?: CompraOrderByWithRelationInput | CompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Compras.
     */
    cursor?: CompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Compras.
     */
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * Compra create
   */
  export type CompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * The data needed to create a Compra.
     */
    data: XOR<CompraCreateInput, CompraUncheckedCreateInput>
  }

  /**
   * Compra createMany
   */
  export type CompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Compras.
     */
    data: CompraCreateManyInput | CompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Compra createManyAndReturn
   */
  export type CompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * The data used to create many Compras.
     */
    data: CompraCreateManyInput | CompraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Compra update
   */
  export type CompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * The data needed to update a Compra.
     */
    data: XOR<CompraUpdateInput, CompraUncheckedUpdateInput>
    /**
     * Choose, which Compra to update.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra updateMany
   */
  export type CompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Compras.
     */
    data: XOR<CompraUpdateManyMutationInput, CompraUncheckedUpdateManyInput>
    /**
     * Filter which Compras to update
     */
    where?: CompraWhereInput
    /**
     * Limit how many Compras to update.
     */
    limit?: number
  }

  /**
   * Compra updateManyAndReturn
   */
  export type CompraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * The data used to update Compras.
     */
    data: XOR<CompraUpdateManyMutationInput, CompraUncheckedUpdateManyInput>
    /**
     * Filter which Compras to update
     */
    where?: CompraWhereInput
    /**
     * Limit how many Compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Compra upsert
   */
  export type CompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * The filter to search for the Compra to update in case it exists.
     */
    where: CompraWhereUniqueInput
    /**
     * In case the Compra found by the `where` argument doesn't exist, create a new Compra with this data.
     */
    create: XOR<CompraCreateInput, CompraUncheckedCreateInput>
    /**
     * In case the Compra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompraUpdateInput, CompraUncheckedUpdateInput>
  }

  /**
   * Compra delete
   */
  export type CompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
    /**
     * Filter which Compra to delete.
     */
    where: CompraWhereUniqueInput
  }

  /**
   * Compra deleteMany
   */
  export type CompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Compras to delete
     */
    where?: CompraWhereInput
    /**
     * Limit how many Compras to delete.
     */
    limit?: number
  }

  /**
   * Compra without action
   */
  export type CompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Compra
     */
    select?: CompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Compra
     */
    omit?: CompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompraInclude<ExtArgs> | null
  }


  /**
   * Model Venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id: number | null
    porcentaje: Decimal | null
    id_transaccion: number | null
  }

  export type VentaSumAggregateOutputType = {
    id: number | null
    porcentaje: Decimal | null
    id_transaccion: number | null
  }

  export type VentaMinAggregateOutputType = {
    id: number | null
    codigo: string | null
    porcentaje: Decimal | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type VentaMaxAggregateOutputType = {
    id: number | null
    codigo: string | null
    porcentaje: Decimal | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type VentaCountAggregateOutputType = {
    id: number
    codigo: number
    porcentaje: number
    id_transaccion: number
    estadoEliminado: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id?: true
    porcentaje?: true
    id_transaccion?: true
  }

  export type VentaSumAggregateInputType = {
    id?: true
    porcentaje?: true
    id_transaccion?: true
  }

  export type VentaMinAggregateInputType = {
    id?: true
    codigo?: true
    porcentaje?: true
    id_transaccion?: true
    estadoEliminado?: true
  }

  export type VentaMaxAggregateInputType = {
    id?: true
    codigo?: true
    porcentaje?: true
    id_transaccion?: true
    estadoEliminado?: true
  }

  export type VentaCountAggregateInputType = {
    id?: true
    codigo?: true
    porcentaje?: true
    id_transaccion?: true
    estadoEliminado?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta to aggregate.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type VentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithAggregationInput | VentaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: VentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id: number
    codigo: string
    porcentaje: Decimal
    id_transaccion: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends VentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type VentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    porcentaje?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    porcentaje?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    porcentaje?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectScalar = {
    id?: boolean
    codigo?: boolean
    porcentaje?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
  }

  export type VentaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo" | "porcentaje" | "id_transaccion" | "estadoEliminado", ExtArgs["result"]["venta"]>
  export type VentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type VentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type VentaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }

  export type $VentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta"
    objects: {
      transaccion: Prisma.$TransaccionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo: string
      porcentaje: Prisma.Decimal
      id_transaccion: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type VentaGetPayload<S extends boolean | null | undefined | VentaDefaultArgs> = $Result.GetResult<Prisma.$VentaPayload, S>

  type VentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VentaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface VentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta'], meta: { name: 'Venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {VentaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaFindUniqueArgs>(args: SelectSubset<T, VentaFindUniqueArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VentaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaFindFirstArgs>(args?: SelectSubset<T, VentaFindFirstArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaWithIdOnly = await prisma.venta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaFindManyArgs>(args?: SelectSubset<T, VentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Venta.
     * @param {VentaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends VentaCreateArgs>(args: SelectSubset<T, VentaCreateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ventas.
     * @param {VentaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCreateManyArgs>(args?: SelectSubset<T, VentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {VentaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Venta.
     * @param {VentaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends VentaDeleteArgs>(args: SelectSubset<T, VentaDeleteArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Venta.
     * @param {VentaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaUpdateArgs>(args: SelectSubset<T, VentaUpdateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ventas.
     * @param {VentaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaDeleteManyArgs>(args?: SelectSubset<T, VentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaUpdateManyArgs>(args: SelectSubset<T, VentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas and returns the data updated in the database.
     * @param {VentaUpdateManyAndReturnArgs} args - Arguments to update many Ventas.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VentaUpdateManyAndReturnArgs>(args: SelectSubset<T, VentaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Venta.
     * @param {VentaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends VentaUpsertArgs>(args: SelectSubset<T, VentaUpsertArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends VentaCountArgs>(
      args?: Subset<T, VentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaGroupByArgs['orderBy'] }
        : { orderBy?: VentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta model
   */
  readonly fields: VentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaccion<T extends TransaccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransaccionDefaultArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta model
   */
  interface VentaFieldRefs {
    readonly id: FieldRef<"Venta", 'Int'>
    readonly codigo: FieldRef<"Venta", 'String'>
    readonly porcentaje: FieldRef<"Venta", 'Decimal'>
    readonly id_transaccion: FieldRef<"Venta", 'Int'>
    readonly estadoEliminado: FieldRef<"Venta", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * Venta findUnique
   */
  export type VentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findUniqueOrThrow
   */
  export type VentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findFirst
   */
  export type VentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findFirstOrThrow
   */
  export type VentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findMany
   */
  export type VentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Ventas to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta create
   */
  export type VentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta.
     */
    data: XOR<VentaCreateInput, VentaUncheckedCreateInput>
  }

  /**
   * Venta createMany
   */
  export type VentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Venta createManyAndReturn
   */
  export type VentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta update
   */
  export type VentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta.
     */
    data: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
    /**
     * Choose, which Venta to update.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta updateMany
   */
  export type VentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
  }

  /**
   * Venta updateManyAndReturn
   */
  export type VentaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta upsert
   */
  export type VentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta to update in case it exists.
     */
    where: VentaWhereUniqueInput
    /**
     * In case the Venta found by the `where` argument doesn't exist, create a new Venta with this data.
     */
    create: XOR<VentaCreateInput, VentaUncheckedCreateInput>
    /**
     * In case the Venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
  }

  /**
   * Venta delete
   */
  export type VentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter which Venta to delete.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta deleteMany
   */
  export type VentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ventas to delete
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to delete.
     */
    limit?: number
  }

  /**
   * Venta without action
   */
  export type VentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
  }


  /**
   * Model Devolucion
   */

  export type AggregateDevolucion = {
    _count: DevolucionCountAggregateOutputType | null
    _avg: DevolucionAvgAggregateOutputType | null
    _sum: DevolucionSumAggregateOutputType | null
    _min: DevolucionMinAggregateOutputType | null
    _max: DevolucionMaxAggregateOutputType | null
  }

  export type DevolucionAvgAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
  }

  export type DevolucionSumAggregateOutputType = {
    id: number | null
    id_transaccion: number | null
  }

  export type DevolucionMinAggregateOutputType = {
    id: number | null
    codigo: string | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type DevolucionMaxAggregateOutputType = {
    id: number | null
    codigo: string | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type DevolucionCountAggregateOutputType = {
    id: number
    codigo: number
    id_transaccion: number
    estadoEliminado: number
    _all: number
  }


  export type DevolucionAvgAggregateInputType = {
    id?: true
    id_transaccion?: true
  }

  export type DevolucionSumAggregateInputType = {
    id?: true
    id_transaccion?: true
  }

  export type DevolucionMinAggregateInputType = {
    id?: true
    codigo?: true
    id_transaccion?: true
    estadoEliminado?: true
  }

  export type DevolucionMaxAggregateInputType = {
    id?: true
    codigo?: true
    id_transaccion?: true
    estadoEliminado?: true
  }

  export type DevolucionCountAggregateInputType = {
    id?: true
    codigo?: true
    id_transaccion?: true
    estadoEliminado?: true
    _all?: true
  }

  export type DevolucionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devolucion to aggregate.
     */
    where?: DevolucionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devolucions to fetch.
     */
    orderBy?: DevolucionOrderByWithRelationInput | DevolucionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DevolucionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devolucions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devolucions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Devolucions
    **/
    _count?: true | DevolucionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DevolucionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DevolucionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DevolucionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DevolucionMaxAggregateInputType
  }

  export type GetDevolucionAggregateType<T extends DevolucionAggregateArgs> = {
        [P in keyof T & keyof AggregateDevolucion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevolucion[P]>
      : GetScalarType<T[P], AggregateDevolucion[P]>
  }




  export type DevolucionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevolucionWhereInput
    orderBy?: DevolucionOrderByWithAggregationInput | DevolucionOrderByWithAggregationInput[]
    by: DevolucionScalarFieldEnum[] | DevolucionScalarFieldEnum
    having?: DevolucionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevolucionCountAggregateInputType | true
    _avg?: DevolucionAvgAggregateInputType
    _sum?: DevolucionSumAggregateInputType
    _min?: DevolucionMinAggregateInputType
    _max?: DevolucionMaxAggregateInputType
  }

  export type DevolucionGroupByOutputType = {
    id: number
    codigo: string
    id_transaccion: number
    estadoEliminado: $Enums.EstadoEliminado
    _count: DevolucionCountAggregateOutputType | null
    _avg: DevolucionAvgAggregateOutputType | null
    _sum: DevolucionSumAggregateOutputType | null
    _min: DevolucionMinAggregateOutputType | null
    _max: DevolucionMaxAggregateOutputType | null
  }

  type GetDevolucionGroupByPayload<T extends DevolucionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DevolucionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DevolucionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DevolucionGroupByOutputType[P]>
            : GetScalarType<T[P], DevolucionGroupByOutputType[P]>
        }
      >
    >


  export type DevolucionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucion"]>

  export type DevolucionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucion"]>

  export type DevolucionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devolucion"]>

  export type DevolucionSelectScalar = {
    id?: boolean
    codigo?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
  }

  export type DevolucionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo" | "id_transaccion" | "estadoEliminado", ExtArgs["result"]["devolucion"]>
  export type DevolucionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type DevolucionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type DevolucionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }

  export type $DevolucionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Devolucion"
    objects: {
      transaccion: Prisma.$TransaccionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo: string
      id_transaccion: number
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["devolucion"]>
    composites: {}
  }

  type DevolucionGetPayload<S extends boolean | null | undefined | DevolucionDefaultArgs> = $Result.GetResult<Prisma.$DevolucionPayload, S>

  type DevolucionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DevolucionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DevolucionCountAggregateInputType | true
    }

  export interface DevolucionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Devolucion'], meta: { name: 'Devolucion' } }
    /**
     * Find zero or one Devolucion that matches the filter.
     * @param {DevolucionFindUniqueArgs} args - Arguments to find a Devolucion
     * @example
     * // Get one Devolucion
     * const devolucion = await prisma.devolucion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DevolucionFindUniqueArgs>(args: SelectSubset<T, DevolucionFindUniqueArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Devolucion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DevolucionFindUniqueOrThrowArgs} args - Arguments to find a Devolucion
     * @example
     * // Get one Devolucion
     * const devolucion = await prisma.devolucion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DevolucionFindUniqueOrThrowArgs>(args: SelectSubset<T, DevolucionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Devolucion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionFindFirstArgs} args - Arguments to find a Devolucion
     * @example
     * // Get one Devolucion
     * const devolucion = await prisma.devolucion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DevolucionFindFirstArgs>(args?: SelectSubset<T, DevolucionFindFirstArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Devolucion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionFindFirstOrThrowArgs} args - Arguments to find a Devolucion
     * @example
     * // Get one Devolucion
     * const devolucion = await prisma.devolucion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DevolucionFindFirstOrThrowArgs>(args?: SelectSubset<T, DevolucionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Devolucions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Devolucions
     * const devolucions = await prisma.devolucion.findMany()
     * 
     * // Get first 10 Devolucions
     * const devolucions = await prisma.devolucion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const devolucionWithIdOnly = await prisma.devolucion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DevolucionFindManyArgs>(args?: SelectSubset<T, DevolucionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Devolucion.
     * @param {DevolucionCreateArgs} args - Arguments to create a Devolucion.
     * @example
     * // Create one Devolucion
     * const Devolucion = await prisma.devolucion.create({
     *   data: {
     *     // ... data to create a Devolucion
     *   }
     * })
     * 
     */
    create<T extends DevolucionCreateArgs>(args: SelectSubset<T, DevolucionCreateArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Devolucions.
     * @param {DevolucionCreateManyArgs} args - Arguments to create many Devolucions.
     * @example
     * // Create many Devolucions
     * const devolucion = await prisma.devolucion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DevolucionCreateManyArgs>(args?: SelectSubset<T, DevolucionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Devolucions and returns the data saved in the database.
     * @param {DevolucionCreateManyAndReturnArgs} args - Arguments to create many Devolucions.
     * @example
     * // Create many Devolucions
     * const devolucion = await prisma.devolucion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Devolucions and only return the `id`
     * const devolucionWithIdOnly = await prisma.devolucion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DevolucionCreateManyAndReturnArgs>(args?: SelectSubset<T, DevolucionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Devolucion.
     * @param {DevolucionDeleteArgs} args - Arguments to delete one Devolucion.
     * @example
     * // Delete one Devolucion
     * const Devolucion = await prisma.devolucion.delete({
     *   where: {
     *     // ... filter to delete one Devolucion
     *   }
     * })
     * 
     */
    delete<T extends DevolucionDeleteArgs>(args: SelectSubset<T, DevolucionDeleteArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Devolucion.
     * @param {DevolucionUpdateArgs} args - Arguments to update one Devolucion.
     * @example
     * // Update one Devolucion
     * const devolucion = await prisma.devolucion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DevolucionUpdateArgs>(args: SelectSubset<T, DevolucionUpdateArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Devolucions.
     * @param {DevolucionDeleteManyArgs} args - Arguments to filter Devolucions to delete.
     * @example
     * // Delete a few Devolucions
     * const { count } = await prisma.devolucion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DevolucionDeleteManyArgs>(args?: SelectSubset<T, DevolucionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devolucions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Devolucions
     * const devolucion = await prisma.devolucion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DevolucionUpdateManyArgs>(args: SelectSubset<T, DevolucionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devolucions and returns the data updated in the database.
     * @param {DevolucionUpdateManyAndReturnArgs} args - Arguments to update many Devolucions.
     * @example
     * // Update many Devolucions
     * const devolucion = await prisma.devolucion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Devolucions and only return the `id`
     * const devolucionWithIdOnly = await prisma.devolucion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DevolucionUpdateManyAndReturnArgs>(args: SelectSubset<T, DevolucionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Devolucion.
     * @param {DevolucionUpsertArgs} args - Arguments to update or create a Devolucion.
     * @example
     * // Update or create a Devolucion
     * const devolucion = await prisma.devolucion.upsert({
     *   create: {
     *     // ... data to create a Devolucion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Devolucion we want to update
     *   }
     * })
     */
    upsert<T extends DevolucionUpsertArgs>(args: SelectSubset<T, DevolucionUpsertArgs<ExtArgs>>): Prisma__DevolucionClient<$Result.GetResult<Prisma.$DevolucionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Devolucions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionCountArgs} args - Arguments to filter Devolucions to count.
     * @example
     * // Count the number of Devolucions
     * const count = await prisma.devolucion.count({
     *   where: {
     *     // ... the filter for the Devolucions we want to count
     *   }
     * })
    **/
    count<T extends DevolucionCountArgs>(
      args?: Subset<T, DevolucionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DevolucionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Devolucion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DevolucionAggregateArgs>(args: Subset<T, DevolucionAggregateArgs>): Prisma.PrismaPromise<GetDevolucionAggregateType<T>>

    /**
     * Group by Devolucion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevolucionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DevolucionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DevolucionGroupByArgs['orderBy'] }
        : { orderBy?: DevolucionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DevolucionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevolucionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Devolucion model
   */
  readonly fields: DevolucionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Devolucion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DevolucionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaccion<T extends TransaccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransaccionDefaultArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Devolucion model
   */
  interface DevolucionFieldRefs {
    readonly id: FieldRef<"Devolucion", 'Int'>
    readonly codigo: FieldRef<"Devolucion", 'String'>
    readonly id_transaccion: FieldRef<"Devolucion", 'Int'>
    readonly estadoEliminado: FieldRef<"Devolucion", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * Devolucion findUnique
   */
  export type DevolucionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * Filter, which Devolucion to fetch.
     */
    where: DevolucionWhereUniqueInput
  }

  /**
   * Devolucion findUniqueOrThrow
   */
  export type DevolucionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * Filter, which Devolucion to fetch.
     */
    where: DevolucionWhereUniqueInput
  }

  /**
   * Devolucion findFirst
   */
  export type DevolucionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * Filter, which Devolucion to fetch.
     */
    where?: DevolucionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devolucions to fetch.
     */
    orderBy?: DevolucionOrderByWithRelationInput | DevolucionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devolucions.
     */
    cursor?: DevolucionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devolucions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devolucions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devolucions.
     */
    distinct?: DevolucionScalarFieldEnum | DevolucionScalarFieldEnum[]
  }

  /**
   * Devolucion findFirstOrThrow
   */
  export type DevolucionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * Filter, which Devolucion to fetch.
     */
    where?: DevolucionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devolucions to fetch.
     */
    orderBy?: DevolucionOrderByWithRelationInput | DevolucionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devolucions.
     */
    cursor?: DevolucionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devolucions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devolucions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devolucions.
     */
    distinct?: DevolucionScalarFieldEnum | DevolucionScalarFieldEnum[]
  }

  /**
   * Devolucion findMany
   */
  export type DevolucionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * Filter, which Devolucions to fetch.
     */
    where?: DevolucionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devolucions to fetch.
     */
    orderBy?: DevolucionOrderByWithRelationInput | DevolucionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Devolucions.
     */
    cursor?: DevolucionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devolucions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devolucions.
     */
    skip?: number
    distinct?: DevolucionScalarFieldEnum | DevolucionScalarFieldEnum[]
  }

  /**
   * Devolucion create
   */
  export type DevolucionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * The data needed to create a Devolucion.
     */
    data: XOR<DevolucionCreateInput, DevolucionUncheckedCreateInput>
  }

  /**
   * Devolucion createMany
   */
  export type DevolucionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Devolucions.
     */
    data: DevolucionCreateManyInput | DevolucionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Devolucion createManyAndReturn
   */
  export type DevolucionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * The data used to create many Devolucions.
     */
    data: DevolucionCreateManyInput | DevolucionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Devolucion update
   */
  export type DevolucionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * The data needed to update a Devolucion.
     */
    data: XOR<DevolucionUpdateInput, DevolucionUncheckedUpdateInput>
    /**
     * Choose, which Devolucion to update.
     */
    where: DevolucionWhereUniqueInput
  }

  /**
   * Devolucion updateMany
   */
  export type DevolucionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Devolucions.
     */
    data: XOR<DevolucionUpdateManyMutationInput, DevolucionUncheckedUpdateManyInput>
    /**
     * Filter which Devolucions to update
     */
    where?: DevolucionWhereInput
    /**
     * Limit how many Devolucions to update.
     */
    limit?: number
  }

  /**
   * Devolucion updateManyAndReturn
   */
  export type DevolucionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * The data used to update Devolucions.
     */
    data: XOR<DevolucionUpdateManyMutationInput, DevolucionUncheckedUpdateManyInput>
    /**
     * Filter which Devolucions to update
     */
    where?: DevolucionWhereInput
    /**
     * Limit how many Devolucions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Devolucion upsert
   */
  export type DevolucionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * The filter to search for the Devolucion to update in case it exists.
     */
    where: DevolucionWhereUniqueInput
    /**
     * In case the Devolucion found by the `where` argument doesn't exist, create a new Devolucion with this data.
     */
    create: XOR<DevolucionCreateInput, DevolucionUncheckedCreateInput>
    /**
     * In case the Devolucion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DevolucionUpdateInput, DevolucionUncheckedUpdateInput>
  }

  /**
   * Devolucion delete
   */
  export type DevolucionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
    /**
     * Filter which Devolucion to delete.
     */
    where: DevolucionWhereUniqueInput
  }

  /**
   * Devolucion deleteMany
   */
  export type DevolucionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devolucions to delete
     */
    where?: DevolucionWhereInput
    /**
     * Limit how many Devolucions to delete.
     */
    limit?: number
  }

  /**
   * Devolucion without action
   */
  export type DevolucionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devolucion
     */
    select?: DevolucionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devolucion
     */
    omit?: DevolucionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevolucionInclude<ExtArgs> | null
  }


  /**
   * Model Horario
   */

  export type AggregateHorario = {
    _count: HorarioCountAggregateOutputType | null
    _avg: HorarioAvgAggregateOutputType | null
    _sum: HorarioSumAggregateOutputType | null
    _min: HorarioMinAggregateOutputType | null
    _max: HorarioMaxAggregateOutputType | null
  }

  export type HorarioAvgAggregateOutputType = {
    id: number | null
  }

  export type HorarioSumAggregateOutputType = {
    id: number | null
  }

  export type HorarioMinAggregateOutputType = {
    id: number | null
    hora_inicio: Date | null
    hora_final: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type HorarioMaxAggregateOutputType = {
    id: number | null
    hora_inicio: Date | null
    hora_final: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type HorarioCountAggregateOutputType = {
    id: number
    hora_inicio: number
    hora_final: number
    estadoEliminado: number
    _all: number
  }


  export type HorarioAvgAggregateInputType = {
    id?: true
  }

  export type HorarioSumAggregateInputType = {
    id?: true
  }

  export type HorarioMinAggregateInputType = {
    id?: true
    hora_inicio?: true
    hora_final?: true
    estadoEliminado?: true
  }

  export type HorarioMaxAggregateInputType = {
    id?: true
    hora_inicio?: true
    hora_final?: true
    estadoEliminado?: true
  }

  export type HorarioCountAggregateInputType = {
    id?: true
    hora_inicio?: true
    hora_final?: true
    estadoEliminado?: true
    _all?: true
  }

  export type HorarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Horario to aggregate.
     */
    where?: HorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horarios to fetch.
     */
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Horarios
    **/
    _count?: true | HorarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HorarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HorarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HorarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HorarioMaxAggregateInputType
  }

  export type GetHorarioAggregateType<T extends HorarioAggregateArgs> = {
        [P in keyof T & keyof AggregateHorario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHorario[P]>
      : GetScalarType<T[P], AggregateHorario[P]>
  }




  export type HorarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HorarioWhereInput
    orderBy?: HorarioOrderByWithAggregationInput | HorarioOrderByWithAggregationInput[]
    by: HorarioScalarFieldEnum[] | HorarioScalarFieldEnum
    having?: HorarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HorarioCountAggregateInputType | true
    _avg?: HorarioAvgAggregateInputType
    _sum?: HorarioSumAggregateInputType
    _min?: HorarioMinAggregateInputType
    _max?: HorarioMaxAggregateInputType
  }

  export type HorarioGroupByOutputType = {
    id: number
    hora_inicio: Date
    hora_final: Date
    estadoEliminado: $Enums.EstadoEliminado
    _count: HorarioCountAggregateOutputType | null
    _avg: HorarioAvgAggregateOutputType | null
    _sum: HorarioSumAggregateOutputType | null
    _min: HorarioMinAggregateOutputType | null
    _max: HorarioMaxAggregateOutputType | null
  }

  type GetHorarioGroupByPayload<T extends HorarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HorarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HorarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HorarioGroupByOutputType[P]>
            : GetScalarType<T[P], HorarioGroupByOutputType[P]>
        }
      >
    >


  export type HorarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hora_inicio?: boolean
    hora_final?: boolean
    estadoEliminado?: boolean
    dias?: boolean | Horario$diasArgs<ExtArgs>
    proceso_empleados?: boolean | Horario$proceso_empleadosArgs<ExtArgs>
    proceso_herramientas?: boolean | Horario$proceso_herramientasArgs<ExtArgs>
    _count?: boolean | HorarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horario"]>

  export type HorarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hora_inicio?: boolean
    hora_final?: boolean
    estadoEliminado?: boolean
  }, ExtArgs["result"]["horario"]>

  export type HorarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hora_inicio?: boolean
    hora_final?: boolean
    estadoEliminado?: boolean
  }, ExtArgs["result"]["horario"]>

  export type HorarioSelectScalar = {
    id?: boolean
    hora_inicio?: boolean
    hora_final?: boolean
    estadoEliminado?: boolean
  }

  export type HorarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "hora_inicio" | "hora_final" | "estadoEliminado", ExtArgs["result"]["horario"]>
  export type HorarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dias?: boolean | Horario$diasArgs<ExtArgs>
    proceso_empleados?: boolean | Horario$proceso_empleadosArgs<ExtArgs>
    proceso_herramientas?: boolean | Horario$proceso_herramientasArgs<ExtArgs>
    _count?: boolean | HorarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HorarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type HorarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $HorarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Horario"
    objects: {
      dias: Prisma.$DiaPayload<ExtArgs>[]
      proceso_empleados: Prisma.$proceso_empleadosPayload<ExtArgs>[]
      proceso_herramientas: Prisma.$proceso_herramientasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      hora_inicio: Date
      hora_final: Date
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["horario"]>
    composites: {}
  }

  type HorarioGetPayload<S extends boolean | null | undefined | HorarioDefaultArgs> = $Result.GetResult<Prisma.$HorarioPayload, S>

  type HorarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HorarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HorarioCountAggregateInputType | true
    }

  export interface HorarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Horario'], meta: { name: 'Horario' } }
    /**
     * Find zero or one Horario that matches the filter.
     * @param {HorarioFindUniqueArgs} args - Arguments to find a Horario
     * @example
     * // Get one Horario
     * const horario = await prisma.horario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HorarioFindUniqueArgs>(args: SelectSubset<T, HorarioFindUniqueArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Horario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HorarioFindUniqueOrThrowArgs} args - Arguments to find a Horario
     * @example
     * // Get one Horario
     * const horario = await prisma.horario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HorarioFindUniqueOrThrowArgs>(args: SelectSubset<T, HorarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Horario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioFindFirstArgs} args - Arguments to find a Horario
     * @example
     * // Get one Horario
     * const horario = await prisma.horario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HorarioFindFirstArgs>(args?: SelectSubset<T, HorarioFindFirstArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Horario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioFindFirstOrThrowArgs} args - Arguments to find a Horario
     * @example
     * // Get one Horario
     * const horario = await prisma.horario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HorarioFindFirstOrThrowArgs>(args?: SelectSubset<T, HorarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Horarios
     * const horarios = await prisma.horario.findMany()
     * 
     * // Get first 10 Horarios
     * const horarios = await prisma.horario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const horarioWithIdOnly = await prisma.horario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HorarioFindManyArgs>(args?: SelectSubset<T, HorarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Horario.
     * @param {HorarioCreateArgs} args - Arguments to create a Horario.
     * @example
     * // Create one Horario
     * const Horario = await prisma.horario.create({
     *   data: {
     *     // ... data to create a Horario
     *   }
     * })
     * 
     */
    create<T extends HorarioCreateArgs>(args: SelectSubset<T, HorarioCreateArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Horarios.
     * @param {HorarioCreateManyArgs} args - Arguments to create many Horarios.
     * @example
     * // Create many Horarios
     * const horario = await prisma.horario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HorarioCreateManyArgs>(args?: SelectSubset<T, HorarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Horarios and returns the data saved in the database.
     * @param {HorarioCreateManyAndReturnArgs} args - Arguments to create many Horarios.
     * @example
     * // Create many Horarios
     * const horario = await prisma.horario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Horarios and only return the `id`
     * const horarioWithIdOnly = await prisma.horario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HorarioCreateManyAndReturnArgs>(args?: SelectSubset<T, HorarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Horario.
     * @param {HorarioDeleteArgs} args - Arguments to delete one Horario.
     * @example
     * // Delete one Horario
     * const Horario = await prisma.horario.delete({
     *   where: {
     *     // ... filter to delete one Horario
     *   }
     * })
     * 
     */
    delete<T extends HorarioDeleteArgs>(args: SelectSubset<T, HorarioDeleteArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Horario.
     * @param {HorarioUpdateArgs} args - Arguments to update one Horario.
     * @example
     * // Update one Horario
     * const horario = await prisma.horario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HorarioUpdateArgs>(args: SelectSubset<T, HorarioUpdateArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Horarios.
     * @param {HorarioDeleteManyArgs} args - Arguments to filter Horarios to delete.
     * @example
     * // Delete a few Horarios
     * const { count } = await prisma.horario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HorarioDeleteManyArgs>(args?: SelectSubset<T, HorarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Horarios
     * const horario = await prisma.horario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HorarioUpdateManyArgs>(args: SelectSubset<T, HorarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Horarios and returns the data updated in the database.
     * @param {HorarioUpdateManyAndReturnArgs} args - Arguments to update many Horarios.
     * @example
     * // Update many Horarios
     * const horario = await prisma.horario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Horarios and only return the `id`
     * const horarioWithIdOnly = await prisma.horario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HorarioUpdateManyAndReturnArgs>(args: SelectSubset<T, HorarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Horario.
     * @param {HorarioUpsertArgs} args - Arguments to update or create a Horario.
     * @example
     * // Update or create a Horario
     * const horario = await prisma.horario.upsert({
     *   create: {
     *     // ... data to create a Horario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Horario we want to update
     *   }
     * })
     */
    upsert<T extends HorarioUpsertArgs>(args: SelectSubset<T, HorarioUpsertArgs<ExtArgs>>): Prisma__HorarioClient<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioCountArgs} args - Arguments to filter Horarios to count.
     * @example
     * // Count the number of Horarios
     * const count = await prisma.horario.count({
     *   where: {
     *     // ... the filter for the Horarios we want to count
     *   }
     * })
    **/
    count<T extends HorarioCountArgs>(
      args?: Subset<T, HorarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HorarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Horario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HorarioAggregateArgs>(args: Subset<T, HorarioAggregateArgs>): Prisma.PrismaPromise<GetHorarioAggregateType<T>>

    /**
     * Group by Horario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HorarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HorarioGroupByArgs['orderBy'] }
        : { orderBy?: HorarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HorarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHorarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Horario model
   */
  readonly fields: HorarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Horario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HorarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dias<T extends Horario$diasArgs<ExtArgs> = {}>(args?: Subset<T, Horario$diasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proceso_empleados<T extends Horario$proceso_empleadosArgs<ExtArgs> = {}>(args?: Subset<T, Horario$proceso_empleadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_empleadosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    proceso_herramientas<T extends Horario$proceso_herramientasArgs<ExtArgs> = {}>(args?: Subset<T, Horario$proceso_herramientasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proceso_herramientasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Horario model
   */
  interface HorarioFieldRefs {
    readonly id: FieldRef<"Horario", 'Int'>
    readonly hora_inicio: FieldRef<"Horario", 'DateTime'>
    readonly hora_final: FieldRef<"Horario", 'DateTime'>
    readonly estadoEliminado: FieldRef<"Horario", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * Horario findUnique
   */
  export type HorarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * Filter, which Horario to fetch.
     */
    where: HorarioWhereUniqueInput
  }

  /**
   * Horario findUniqueOrThrow
   */
  export type HorarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * Filter, which Horario to fetch.
     */
    where: HorarioWhereUniqueInput
  }

  /**
   * Horario findFirst
   */
  export type HorarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * Filter, which Horario to fetch.
     */
    where?: HorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horarios to fetch.
     */
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Horarios.
     */
    cursor?: HorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Horarios.
     */
    distinct?: HorarioScalarFieldEnum | HorarioScalarFieldEnum[]
  }

  /**
   * Horario findFirstOrThrow
   */
  export type HorarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * Filter, which Horario to fetch.
     */
    where?: HorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horarios to fetch.
     */
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Horarios.
     */
    cursor?: HorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Horarios.
     */
    distinct?: HorarioScalarFieldEnum | HorarioScalarFieldEnum[]
  }

  /**
   * Horario findMany
   */
  export type HorarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * Filter, which Horarios to fetch.
     */
    where?: HorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Horarios to fetch.
     */
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Horarios.
     */
    cursor?: HorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Horarios.
     */
    skip?: number
    distinct?: HorarioScalarFieldEnum | HorarioScalarFieldEnum[]
  }

  /**
   * Horario create
   */
  export type HorarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Horario.
     */
    data: XOR<HorarioCreateInput, HorarioUncheckedCreateInput>
  }

  /**
   * Horario createMany
   */
  export type HorarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Horarios.
     */
    data: HorarioCreateManyInput | HorarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Horario createManyAndReturn
   */
  export type HorarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * The data used to create many Horarios.
     */
    data: HorarioCreateManyInput | HorarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Horario update
   */
  export type HorarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Horario.
     */
    data: XOR<HorarioUpdateInput, HorarioUncheckedUpdateInput>
    /**
     * Choose, which Horario to update.
     */
    where: HorarioWhereUniqueInput
  }

  /**
   * Horario updateMany
   */
  export type HorarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Horarios.
     */
    data: XOR<HorarioUpdateManyMutationInput, HorarioUncheckedUpdateManyInput>
    /**
     * Filter which Horarios to update
     */
    where?: HorarioWhereInput
    /**
     * Limit how many Horarios to update.
     */
    limit?: number
  }

  /**
   * Horario updateManyAndReturn
   */
  export type HorarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * The data used to update Horarios.
     */
    data: XOR<HorarioUpdateManyMutationInput, HorarioUncheckedUpdateManyInput>
    /**
     * Filter which Horarios to update
     */
    where?: HorarioWhereInput
    /**
     * Limit how many Horarios to update.
     */
    limit?: number
  }

  /**
   * Horario upsert
   */
  export type HorarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Horario to update in case it exists.
     */
    where: HorarioWhereUniqueInput
    /**
     * In case the Horario found by the `where` argument doesn't exist, create a new Horario with this data.
     */
    create: XOR<HorarioCreateInput, HorarioUncheckedCreateInput>
    /**
     * In case the Horario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HorarioUpdateInput, HorarioUncheckedUpdateInput>
  }

  /**
   * Horario delete
   */
  export type HorarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    /**
     * Filter which Horario to delete.
     */
    where: HorarioWhereUniqueInput
  }

  /**
   * Horario deleteMany
   */
  export type HorarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Horarios to delete
     */
    where?: HorarioWhereInput
    /**
     * Limit how many Horarios to delete.
     */
    limit?: number
  }

  /**
   * Horario.dias
   */
  export type Horario$diasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    where?: DiaWhereInput
    orderBy?: DiaOrderByWithRelationInput | DiaOrderByWithRelationInput[]
    cursor?: DiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiaScalarFieldEnum | DiaScalarFieldEnum[]
  }

  /**
   * Horario.proceso_empleados
   */
  export type Horario$proceso_empleadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_empleados
     */
    select?: proceso_empleadosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_empleados
     */
    omit?: proceso_empleadosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_empleadosInclude<ExtArgs> | null
    where?: proceso_empleadosWhereInput
    orderBy?: proceso_empleadosOrderByWithRelationInput | proceso_empleadosOrderByWithRelationInput[]
    cursor?: proceso_empleadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_empleadosScalarFieldEnum | Proceso_empleadosScalarFieldEnum[]
  }

  /**
   * Horario.proceso_herramientas
   */
  export type Horario$proceso_herramientasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proceso_herramientas
     */
    select?: proceso_herramientasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proceso_herramientas
     */
    omit?: proceso_herramientasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proceso_herramientasInclude<ExtArgs> | null
    where?: proceso_herramientasWhereInput
    orderBy?: proceso_herramientasOrderByWithRelationInput | proceso_herramientasOrderByWithRelationInput[]
    cursor?: proceso_herramientasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Proceso_herramientasScalarFieldEnum | Proceso_herramientasScalarFieldEnum[]
  }

  /**
   * Horario without action
   */
  export type HorarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
  }


  /**
   * Model Dia
   */

  export type AggregateDia = {
    _count: DiaCountAggregateOutputType | null
    _avg: DiaAvgAggregateOutputType | null
    _sum: DiaSumAggregateOutputType | null
    _min: DiaMinAggregateOutputType | null
    _max: DiaMaxAggregateOutputType | null
  }

  export type DiaAvgAggregateOutputType = {
    id: number | null
  }

  export type DiaSumAggregateOutputType = {
    id: number | null
  }

  export type DiaMinAggregateOutputType = {
    id: number | null
    nombre: $Enums.DiasSemana | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type DiaMaxAggregateOutputType = {
    id: number | null
    nombre: $Enums.DiasSemana | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type DiaCountAggregateOutputType = {
    id: number
    nombre: number
    estadoEliminado: number
    _all: number
  }


  export type DiaAvgAggregateInputType = {
    id?: true
  }

  export type DiaSumAggregateInputType = {
    id?: true
  }

  export type DiaMinAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
  }

  export type DiaMaxAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
  }

  export type DiaCountAggregateInputType = {
    id?: true
    nombre?: true
    estadoEliminado?: true
    _all?: true
  }

  export type DiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Dia to aggregate.
     */
    where?: DiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dias to fetch.
     */
    orderBy?: DiaOrderByWithRelationInput | DiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Dias
    **/
    _count?: true | DiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiaMaxAggregateInputType
  }

  export type GetDiaAggregateType<T extends DiaAggregateArgs> = {
        [P in keyof T & keyof AggregateDia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDia[P]>
      : GetScalarType<T[P], AggregateDia[P]>
  }




  export type DiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiaWhereInput
    orderBy?: DiaOrderByWithAggregationInput | DiaOrderByWithAggregationInput[]
    by: DiaScalarFieldEnum[] | DiaScalarFieldEnum
    having?: DiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiaCountAggregateInputType | true
    _avg?: DiaAvgAggregateInputType
    _sum?: DiaSumAggregateInputType
    _min?: DiaMinAggregateInputType
    _max?: DiaMaxAggregateInputType
  }

  export type DiaGroupByOutputType = {
    id: number
    nombre: $Enums.DiasSemana
    estadoEliminado: $Enums.EstadoEliminado
    _count: DiaCountAggregateOutputType | null
    _avg: DiaAvgAggregateOutputType | null
    _sum: DiaSumAggregateOutputType | null
    _min: DiaMinAggregateOutputType | null
    _max: DiaMaxAggregateOutputType | null
  }

  type GetDiaGroupByPayload<T extends DiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiaGroupByOutputType[P]>
            : GetScalarType<T[P], DiaGroupByOutputType[P]>
        }
      >
    >


  export type DiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
    horarios?: boolean | Dia$horariosArgs<ExtArgs>
    _count?: boolean | DiaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dia"]>

  export type DiaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
  }, ExtArgs["result"]["dia"]>

  export type DiaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
  }, ExtArgs["result"]["dia"]>

  export type DiaSelectScalar = {
    id?: boolean
    nombre?: boolean
    estadoEliminado?: boolean
  }

  export type DiaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "estadoEliminado", ExtArgs["result"]["dia"]>
  export type DiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horarios?: boolean | Dia$horariosArgs<ExtArgs>
    _count?: boolean | DiaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DiaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Dia"
    objects: {
      horarios: Prisma.$HorarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: $Enums.DiasSemana
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["dia"]>
    composites: {}
  }

  type DiaGetPayload<S extends boolean | null | undefined | DiaDefaultArgs> = $Result.GetResult<Prisma.$DiaPayload, S>

  type DiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiaCountAggregateInputType | true
    }

  export interface DiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Dia'], meta: { name: 'Dia' } }
    /**
     * Find zero or one Dia that matches the filter.
     * @param {DiaFindUniqueArgs} args - Arguments to find a Dia
     * @example
     * // Get one Dia
     * const dia = await prisma.dia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiaFindUniqueArgs>(args: SelectSubset<T, DiaFindUniqueArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Dia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiaFindUniqueOrThrowArgs} args - Arguments to find a Dia
     * @example
     * // Get one Dia
     * const dia = await prisma.dia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiaFindUniqueOrThrowArgs>(args: SelectSubset<T, DiaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaFindFirstArgs} args - Arguments to find a Dia
     * @example
     * // Get one Dia
     * const dia = await prisma.dia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiaFindFirstArgs>(args?: SelectSubset<T, DiaFindFirstArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaFindFirstOrThrowArgs} args - Arguments to find a Dia
     * @example
     * // Get one Dia
     * const dia = await prisma.dia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiaFindFirstOrThrowArgs>(args?: SelectSubset<T, DiaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Dias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dias
     * const dias = await prisma.dia.findMany()
     * 
     * // Get first 10 Dias
     * const dias = await prisma.dia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const diaWithIdOnly = await prisma.dia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiaFindManyArgs>(args?: SelectSubset<T, DiaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Dia.
     * @param {DiaCreateArgs} args - Arguments to create a Dia.
     * @example
     * // Create one Dia
     * const Dia = await prisma.dia.create({
     *   data: {
     *     // ... data to create a Dia
     *   }
     * })
     * 
     */
    create<T extends DiaCreateArgs>(args: SelectSubset<T, DiaCreateArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Dias.
     * @param {DiaCreateManyArgs} args - Arguments to create many Dias.
     * @example
     * // Create many Dias
     * const dia = await prisma.dia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiaCreateManyArgs>(args?: SelectSubset<T, DiaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Dias and returns the data saved in the database.
     * @param {DiaCreateManyAndReturnArgs} args - Arguments to create many Dias.
     * @example
     * // Create many Dias
     * const dia = await prisma.dia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Dias and only return the `id`
     * const diaWithIdOnly = await prisma.dia.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiaCreateManyAndReturnArgs>(args?: SelectSubset<T, DiaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Dia.
     * @param {DiaDeleteArgs} args - Arguments to delete one Dia.
     * @example
     * // Delete one Dia
     * const Dia = await prisma.dia.delete({
     *   where: {
     *     // ... filter to delete one Dia
     *   }
     * })
     * 
     */
    delete<T extends DiaDeleteArgs>(args: SelectSubset<T, DiaDeleteArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Dia.
     * @param {DiaUpdateArgs} args - Arguments to update one Dia.
     * @example
     * // Update one Dia
     * const dia = await prisma.dia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiaUpdateArgs>(args: SelectSubset<T, DiaUpdateArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Dias.
     * @param {DiaDeleteManyArgs} args - Arguments to filter Dias to delete.
     * @example
     * // Delete a few Dias
     * const { count } = await prisma.dia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiaDeleteManyArgs>(args?: SelectSubset<T, DiaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dias
     * const dia = await prisma.dia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiaUpdateManyArgs>(args: SelectSubset<T, DiaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dias and returns the data updated in the database.
     * @param {DiaUpdateManyAndReturnArgs} args - Arguments to update many Dias.
     * @example
     * // Update many Dias
     * const dia = await prisma.dia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Dias and only return the `id`
     * const diaWithIdOnly = await prisma.dia.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiaUpdateManyAndReturnArgs>(args: SelectSubset<T, DiaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Dia.
     * @param {DiaUpsertArgs} args - Arguments to update or create a Dia.
     * @example
     * // Update or create a Dia
     * const dia = await prisma.dia.upsert({
     *   create: {
     *     // ... data to create a Dia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dia we want to update
     *   }
     * })
     */
    upsert<T extends DiaUpsertArgs>(args: SelectSubset<T, DiaUpsertArgs<ExtArgs>>): Prisma__DiaClient<$Result.GetResult<Prisma.$DiaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Dias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaCountArgs} args - Arguments to filter Dias to count.
     * @example
     * // Count the number of Dias
     * const count = await prisma.dia.count({
     *   where: {
     *     // ... the filter for the Dias we want to count
     *   }
     * })
    **/
    count<T extends DiaCountArgs>(
      args?: Subset<T, DiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiaAggregateArgs>(args: Subset<T, DiaAggregateArgs>): Prisma.PrismaPromise<GetDiaAggregateType<T>>

    /**
     * Group by Dia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiaGroupByArgs['orderBy'] }
        : { orderBy?: DiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Dia model
   */
  readonly fields: DiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Dia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    horarios<T extends Dia$horariosArgs<ExtArgs> = {}>(args?: Subset<T, Dia$horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Dia model
   */
  interface DiaFieldRefs {
    readonly id: FieldRef<"Dia", 'Int'>
    readonly nombre: FieldRef<"Dia", 'DiasSemana'>
    readonly estadoEliminado: FieldRef<"Dia", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * Dia findUnique
   */
  export type DiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * Filter, which Dia to fetch.
     */
    where: DiaWhereUniqueInput
  }

  /**
   * Dia findUniqueOrThrow
   */
  export type DiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * Filter, which Dia to fetch.
     */
    where: DiaWhereUniqueInput
  }

  /**
   * Dia findFirst
   */
  export type DiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * Filter, which Dia to fetch.
     */
    where?: DiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dias to fetch.
     */
    orderBy?: DiaOrderByWithRelationInput | DiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Dias.
     */
    cursor?: DiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Dias.
     */
    distinct?: DiaScalarFieldEnum | DiaScalarFieldEnum[]
  }

  /**
   * Dia findFirstOrThrow
   */
  export type DiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * Filter, which Dia to fetch.
     */
    where?: DiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dias to fetch.
     */
    orderBy?: DiaOrderByWithRelationInput | DiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Dias.
     */
    cursor?: DiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Dias.
     */
    distinct?: DiaScalarFieldEnum | DiaScalarFieldEnum[]
  }

  /**
   * Dia findMany
   */
  export type DiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * Filter, which Dias to fetch.
     */
    where?: DiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dias to fetch.
     */
    orderBy?: DiaOrderByWithRelationInput | DiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Dias.
     */
    cursor?: DiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dias.
     */
    skip?: number
    distinct?: DiaScalarFieldEnum | DiaScalarFieldEnum[]
  }

  /**
   * Dia create
   */
  export type DiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * The data needed to create a Dia.
     */
    data: XOR<DiaCreateInput, DiaUncheckedCreateInput>
  }

  /**
   * Dia createMany
   */
  export type DiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Dias.
     */
    data: DiaCreateManyInput | DiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Dia createManyAndReturn
   */
  export type DiaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * The data used to create many Dias.
     */
    data: DiaCreateManyInput | DiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Dia update
   */
  export type DiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * The data needed to update a Dia.
     */
    data: XOR<DiaUpdateInput, DiaUncheckedUpdateInput>
    /**
     * Choose, which Dia to update.
     */
    where: DiaWhereUniqueInput
  }

  /**
   * Dia updateMany
   */
  export type DiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Dias.
     */
    data: XOR<DiaUpdateManyMutationInput, DiaUncheckedUpdateManyInput>
    /**
     * Filter which Dias to update
     */
    where?: DiaWhereInput
    /**
     * Limit how many Dias to update.
     */
    limit?: number
  }

  /**
   * Dia updateManyAndReturn
   */
  export type DiaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * The data used to update Dias.
     */
    data: XOR<DiaUpdateManyMutationInput, DiaUncheckedUpdateManyInput>
    /**
     * Filter which Dias to update
     */
    where?: DiaWhereInput
    /**
     * Limit how many Dias to update.
     */
    limit?: number
  }

  /**
   * Dia upsert
   */
  export type DiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * The filter to search for the Dia to update in case it exists.
     */
    where: DiaWhereUniqueInput
    /**
     * In case the Dia found by the `where` argument doesn't exist, create a new Dia with this data.
     */
    create: XOR<DiaCreateInput, DiaUncheckedCreateInput>
    /**
     * In case the Dia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiaUpdateInput, DiaUncheckedUpdateInput>
  }

  /**
   * Dia delete
   */
  export type DiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
    /**
     * Filter which Dia to delete.
     */
    where: DiaWhereUniqueInput
  }

  /**
   * Dia deleteMany
   */
  export type DiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Dias to delete
     */
    where?: DiaWhereInput
    /**
     * Limit how many Dias to delete.
     */
    limit?: number
  }

  /**
   * Dia.horarios
   */
  export type Dia$horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Horario
     */
    select?: HorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Horario
     */
    omit?: HorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HorarioInclude<ExtArgs> | null
    where?: HorarioWhereInput
    orderBy?: HorarioOrderByWithRelationInput | HorarioOrderByWithRelationInput[]
    cursor?: HorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorarioScalarFieldEnum | HorarioScalarFieldEnum[]
  }

  /**
   * Dia without action
   */
  export type DiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dia
     */
    select?: DiaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dia
     */
    omit?: DiaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaInclude<ExtArgs> | null
  }


  /**
   * Model Pedido
   */

  export type AggregatePedido = {
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  export type PedidoAvgAggregateOutputType = {
    id: number | null
    id_obra: number | null
    id_transaccion: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PedidoSumAggregateOutputType = {
    id: number | null
    id_obra: number | null
    id_transaccion: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type PedidoMinAggregateOutputType = {
    id: number | null
    id_obra: number | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PedidoMaxAggregateOutputType = {
    id: number | null
    id_obra: number | null
    id_transaccion: number | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type PedidoCountAggregateOutputType = {
    id: number
    id_obra: number
    id_transaccion: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type PedidoAvgAggregateInputType = {
    id?: true
    id_obra?: true
    id_transaccion?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PedidoSumAggregateInputType = {
    id?: true
    id_obra?: true
    id_transaccion?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type PedidoMinAggregateInputType = {
    id?: true
    id_obra?: true
    id_transaccion?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PedidoMaxAggregateInputType = {
    id?: true
    id_obra?: true
    id_transaccion?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type PedidoCountAggregateInputType = {
    id?: true
    id_obra?: true
    id_transaccion?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type PedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedido to aggregate.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pedidos
    **/
    _count?: true | PedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoMaxAggregateInputType
  }

  export type GetPedidoAggregateType<T extends PedidoAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido[P]>
      : GetScalarType<T[P], AggregatePedido[P]>
  }




  export type PedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithAggregationInput | PedidoOrderByWithAggregationInput[]
    by: PedidoScalarFieldEnum[] | PedidoScalarFieldEnum
    having?: PedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoCountAggregateInputType | true
    _avg?: PedidoAvgAggregateInputType
    _sum?: PedidoSumAggregateInputType
    _min?: PedidoMinAggregateInputType
    _max?: PedidoMaxAggregateInputType
  }

  export type PedidoGroupByOutputType = {
    id: number
    id_obra: number
    id_transaccion: number
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  type GetPedidoGroupByPayload<T extends PedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoGroupByOutputType[P]>
        }
      >
    >


  export type PedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_obra?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    obra?: boolean | ObraDefaultArgs<ExtArgs>
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | Pedido$elementoArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_obra?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    obra?: boolean | ObraDefaultArgs<ExtArgs>
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_obra?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    obra?: boolean | ObraDefaultArgs<ExtArgs>
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectScalar = {
    id?: boolean
    id_obra?: boolean
    id_transaccion?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type PedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_obra" | "id_transaccion" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["pedido"]>
  export type PedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    obra?: boolean | ObraDefaultArgs<ExtArgs>
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
    elemento?: boolean | Pedido$elementoArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    obra?: boolean | ObraDefaultArgs<ExtArgs>
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    obra?: boolean | ObraDefaultArgs<ExtArgs>
    transaccion?: boolean | TransaccionDefaultArgs<ExtArgs>
  }

  export type $PedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pedido"
    objects: {
      obra: Prisma.$ObraPayload<ExtArgs>
      transaccion: Prisma.$TransaccionPayload<ExtArgs>
      elemento: Prisma.$pedido_elementosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_obra: number
      id_transaccion: number
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["pedido"]>
    composites: {}
  }

  type PedidoGetPayload<S extends boolean | null | undefined | PedidoDefaultArgs> = $Result.GetResult<Prisma.$PedidoPayload, S>

  type PedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoCountAggregateInputType | true
    }

  export interface PedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pedido'], meta: { name: 'Pedido' } }
    /**
     * Find zero or one Pedido that matches the filter.
     * @param {PedidoFindUniqueArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoFindUniqueArgs>(args: SelectSubset<T, PedidoFindUniqueArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoFindUniqueOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoFindFirstArgs>(args?: SelectSubset<T, PedidoFindFirstArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedidos
     * const pedidos = await prisma.pedido.findMany()
     * 
     * // Get first 10 Pedidos
     * const pedidos = await prisma.pedido.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pedidoWithIdOnly = await prisma.pedido.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PedidoFindManyArgs>(args?: SelectSubset<T, PedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido.
     * @param {PedidoCreateArgs} args - Arguments to create a Pedido.
     * @example
     * // Create one Pedido
     * const Pedido = await prisma.pedido.create({
     *   data: {
     *     // ... data to create a Pedido
     *   }
     * })
     * 
     */
    create<T extends PedidoCreateArgs>(args: SelectSubset<T, PedidoCreateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedidos.
     * @param {PedidoCreateManyArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoCreateManyArgs>(args?: SelectSubset<T, PedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedidos and returns the data saved in the database.
     * @param {PedidoCreateManyAndReturnArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedidos and only return the `id`
     * const pedidoWithIdOnly = await prisma.pedido.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, PedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pedido.
     * @param {PedidoDeleteArgs} args - Arguments to delete one Pedido.
     * @example
     * // Delete one Pedido
     * const Pedido = await prisma.pedido.delete({
     *   where: {
     *     // ... filter to delete one Pedido
     *   }
     * })
     * 
     */
    delete<T extends PedidoDeleteArgs>(args: SelectSubset<T, PedidoDeleteArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido.
     * @param {PedidoUpdateArgs} args - Arguments to update one Pedido.
     * @example
     * // Update one Pedido
     * const pedido = await prisma.pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoUpdateArgs>(args: SelectSubset<T, PedidoUpdateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedidos.
     * @param {PedidoDeleteManyArgs} args - Arguments to filter Pedidos to delete.
     * @example
     * // Delete a few Pedidos
     * const { count } = await prisma.pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoDeleteManyArgs>(args?: SelectSubset<T, PedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoUpdateManyArgs>(args: SelectSubset<T, PedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos and returns the data updated in the database.
     * @param {PedidoUpdateManyAndReturnArgs} args - Arguments to update many Pedidos.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pedidos and only return the `id`
     * const pedidoWithIdOnly = await prisma.pedido.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, PedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pedido.
     * @param {PedidoUpsertArgs} args - Arguments to update or create a Pedido.
     * @example
     * // Update or create a Pedido
     * const pedido = await prisma.pedido.upsert({
     *   create: {
     *     // ... data to create a Pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido we want to update
     *   }
     * })
     */
    upsert<T extends PedidoUpsertArgs>(args: SelectSubset<T, PedidoUpsertArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoCountArgs} args - Arguments to filter Pedidos to count.
     * @example
     * // Count the number of Pedidos
     * const count = await prisma.pedido.count({
     *   where: {
     *     // ... the filter for the Pedidos we want to count
     *   }
     * })
    **/
    count<T extends PedidoCountArgs>(
      args?: Subset<T, PedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoAggregateArgs>(args: Subset<T, PedidoAggregateArgs>): Prisma.PrismaPromise<GetPedidoAggregateType<T>>

    /**
     * Group by Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoGroupByArgs['orderBy'] }
        : { orderBy?: PedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pedido model
   */
  readonly fields: PedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    obra<T extends ObraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ObraDefaultArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transaccion<T extends TransaccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransaccionDefaultArgs<ExtArgs>>): Prisma__TransaccionClient<$Result.GetResult<Prisma.$TransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    elemento<T extends Pedido$elementoArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$elementoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pedido model
   */
  interface PedidoFieldRefs {
    readonly id: FieldRef<"Pedido", 'Int'>
    readonly id_obra: FieldRef<"Pedido", 'Int'>
    readonly id_transaccion: FieldRef<"Pedido", 'Int'>
    readonly estadoEliminado: FieldRef<"Pedido", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Pedido", 'Int'>
    readonly updatedBy: FieldRef<"Pedido", 'Int'>
    readonly deletedBy: FieldRef<"Pedido", 'Int'>
    readonly createdDate: FieldRef<"Pedido", 'DateTime'>
    readonly updatedDate: FieldRef<"Pedido", 'DateTime'>
    readonly deletedDate: FieldRef<"Pedido", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pedido findUnique
   */
  export type PedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findUniqueOrThrow
   */
  export type PedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findFirst
   */
  export type PedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findFirstOrThrow
   */
  export type PedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findMany
   */
  export type PedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedidos to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido create
   */
  export type PedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pedido.
     */
    data: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
  }

  /**
   * Pedido createMany
   */
  export type PedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pedido createManyAndReturn
   */
  export type PedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido update
   */
  export type PedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pedido.
     */
    data: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
    /**
     * Choose, which Pedido to update.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido updateMany
   */
  export type PedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
  }

  /**
   * Pedido updateManyAndReturn
   */
  export type PedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido upsert
   */
  export type PedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pedido to update in case it exists.
     */
    where: PedidoWhereUniqueInput
    /**
     * In case the Pedido found by the `where` argument doesn't exist, create a new Pedido with this data.
     */
    create: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
    /**
     * In case the Pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
  }

  /**
   * Pedido delete
   */
  export type PedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter which Pedido to delete.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido deleteMany
   */
  export type PedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedidos to delete
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to delete.
     */
    limit?: number
  }

  /**
   * Pedido.elemento
   */
  export type Pedido$elementoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    where?: pedido_elementosWhereInput
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    cursor?: pedido_elementosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pedido_elementosScalarFieldEnum | Pedido_elementosScalarFieldEnum[]
  }

  /**
   * Pedido without action
   */
  export type PedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
  }


  /**
   * Model Tarea
   */

  export type AggregateTarea = {
    _count: TareaCountAggregateOutputType | null
    _avg: TareaAvgAggregateOutputType | null
    _sum: TareaSumAggregateOutputType | null
    _min: TareaMinAggregateOutputType | null
    _max: TareaMaxAggregateOutputType | null
  }

  export type TareaAvgAggregateOutputType = {
    id: number | null
    id_asignador: number | null
    id_asignado: number | null
    id_ubicacion: number | null
    id_obra: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type TareaSumAggregateOutputType = {
    id: number | null
    id_asignador: number | null
    id_asignado: number | null
    id_ubicacion: number | null
    id_obra: number | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
  }

  export type TareaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    estado: $Enums.EstadoTarea | null
    id_asignador: number | null
    id_asignado: number | null
    id_ubicacion: number | null
    id_obra: number | null
    fecha_final: Date | null
    fecha_inicio: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type TareaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    estado: $Enums.EstadoTarea | null
    id_asignador: number | null
    id_asignado: number | null
    id_ubicacion: number | null
    id_obra: number | null
    fecha_final: Date | null
    fecha_inicio: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
    createdBy: number | null
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date | null
    updatedDate: Date | null
    deletedDate: Date | null
  }

  export type TareaCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    estado: number
    id_asignador: number
    id_asignado: number
    id_ubicacion: number
    id_obra: number
    fecha_final: number
    fecha_inicio: number
    estadoEliminado: number
    createdBy: number
    updatedBy: number
    deletedBy: number
    createdDate: number
    updatedDate: number
    deletedDate: number
    _all: number
  }


  export type TareaAvgAggregateInputType = {
    id?: true
    id_asignador?: true
    id_asignado?: true
    id_ubicacion?: true
    id_obra?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type TareaSumAggregateInputType = {
    id?: true
    id_asignador?: true
    id_asignado?: true
    id_ubicacion?: true
    id_obra?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
  }

  export type TareaMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado?: true
    id_asignador?: true
    id_asignado?: true
    id_ubicacion?: true
    id_obra?: true
    fecha_final?: true
    fecha_inicio?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type TareaMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado?: true
    id_asignador?: true
    id_asignado?: true
    id_ubicacion?: true
    id_obra?: true
    fecha_final?: true
    fecha_inicio?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
  }

  export type TareaCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado?: true
    id_asignador?: true
    id_asignado?: true
    id_ubicacion?: true
    id_obra?: true
    fecha_final?: true
    fecha_inicio?: true
    estadoEliminado?: true
    createdBy?: true
    updatedBy?: true
    deletedBy?: true
    createdDate?: true
    updatedDate?: true
    deletedDate?: true
    _all?: true
  }

  export type TareaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tarea to aggregate.
     */
    where?: TareaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tareas to fetch.
     */
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TareaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tareas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tareas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tareas
    **/
    _count?: true | TareaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TareaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TareaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TareaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TareaMaxAggregateInputType
  }

  export type GetTareaAggregateType<T extends TareaAggregateArgs> = {
        [P in keyof T & keyof AggregateTarea]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTarea[P]>
      : GetScalarType<T[P], AggregateTarea[P]>
  }




  export type TareaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaWhereInput
    orderBy?: TareaOrderByWithAggregationInput | TareaOrderByWithAggregationInput[]
    by: TareaScalarFieldEnum[] | TareaScalarFieldEnum
    having?: TareaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TareaCountAggregateInputType | true
    _avg?: TareaAvgAggregateInputType
    _sum?: TareaSumAggregateInputType
    _min?: TareaMinAggregateInputType
    _max?: TareaMaxAggregateInputType
  }

  export type TareaGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string
    estado: $Enums.EstadoTarea
    id_asignador: number
    id_asignado: number | null
    id_ubicacion: number | null
    id_obra: number | null
    fecha_final: Date
    fecha_inicio: Date
    estadoEliminado: $Enums.EstadoEliminado
    createdBy: number
    updatedBy: number | null
    deletedBy: number | null
    createdDate: Date
    updatedDate: Date
    deletedDate: Date | null
    _count: TareaCountAggregateOutputType | null
    _avg: TareaAvgAggregateOutputType | null
    _sum: TareaSumAggregateOutputType | null
    _min: TareaMinAggregateOutputType | null
    _max: TareaMaxAggregateOutputType | null
  }

  type GetTareaGroupByPayload<T extends TareaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TareaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TareaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TareaGroupByOutputType[P]>
            : GetScalarType<T[P], TareaGroupByOutputType[P]>
        }
      >
    >


  export type TareaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    id_asignador?: boolean
    id_asignado?: boolean
    id_ubicacion?: boolean
    id_obra?: boolean
    fecha_final?: boolean
    fecha_inicio?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    asignador?: boolean | EmpleadoDefaultArgs<ExtArgs>
    asignado?: boolean | Tarea$asignadoArgs<ExtArgs>
    ubicacion?: boolean | Tarea$ubicacionArgs<ExtArgs>
    obra?: boolean | Tarea$obraArgs<ExtArgs>
  }, ExtArgs["result"]["tarea"]>

  export type TareaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    id_asignador?: boolean
    id_asignado?: boolean
    id_ubicacion?: boolean
    id_obra?: boolean
    fecha_final?: boolean
    fecha_inicio?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    asignador?: boolean | EmpleadoDefaultArgs<ExtArgs>
    asignado?: boolean | Tarea$asignadoArgs<ExtArgs>
    ubicacion?: boolean | Tarea$ubicacionArgs<ExtArgs>
    obra?: boolean | Tarea$obraArgs<ExtArgs>
  }, ExtArgs["result"]["tarea"]>

  export type TareaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    id_asignador?: boolean
    id_asignado?: boolean
    id_ubicacion?: boolean
    id_obra?: boolean
    fecha_final?: boolean
    fecha_inicio?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
    asignador?: boolean | EmpleadoDefaultArgs<ExtArgs>
    asignado?: boolean | Tarea$asignadoArgs<ExtArgs>
    ubicacion?: boolean | Tarea$ubicacionArgs<ExtArgs>
    obra?: boolean | Tarea$obraArgs<ExtArgs>
  }, ExtArgs["result"]["tarea"]>

  export type TareaSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    id_asignador?: boolean
    id_asignado?: boolean
    id_ubicacion?: boolean
    id_obra?: boolean
    fecha_final?: boolean
    fecha_inicio?: boolean
    estadoEliminado?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    deletedBy?: boolean
    createdDate?: boolean
    updatedDate?: boolean
    deletedDate?: boolean
  }

  export type TareaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "estado" | "id_asignador" | "id_asignado" | "id_ubicacion" | "id_obra" | "fecha_final" | "fecha_inicio" | "estadoEliminado" | "createdBy" | "updatedBy" | "deletedBy" | "createdDate" | "updatedDate" | "deletedDate", ExtArgs["result"]["tarea"]>
  export type TareaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignador?: boolean | EmpleadoDefaultArgs<ExtArgs>
    asignado?: boolean | Tarea$asignadoArgs<ExtArgs>
    ubicacion?: boolean | Tarea$ubicacionArgs<ExtArgs>
    obra?: boolean | Tarea$obraArgs<ExtArgs>
  }
  export type TareaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignador?: boolean | EmpleadoDefaultArgs<ExtArgs>
    asignado?: boolean | Tarea$asignadoArgs<ExtArgs>
    ubicacion?: boolean | Tarea$ubicacionArgs<ExtArgs>
    obra?: boolean | Tarea$obraArgs<ExtArgs>
  }
  export type TareaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignador?: boolean | EmpleadoDefaultArgs<ExtArgs>
    asignado?: boolean | Tarea$asignadoArgs<ExtArgs>
    ubicacion?: boolean | Tarea$ubicacionArgs<ExtArgs>
    obra?: boolean | Tarea$obraArgs<ExtArgs>
  }

  export type $TareaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tarea"
    objects: {
      asignador: Prisma.$EmpleadoPayload<ExtArgs>
      asignado: Prisma.$EmpleadoPayload<ExtArgs> | null
      ubicacion: Prisma.$UbicacionPayload<ExtArgs> | null
      obra: Prisma.$ObraPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string
      estado: $Enums.EstadoTarea
      id_asignador: number
      id_asignado: number | null
      id_ubicacion: number | null
      id_obra: number | null
      fecha_final: Date
      fecha_inicio: Date
      estadoEliminado: $Enums.EstadoEliminado
      createdBy: number
      updatedBy: number | null
      deletedBy: number | null
      createdDate: Date
      updatedDate: Date
      deletedDate: Date | null
    }, ExtArgs["result"]["tarea"]>
    composites: {}
  }

  type TareaGetPayload<S extends boolean | null | undefined | TareaDefaultArgs> = $Result.GetResult<Prisma.$TareaPayload, S>

  type TareaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TareaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TareaCountAggregateInputType | true
    }

  export interface TareaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tarea'], meta: { name: 'Tarea' } }
    /**
     * Find zero or one Tarea that matches the filter.
     * @param {TareaFindUniqueArgs} args - Arguments to find a Tarea
     * @example
     * // Get one Tarea
     * const tarea = await prisma.tarea.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TareaFindUniqueArgs>(args: SelectSubset<T, TareaFindUniqueArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tarea that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TareaFindUniqueOrThrowArgs} args - Arguments to find a Tarea
     * @example
     * // Get one Tarea
     * const tarea = await prisma.tarea.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TareaFindUniqueOrThrowArgs>(args: SelectSubset<T, TareaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tarea that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaFindFirstArgs} args - Arguments to find a Tarea
     * @example
     * // Get one Tarea
     * const tarea = await prisma.tarea.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TareaFindFirstArgs>(args?: SelectSubset<T, TareaFindFirstArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tarea that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaFindFirstOrThrowArgs} args - Arguments to find a Tarea
     * @example
     * // Get one Tarea
     * const tarea = await prisma.tarea.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TareaFindFirstOrThrowArgs>(args?: SelectSubset<T, TareaFindFirstOrThrowArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tareas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tareas
     * const tareas = await prisma.tarea.findMany()
     * 
     * // Get first 10 Tareas
     * const tareas = await prisma.tarea.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tareaWithIdOnly = await prisma.tarea.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TareaFindManyArgs>(args?: SelectSubset<T, TareaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tarea.
     * @param {TareaCreateArgs} args - Arguments to create a Tarea.
     * @example
     * // Create one Tarea
     * const Tarea = await prisma.tarea.create({
     *   data: {
     *     // ... data to create a Tarea
     *   }
     * })
     * 
     */
    create<T extends TareaCreateArgs>(args: SelectSubset<T, TareaCreateArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tareas.
     * @param {TareaCreateManyArgs} args - Arguments to create many Tareas.
     * @example
     * // Create many Tareas
     * const tarea = await prisma.tarea.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TareaCreateManyArgs>(args?: SelectSubset<T, TareaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tareas and returns the data saved in the database.
     * @param {TareaCreateManyAndReturnArgs} args - Arguments to create many Tareas.
     * @example
     * // Create many Tareas
     * const tarea = await prisma.tarea.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tareas and only return the `id`
     * const tareaWithIdOnly = await prisma.tarea.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TareaCreateManyAndReturnArgs>(args?: SelectSubset<T, TareaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tarea.
     * @param {TareaDeleteArgs} args - Arguments to delete one Tarea.
     * @example
     * // Delete one Tarea
     * const Tarea = await prisma.tarea.delete({
     *   where: {
     *     // ... filter to delete one Tarea
     *   }
     * })
     * 
     */
    delete<T extends TareaDeleteArgs>(args: SelectSubset<T, TareaDeleteArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tarea.
     * @param {TareaUpdateArgs} args - Arguments to update one Tarea.
     * @example
     * // Update one Tarea
     * const tarea = await prisma.tarea.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TareaUpdateArgs>(args: SelectSubset<T, TareaUpdateArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tareas.
     * @param {TareaDeleteManyArgs} args - Arguments to filter Tareas to delete.
     * @example
     * // Delete a few Tareas
     * const { count } = await prisma.tarea.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TareaDeleteManyArgs>(args?: SelectSubset<T, TareaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tareas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tareas
     * const tarea = await prisma.tarea.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TareaUpdateManyArgs>(args: SelectSubset<T, TareaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tareas and returns the data updated in the database.
     * @param {TareaUpdateManyAndReturnArgs} args - Arguments to update many Tareas.
     * @example
     * // Update many Tareas
     * const tarea = await prisma.tarea.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tareas and only return the `id`
     * const tareaWithIdOnly = await prisma.tarea.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TareaUpdateManyAndReturnArgs>(args: SelectSubset<T, TareaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tarea.
     * @param {TareaUpsertArgs} args - Arguments to update or create a Tarea.
     * @example
     * // Update or create a Tarea
     * const tarea = await prisma.tarea.upsert({
     *   create: {
     *     // ... data to create a Tarea
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tarea we want to update
     *   }
     * })
     */
    upsert<T extends TareaUpsertArgs>(args: SelectSubset<T, TareaUpsertArgs<ExtArgs>>): Prisma__TareaClient<$Result.GetResult<Prisma.$TareaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tareas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaCountArgs} args - Arguments to filter Tareas to count.
     * @example
     * // Count the number of Tareas
     * const count = await prisma.tarea.count({
     *   where: {
     *     // ... the filter for the Tareas we want to count
     *   }
     * })
    **/
    count<T extends TareaCountArgs>(
      args?: Subset<T, TareaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TareaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tarea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TareaAggregateArgs>(args: Subset<T, TareaAggregateArgs>): Prisma.PrismaPromise<GetTareaAggregateType<T>>

    /**
     * Group by Tarea.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TareaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TareaGroupByArgs['orderBy'] }
        : { orderBy?: TareaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TareaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTareaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tarea model
   */
  readonly fields: TareaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tarea.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TareaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asignador<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    asignado<T extends Tarea$asignadoArgs<ExtArgs> = {}>(args?: Subset<T, Tarea$asignadoArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ubicacion<T extends Tarea$ubicacionArgs<ExtArgs> = {}>(args?: Subset<T, Tarea$ubicacionArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    obra<T extends Tarea$obraArgs<ExtArgs> = {}>(args?: Subset<T, Tarea$obraArgs<ExtArgs>>): Prisma__ObraClient<$Result.GetResult<Prisma.$ObraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tarea model
   */
  interface TareaFieldRefs {
    readonly id: FieldRef<"Tarea", 'Int'>
    readonly nombre: FieldRef<"Tarea", 'String'>
    readonly descripcion: FieldRef<"Tarea", 'String'>
    readonly estado: FieldRef<"Tarea", 'EstadoTarea'>
    readonly id_asignador: FieldRef<"Tarea", 'Int'>
    readonly id_asignado: FieldRef<"Tarea", 'Int'>
    readonly id_ubicacion: FieldRef<"Tarea", 'Int'>
    readonly id_obra: FieldRef<"Tarea", 'Int'>
    readonly fecha_final: FieldRef<"Tarea", 'DateTime'>
    readonly fecha_inicio: FieldRef<"Tarea", 'DateTime'>
    readonly estadoEliminado: FieldRef<"Tarea", 'EstadoEliminado'>
    readonly createdBy: FieldRef<"Tarea", 'Int'>
    readonly updatedBy: FieldRef<"Tarea", 'Int'>
    readonly deletedBy: FieldRef<"Tarea", 'Int'>
    readonly createdDate: FieldRef<"Tarea", 'DateTime'>
    readonly updatedDate: FieldRef<"Tarea", 'DateTime'>
    readonly deletedDate: FieldRef<"Tarea", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tarea findUnique
   */
  export type TareaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * Filter, which Tarea to fetch.
     */
    where: TareaWhereUniqueInput
  }

  /**
   * Tarea findUniqueOrThrow
   */
  export type TareaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * Filter, which Tarea to fetch.
     */
    where: TareaWhereUniqueInput
  }

  /**
   * Tarea findFirst
   */
  export type TareaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * Filter, which Tarea to fetch.
     */
    where?: TareaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tareas to fetch.
     */
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tareas.
     */
    cursor?: TareaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tareas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tareas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tareas.
     */
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Tarea findFirstOrThrow
   */
  export type TareaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * Filter, which Tarea to fetch.
     */
    where?: TareaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tareas to fetch.
     */
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tareas.
     */
    cursor?: TareaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tareas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tareas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tareas.
     */
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Tarea findMany
   */
  export type TareaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * Filter, which Tareas to fetch.
     */
    where?: TareaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tareas to fetch.
     */
    orderBy?: TareaOrderByWithRelationInput | TareaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tareas.
     */
    cursor?: TareaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tareas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tareas.
     */
    skip?: number
    distinct?: TareaScalarFieldEnum | TareaScalarFieldEnum[]
  }

  /**
   * Tarea create
   */
  export type TareaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * The data needed to create a Tarea.
     */
    data: XOR<TareaCreateInput, TareaUncheckedCreateInput>
  }

  /**
   * Tarea createMany
   */
  export type TareaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tareas.
     */
    data: TareaCreateManyInput | TareaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tarea createManyAndReturn
   */
  export type TareaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * The data used to create many Tareas.
     */
    data: TareaCreateManyInput | TareaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tarea update
   */
  export type TareaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * The data needed to update a Tarea.
     */
    data: XOR<TareaUpdateInput, TareaUncheckedUpdateInput>
    /**
     * Choose, which Tarea to update.
     */
    where: TareaWhereUniqueInput
  }

  /**
   * Tarea updateMany
   */
  export type TareaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tareas.
     */
    data: XOR<TareaUpdateManyMutationInput, TareaUncheckedUpdateManyInput>
    /**
     * Filter which Tareas to update
     */
    where?: TareaWhereInput
    /**
     * Limit how many Tareas to update.
     */
    limit?: number
  }

  /**
   * Tarea updateManyAndReturn
   */
  export type TareaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * The data used to update Tareas.
     */
    data: XOR<TareaUpdateManyMutationInput, TareaUncheckedUpdateManyInput>
    /**
     * Filter which Tareas to update
     */
    where?: TareaWhereInput
    /**
     * Limit how many Tareas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tarea upsert
   */
  export type TareaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * The filter to search for the Tarea to update in case it exists.
     */
    where: TareaWhereUniqueInput
    /**
     * In case the Tarea found by the `where` argument doesn't exist, create a new Tarea with this data.
     */
    create: XOR<TareaCreateInput, TareaUncheckedCreateInput>
    /**
     * In case the Tarea was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TareaUpdateInput, TareaUncheckedUpdateInput>
  }

  /**
   * Tarea delete
   */
  export type TareaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
    /**
     * Filter which Tarea to delete.
     */
    where: TareaWhereUniqueInput
  }

  /**
   * Tarea deleteMany
   */
  export type TareaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tareas to delete
     */
    where?: TareaWhereInput
    /**
     * Limit how many Tareas to delete.
     */
    limit?: number
  }

  /**
   * Tarea.asignado
   */
  export type Tarea$asignadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empleado
     */
    select?: EmpleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empleado
     */
    omit?: EmpleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpleadoInclude<ExtArgs> | null
    where?: EmpleadoWhereInput
  }

  /**
   * Tarea.ubicacion
   */
  export type Tarea$ubicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    where?: UbicacionWhereInput
  }

  /**
   * Tarea.obra
   */
  export type Tarea$obraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Obra
     */
    select?: ObraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Obra
     */
    omit?: ObraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ObraInclude<ExtArgs> | null
    where?: ObraWhereInput
  }

  /**
   * Tarea without action
   */
  export type TareaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarea
     */
    select?: TareaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tarea
     */
    omit?: TareaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaInclude<ExtArgs> | null
  }


  /**
   * Model pedido_elementos
   */

  export type AggregatePedido_elementos = {
    _count: Pedido_elementosCountAggregateOutputType | null
    _avg: Pedido_elementosAvgAggregateOutputType | null
    _sum: Pedido_elementosSumAggregateOutputType | null
    _min: Pedido_elementosMinAggregateOutputType | null
    _max: Pedido_elementosMaxAggregateOutputType | null
  }

  export type Pedido_elementosAvgAggregateOutputType = {
    id_pedido: number | null
    id_elemento: number | null
    id_empleado: number | null
  }

  export type Pedido_elementosSumAggregateOutputType = {
    id_pedido: number | null
    id_elemento: number | null
    id_empleado: number | null
  }

  export type Pedido_elementosMinAggregateOutputType = {
    id_pedido: number | null
    id_elemento: number | null
    id_empleado: number | null
    estado: $Enums.EstadoPedido | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Pedido_elementosMaxAggregateOutputType = {
    id_pedido: number | null
    id_elemento: number | null
    id_empleado: number | null
    estado: $Enums.EstadoPedido | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Pedido_elementosCountAggregateOutputType = {
    id_pedido: number
    id_elemento: number
    id_empleado: number
    estado: number
    estadoEliminado: number
    _all: number
  }


  export type Pedido_elementosAvgAggregateInputType = {
    id_pedido?: true
    id_elemento?: true
    id_empleado?: true
  }

  export type Pedido_elementosSumAggregateInputType = {
    id_pedido?: true
    id_elemento?: true
    id_empleado?: true
  }

  export type Pedido_elementosMinAggregateInputType = {
    id_pedido?: true
    id_elemento?: true
    id_empleado?: true
    estado?: true
    estadoEliminado?: true
  }

  export type Pedido_elementosMaxAggregateInputType = {
    id_pedido?: true
    id_elemento?: true
    id_empleado?: true
    estado?: true
    estadoEliminado?: true
  }

  export type Pedido_elementosCountAggregateInputType = {
    id_pedido?: true
    id_elemento?: true
    id_empleado?: true
    estado?: true
    estadoEliminado?: true
    _all?: true
  }

  export type Pedido_elementosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pedido_elementos to aggregate.
     */
    where?: pedido_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_elementos to fetch.
     */
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pedido_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_elementos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pedido_elementos
    **/
    _count?: true | Pedido_elementosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pedido_elementosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pedido_elementosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pedido_elementosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pedido_elementosMaxAggregateInputType
  }

  export type GetPedido_elementosAggregateType<T extends Pedido_elementosAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido_elementos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido_elementos[P]>
      : GetScalarType<T[P], AggregatePedido_elementos[P]>
  }




  export type pedido_elementosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pedido_elementosWhereInput
    orderBy?: pedido_elementosOrderByWithAggregationInput | pedido_elementosOrderByWithAggregationInput[]
    by: Pedido_elementosScalarFieldEnum[] | Pedido_elementosScalarFieldEnum
    having?: pedido_elementosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pedido_elementosCountAggregateInputType | true
    _avg?: Pedido_elementosAvgAggregateInputType
    _sum?: Pedido_elementosSumAggregateInputType
    _min?: Pedido_elementosMinAggregateInputType
    _max?: Pedido_elementosMaxAggregateInputType
  }

  export type Pedido_elementosGroupByOutputType = {
    id_pedido: number
    id_elemento: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado: $Enums.EstadoEliminado
    _count: Pedido_elementosCountAggregateOutputType | null
    _avg: Pedido_elementosAvgAggregateOutputType | null
    _sum: Pedido_elementosSumAggregateOutputType | null
    _min: Pedido_elementosMinAggregateOutputType | null
    _max: Pedido_elementosMaxAggregateOutputType | null
  }

  type GetPedido_elementosGroupByPayload<T extends pedido_elementosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pedido_elementosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pedido_elementosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pedido_elementosGroupByOutputType[P]>
            : GetScalarType<T[P], Pedido_elementosGroupByOutputType[P]>
        }
      >
    >


  export type pedido_elementosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_elemento?: boolean
    id_empleado?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido_elementos"]>

  export type pedido_elementosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_elemento?: boolean
    id_empleado?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido_elementos"]>

  export type pedido_elementosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pedido?: boolean
    id_elemento?: boolean
    id_empleado?: boolean
    estado?: boolean
    estadoEliminado?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido_elementos"]>

  export type pedido_elementosSelectScalar = {
    id_pedido?: boolean
    id_elemento?: boolean
    id_empleado?: boolean
    estado?: boolean
    estadoEliminado?: boolean
  }

  export type pedido_elementosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pedido" | "id_elemento" | "id_empleado" | "estado" | "estadoEliminado", ExtArgs["result"]["pedido_elementos"]>
  export type pedido_elementosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type pedido_elementosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type pedido_elementosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    elemento?: boolean | InventarioDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }

  export type $pedido_elementosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pedido_elementos"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
      elemento: Prisma.$InventarioPayload<ExtArgs>
      empleado: Prisma.$EmpleadoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pedido: number
      id_elemento: number
      id_empleado: number
      estado: $Enums.EstadoPedido
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["pedido_elementos"]>
    composites: {}
  }

  type pedido_elementosGetPayload<S extends boolean | null | undefined | pedido_elementosDefaultArgs> = $Result.GetResult<Prisma.$pedido_elementosPayload, S>

  type pedido_elementosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pedido_elementosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pedido_elementosCountAggregateInputType | true
    }

  export interface pedido_elementosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pedido_elementos'], meta: { name: 'pedido_elementos' } }
    /**
     * Find zero or one Pedido_elementos that matches the filter.
     * @param {pedido_elementosFindUniqueArgs} args - Arguments to find a Pedido_elementos
     * @example
     * // Get one Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pedido_elementosFindUniqueArgs>(args: SelectSubset<T, pedido_elementosFindUniqueArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido_elementos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pedido_elementosFindUniqueOrThrowArgs} args - Arguments to find a Pedido_elementos
     * @example
     * // Get one Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pedido_elementosFindUniqueOrThrowArgs>(args: SelectSubset<T, pedido_elementosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido_elementos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_elementosFindFirstArgs} args - Arguments to find a Pedido_elementos
     * @example
     * // Get one Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pedido_elementosFindFirstArgs>(args?: SelectSubset<T, pedido_elementosFindFirstArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido_elementos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_elementosFindFirstOrThrowArgs} args - Arguments to find a Pedido_elementos
     * @example
     * // Get one Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pedido_elementosFindFirstOrThrowArgs>(args?: SelectSubset<T, pedido_elementosFindFirstOrThrowArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedido_elementos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_elementosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.findMany()
     * 
     * // Get first 10 Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.findMany({ take: 10 })
     * 
     * // Only select the `id_pedido`
     * const pedido_elementosWithId_pedidoOnly = await prisma.pedido_elementos.findMany({ select: { id_pedido: true } })
     * 
     */
    findMany<T extends pedido_elementosFindManyArgs>(args?: SelectSubset<T, pedido_elementosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido_elementos.
     * @param {pedido_elementosCreateArgs} args - Arguments to create a Pedido_elementos.
     * @example
     * // Create one Pedido_elementos
     * const Pedido_elementos = await prisma.pedido_elementos.create({
     *   data: {
     *     // ... data to create a Pedido_elementos
     *   }
     * })
     * 
     */
    create<T extends pedido_elementosCreateArgs>(args: SelectSubset<T, pedido_elementosCreateArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedido_elementos.
     * @param {pedido_elementosCreateManyArgs} args - Arguments to create many Pedido_elementos.
     * @example
     * // Create many Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pedido_elementosCreateManyArgs>(args?: SelectSubset<T, pedido_elementosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedido_elementos and returns the data saved in the database.
     * @param {pedido_elementosCreateManyAndReturnArgs} args - Arguments to create many Pedido_elementos.
     * @example
     * // Create many Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedido_elementos and only return the `id_pedido`
     * const pedido_elementosWithId_pedidoOnly = await prisma.pedido_elementos.createManyAndReturn({
     *   select: { id_pedido: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pedido_elementosCreateManyAndReturnArgs>(args?: SelectSubset<T, pedido_elementosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pedido_elementos.
     * @param {pedido_elementosDeleteArgs} args - Arguments to delete one Pedido_elementos.
     * @example
     * // Delete one Pedido_elementos
     * const Pedido_elementos = await prisma.pedido_elementos.delete({
     *   where: {
     *     // ... filter to delete one Pedido_elementos
     *   }
     * })
     * 
     */
    delete<T extends pedido_elementosDeleteArgs>(args: SelectSubset<T, pedido_elementosDeleteArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido_elementos.
     * @param {pedido_elementosUpdateArgs} args - Arguments to update one Pedido_elementos.
     * @example
     * // Update one Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pedido_elementosUpdateArgs>(args: SelectSubset<T, pedido_elementosUpdateArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedido_elementos.
     * @param {pedido_elementosDeleteManyArgs} args - Arguments to filter Pedido_elementos to delete.
     * @example
     * // Delete a few Pedido_elementos
     * const { count } = await prisma.pedido_elementos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pedido_elementosDeleteManyArgs>(args?: SelectSubset<T, pedido_elementosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedido_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_elementosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pedido_elementosUpdateManyArgs>(args: SelectSubset<T, pedido_elementosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedido_elementos and returns the data updated in the database.
     * @param {pedido_elementosUpdateManyAndReturnArgs} args - Arguments to update many Pedido_elementos.
     * @example
     * // Update many Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pedido_elementos and only return the `id_pedido`
     * const pedido_elementosWithId_pedidoOnly = await prisma.pedido_elementos.updateManyAndReturn({
     *   select: { id_pedido: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pedido_elementosUpdateManyAndReturnArgs>(args: SelectSubset<T, pedido_elementosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pedido_elementos.
     * @param {pedido_elementosUpsertArgs} args - Arguments to update or create a Pedido_elementos.
     * @example
     * // Update or create a Pedido_elementos
     * const pedido_elementos = await prisma.pedido_elementos.upsert({
     *   create: {
     *     // ... data to create a Pedido_elementos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido_elementos we want to update
     *   }
     * })
     */
    upsert<T extends pedido_elementosUpsertArgs>(args: SelectSubset<T, pedido_elementosUpsertArgs<ExtArgs>>): Prisma__pedido_elementosClient<$Result.GetResult<Prisma.$pedido_elementosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pedido_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_elementosCountArgs} args - Arguments to filter Pedido_elementos to count.
     * @example
     * // Count the number of Pedido_elementos
     * const count = await prisma.pedido_elementos.count({
     *   where: {
     *     // ... the filter for the Pedido_elementos we want to count
     *   }
     * })
    **/
    count<T extends pedido_elementosCountArgs>(
      args?: Subset<T, pedido_elementosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pedido_elementosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pedido_elementosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pedido_elementosAggregateArgs>(args: Subset<T, Pedido_elementosAggregateArgs>): Prisma.PrismaPromise<GetPedido_elementosAggregateType<T>>

    /**
     * Group by Pedido_elementos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pedido_elementosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pedido_elementosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pedido_elementosGroupByArgs['orderBy'] }
        : { orderBy?: pedido_elementosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pedido_elementosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedido_elementosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pedido_elementos model
   */
  readonly fields: pedido_elementosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pedido_elementos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pedido_elementosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    elemento<T extends InventarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InventarioDefaultArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleado<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pedido_elementos model
   */
  interface pedido_elementosFieldRefs {
    readonly id_pedido: FieldRef<"pedido_elementos", 'Int'>
    readonly id_elemento: FieldRef<"pedido_elementos", 'Int'>
    readonly id_empleado: FieldRef<"pedido_elementos", 'Int'>
    readonly estado: FieldRef<"pedido_elementos", 'EstadoPedido'>
    readonly estadoEliminado: FieldRef<"pedido_elementos", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * pedido_elementos findUnique
   */
  export type pedido_elementosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * Filter, which pedido_elementos to fetch.
     */
    where: pedido_elementosWhereUniqueInput
  }

  /**
   * pedido_elementos findUniqueOrThrow
   */
  export type pedido_elementosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * Filter, which pedido_elementos to fetch.
     */
    where: pedido_elementosWhereUniqueInput
  }

  /**
   * pedido_elementos findFirst
   */
  export type pedido_elementosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * Filter, which pedido_elementos to fetch.
     */
    where?: pedido_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_elementos to fetch.
     */
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pedido_elementos.
     */
    cursor?: pedido_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_elementos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pedido_elementos.
     */
    distinct?: Pedido_elementosScalarFieldEnum | Pedido_elementosScalarFieldEnum[]
  }

  /**
   * pedido_elementos findFirstOrThrow
   */
  export type pedido_elementosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * Filter, which pedido_elementos to fetch.
     */
    where?: pedido_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_elementos to fetch.
     */
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pedido_elementos.
     */
    cursor?: pedido_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_elementos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pedido_elementos.
     */
    distinct?: Pedido_elementosScalarFieldEnum | Pedido_elementosScalarFieldEnum[]
  }

  /**
   * pedido_elementos findMany
   */
  export type pedido_elementosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * Filter, which pedido_elementos to fetch.
     */
    where?: pedido_elementosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pedido_elementos to fetch.
     */
    orderBy?: pedido_elementosOrderByWithRelationInput | pedido_elementosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pedido_elementos.
     */
    cursor?: pedido_elementosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pedido_elementos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pedido_elementos.
     */
    skip?: number
    distinct?: Pedido_elementosScalarFieldEnum | Pedido_elementosScalarFieldEnum[]
  }

  /**
   * pedido_elementos create
   */
  export type pedido_elementosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * The data needed to create a pedido_elementos.
     */
    data: XOR<pedido_elementosCreateInput, pedido_elementosUncheckedCreateInput>
  }

  /**
   * pedido_elementos createMany
   */
  export type pedido_elementosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pedido_elementos.
     */
    data: pedido_elementosCreateManyInput | pedido_elementosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pedido_elementos createManyAndReturn
   */
  export type pedido_elementosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * The data used to create many pedido_elementos.
     */
    data: pedido_elementosCreateManyInput | pedido_elementosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pedido_elementos update
   */
  export type pedido_elementosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * The data needed to update a pedido_elementos.
     */
    data: XOR<pedido_elementosUpdateInput, pedido_elementosUncheckedUpdateInput>
    /**
     * Choose, which pedido_elementos to update.
     */
    where: pedido_elementosWhereUniqueInput
  }

  /**
   * pedido_elementos updateMany
   */
  export type pedido_elementosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pedido_elementos.
     */
    data: XOR<pedido_elementosUpdateManyMutationInput, pedido_elementosUncheckedUpdateManyInput>
    /**
     * Filter which pedido_elementos to update
     */
    where?: pedido_elementosWhereInput
    /**
     * Limit how many pedido_elementos to update.
     */
    limit?: number
  }

  /**
   * pedido_elementos updateManyAndReturn
   */
  export type pedido_elementosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * The data used to update pedido_elementos.
     */
    data: XOR<pedido_elementosUpdateManyMutationInput, pedido_elementosUncheckedUpdateManyInput>
    /**
     * Filter which pedido_elementos to update
     */
    where?: pedido_elementosWhereInput
    /**
     * Limit how many pedido_elementos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pedido_elementos upsert
   */
  export type pedido_elementosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * The filter to search for the pedido_elementos to update in case it exists.
     */
    where: pedido_elementosWhereUniqueInput
    /**
     * In case the pedido_elementos found by the `where` argument doesn't exist, create a new pedido_elementos with this data.
     */
    create: XOR<pedido_elementosCreateInput, pedido_elementosUncheckedCreateInput>
    /**
     * In case the pedido_elementos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pedido_elementosUpdateInput, pedido_elementosUncheckedUpdateInput>
  }

  /**
   * pedido_elementos delete
   */
  export type pedido_elementosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
    /**
     * Filter which pedido_elementos to delete.
     */
    where: pedido_elementosWhereUniqueInput
  }

  /**
   * pedido_elementos deleteMany
   */
  export type pedido_elementosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pedido_elementos to delete
     */
    where?: pedido_elementosWhereInput
    /**
     * Limit how many pedido_elementos to delete.
     */
    limit?: number
  }

  /**
   * pedido_elementos without action
   */
  export type pedido_elementosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pedido_elementos
     */
    select?: pedido_elementosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pedido_elementos
     */
    omit?: pedido_elementosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pedido_elementosInclude<ExtArgs> | null
  }


  /**
   * Model ubicacion_empleado
   */

  export type AggregateUbicacion_empleado = {
    _count: Ubicacion_empleadoCountAggregateOutputType | null
    _avg: Ubicacion_empleadoAvgAggregateOutputType | null
    _sum: Ubicacion_empleadoSumAggregateOutputType | null
    _min: Ubicacion_empleadoMinAggregateOutputType | null
    _max: Ubicacion_empleadoMaxAggregateOutputType | null
  }

  export type Ubicacion_empleadoAvgAggregateOutputType = {
    id: number | null
    id_punto: number | null
    id_empleado: number | null
  }

  export type Ubicacion_empleadoSumAggregateOutputType = {
    id: number | null
    id_punto: number | null
    id_empleado: number | null
  }

  export type Ubicacion_empleadoMinAggregateOutputType = {
    id: number | null
    id_punto: number | null
    id_empleado: number | null
    estado: $Enums.EstadoTrabajador | null
    fecha: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Ubicacion_empleadoMaxAggregateOutputType = {
    id: number | null
    id_punto: number | null
    id_empleado: number | null
    estado: $Enums.EstadoTrabajador | null
    fecha: Date | null
    estadoEliminado: $Enums.EstadoEliminado | null
  }

  export type Ubicacion_empleadoCountAggregateOutputType = {
    id: number
    id_punto: number
    id_empleado: number
    estado: number
    fecha: number
    estadoEliminado: number
    _all: number
  }


  export type Ubicacion_empleadoAvgAggregateInputType = {
    id?: true
    id_punto?: true
    id_empleado?: true
  }

  export type Ubicacion_empleadoSumAggregateInputType = {
    id?: true
    id_punto?: true
    id_empleado?: true
  }

  export type Ubicacion_empleadoMinAggregateInputType = {
    id?: true
    id_punto?: true
    id_empleado?: true
    estado?: true
    fecha?: true
    estadoEliminado?: true
  }

  export type Ubicacion_empleadoMaxAggregateInputType = {
    id?: true
    id_punto?: true
    id_empleado?: true
    estado?: true
    fecha?: true
    estadoEliminado?: true
  }

  export type Ubicacion_empleadoCountAggregateInputType = {
    id?: true
    id_punto?: true
    id_empleado?: true
    estado?: true
    fecha?: true
    estadoEliminado?: true
    _all?: true
  }

  export type Ubicacion_empleadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ubicacion_empleado to aggregate.
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ubicacion_empleados to fetch.
     */
    orderBy?: ubicacion_empleadoOrderByWithRelationInput | ubicacion_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ubicacion_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ubicacion_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ubicacion_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ubicacion_empleados
    **/
    _count?: true | Ubicacion_empleadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ubicacion_empleadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ubicacion_empleadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ubicacion_empleadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ubicacion_empleadoMaxAggregateInputType
  }

  export type GetUbicacion_empleadoAggregateType<T extends Ubicacion_empleadoAggregateArgs> = {
        [P in keyof T & keyof AggregateUbicacion_empleado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUbicacion_empleado[P]>
      : GetScalarType<T[P], AggregateUbicacion_empleado[P]>
  }




  export type ubicacion_empleadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ubicacion_empleadoWhereInput
    orderBy?: ubicacion_empleadoOrderByWithAggregationInput | ubicacion_empleadoOrderByWithAggregationInput[]
    by: Ubicacion_empleadoScalarFieldEnum[] | Ubicacion_empleadoScalarFieldEnum
    having?: ubicacion_empleadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ubicacion_empleadoCountAggregateInputType | true
    _avg?: Ubicacion_empleadoAvgAggregateInputType
    _sum?: Ubicacion_empleadoSumAggregateInputType
    _min?: Ubicacion_empleadoMinAggregateInputType
    _max?: Ubicacion_empleadoMaxAggregateInputType
  }

  export type Ubicacion_empleadoGroupByOutputType = {
    id: number
    id_punto: number
    id_empleado: number
    estado: $Enums.EstadoTrabajador
    fecha: Date
    estadoEliminado: $Enums.EstadoEliminado
    _count: Ubicacion_empleadoCountAggregateOutputType | null
    _avg: Ubicacion_empleadoAvgAggregateOutputType | null
    _sum: Ubicacion_empleadoSumAggregateOutputType | null
    _min: Ubicacion_empleadoMinAggregateOutputType | null
    _max: Ubicacion_empleadoMaxAggregateOutputType | null
  }

  type GetUbicacion_empleadoGroupByPayload<T extends ubicacion_empleadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ubicacion_empleadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ubicacion_empleadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ubicacion_empleadoGroupByOutputType[P]>
            : GetScalarType<T[P], Ubicacion_empleadoGroupByOutputType[P]>
        }
      >
    >


  export type ubicacion_empleadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_punto?: boolean
    id_empleado?: boolean
    estado?: boolean
    fecha?: boolean
    estadoEliminado?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion_empleado"]>

  export type ubicacion_empleadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_punto?: boolean
    id_empleado?: boolean
    estado?: boolean
    fecha?: boolean
    estadoEliminado?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion_empleado"]>

  export type ubicacion_empleadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_punto?: boolean
    id_empleado?: boolean
    estado?: boolean
    fecha?: boolean
    estadoEliminado?: boolean
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion_empleado"]>

  export type ubicacion_empleadoSelectScalar = {
    id?: boolean
    id_punto?: boolean
    id_empleado?: boolean
    estado?: boolean
    fecha?: boolean
    estadoEliminado?: boolean
  }

  export type ubicacion_empleadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_punto" | "id_empleado" | "estado" | "fecha" | "estadoEliminado", ExtArgs["result"]["ubicacion_empleado"]>
  export type ubicacion_empleadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type ubicacion_empleadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }
  export type ubicacion_empleadoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    punto?: boolean | PuntoDefaultArgs<ExtArgs>
    empleado?: boolean | EmpleadoDefaultArgs<ExtArgs>
  }

  export type $ubicacion_empleadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ubicacion_empleado"
    objects: {
      punto: Prisma.$PuntoPayload<ExtArgs>
      empleado: Prisma.$EmpleadoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_punto: number
      id_empleado: number
      estado: $Enums.EstadoTrabajador
      fecha: Date
      estadoEliminado: $Enums.EstadoEliminado
    }, ExtArgs["result"]["ubicacion_empleado"]>
    composites: {}
  }

  type ubicacion_empleadoGetPayload<S extends boolean | null | undefined | ubicacion_empleadoDefaultArgs> = $Result.GetResult<Prisma.$ubicacion_empleadoPayload, S>

  type ubicacion_empleadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ubicacion_empleadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ubicacion_empleadoCountAggregateInputType | true
    }

  export interface ubicacion_empleadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ubicacion_empleado'], meta: { name: 'ubicacion_empleado' } }
    /**
     * Find zero or one Ubicacion_empleado that matches the filter.
     * @param {ubicacion_empleadoFindUniqueArgs} args - Arguments to find a Ubicacion_empleado
     * @example
     * // Get one Ubicacion_empleado
     * const ubicacion_empleado = await prisma.ubicacion_empleado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ubicacion_empleadoFindUniqueArgs>(args: SelectSubset<T, ubicacion_empleadoFindUniqueArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ubicacion_empleado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ubicacion_empleadoFindUniqueOrThrowArgs} args - Arguments to find a Ubicacion_empleado
     * @example
     * // Get one Ubicacion_empleado
     * const ubicacion_empleado = await prisma.ubicacion_empleado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ubicacion_empleadoFindUniqueOrThrowArgs>(args: SelectSubset<T, ubicacion_empleadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicacion_empleado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ubicacion_empleadoFindFirstArgs} args - Arguments to find a Ubicacion_empleado
     * @example
     * // Get one Ubicacion_empleado
     * const ubicacion_empleado = await prisma.ubicacion_empleado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ubicacion_empleadoFindFirstArgs>(args?: SelectSubset<T, ubicacion_empleadoFindFirstArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicacion_empleado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ubicacion_empleadoFindFirstOrThrowArgs} args - Arguments to find a Ubicacion_empleado
     * @example
     * // Get one Ubicacion_empleado
     * const ubicacion_empleado = await prisma.ubicacion_empleado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ubicacion_empleadoFindFirstOrThrowArgs>(args?: SelectSubset<T, ubicacion_empleadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ubicacion_empleados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ubicacion_empleadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ubicacion_empleados
     * const ubicacion_empleados = await prisma.ubicacion_empleado.findMany()
     * 
     * // Get first 10 Ubicacion_empleados
     * const ubicacion_empleados = await prisma.ubicacion_empleado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ubicacion_empleadoWithIdOnly = await prisma.ubicacion_empleado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ubicacion_empleadoFindManyArgs>(args?: SelectSubset<T, ubicacion_empleadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ubicacion_empleado.
     * @param {ubicacion_empleadoCreateArgs} args - Arguments to create a Ubicacion_empleado.
     * @example
     * // Create one Ubicacion_empleado
     * const Ubicacion_empleado = await prisma.ubicacion_empleado.create({
     *   data: {
     *     // ... data to create a Ubicacion_empleado
     *   }
     * })
     * 
     */
    create<T extends ubicacion_empleadoCreateArgs>(args: SelectSubset<T, ubicacion_empleadoCreateArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ubicacion_empleados.
     * @param {ubicacion_empleadoCreateManyArgs} args - Arguments to create many Ubicacion_empleados.
     * @example
     * // Create many Ubicacion_empleados
     * const ubicacion_empleado = await prisma.ubicacion_empleado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ubicacion_empleadoCreateManyArgs>(args?: SelectSubset<T, ubicacion_empleadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ubicacion_empleados and returns the data saved in the database.
     * @param {ubicacion_empleadoCreateManyAndReturnArgs} args - Arguments to create many Ubicacion_empleados.
     * @example
     * // Create many Ubicacion_empleados
     * const ubicacion_empleado = await prisma.ubicacion_empleado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ubicacion_empleados and only return the `id`
     * const ubicacion_empleadoWithIdOnly = await prisma.ubicacion_empleado.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ubicacion_empleadoCreateManyAndReturnArgs>(args?: SelectSubset<T, ubicacion_empleadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ubicacion_empleado.
     * @param {ubicacion_empleadoDeleteArgs} args - Arguments to delete one Ubicacion_empleado.
     * @example
     * // Delete one Ubicacion_empleado
     * const Ubicacion_empleado = await prisma.ubicacion_empleado.delete({
     *   where: {
     *     // ... filter to delete one Ubicacion_empleado
     *   }
     * })
     * 
     */
    delete<T extends ubicacion_empleadoDeleteArgs>(args: SelectSubset<T, ubicacion_empleadoDeleteArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ubicacion_empleado.
     * @param {ubicacion_empleadoUpdateArgs} args - Arguments to update one Ubicacion_empleado.
     * @example
     * // Update one Ubicacion_empleado
     * const ubicacion_empleado = await prisma.ubicacion_empleado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ubicacion_empleadoUpdateArgs>(args: SelectSubset<T, ubicacion_empleadoUpdateArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ubicacion_empleados.
     * @param {ubicacion_empleadoDeleteManyArgs} args - Arguments to filter Ubicacion_empleados to delete.
     * @example
     * // Delete a few Ubicacion_empleados
     * const { count } = await prisma.ubicacion_empleado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ubicacion_empleadoDeleteManyArgs>(args?: SelectSubset<T, ubicacion_empleadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicacion_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ubicacion_empleadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ubicacion_empleados
     * const ubicacion_empleado = await prisma.ubicacion_empleado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ubicacion_empleadoUpdateManyArgs>(args: SelectSubset<T, ubicacion_empleadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicacion_empleados and returns the data updated in the database.
     * @param {ubicacion_empleadoUpdateManyAndReturnArgs} args - Arguments to update many Ubicacion_empleados.
     * @example
     * // Update many Ubicacion_empleados
     * const ubicacion_empleado = await prisma.ubicacion_empleado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ubicacion_empleados and only return the `id`
     * const ubicacion_empleadoWithIdOnly = await prisma.ubicacion_empleado.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ubicacion_empleadoUpdateManyAndReturnArgs>(args: SelectSubset<T, ubicacion_empleadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ubicacion_empleado.
     * @param {ubicacion_empleadoUpsertArgs} args - Arguments to update or create a Ubicacion_empleado.
     * @example
     * // Update or create a Ubicacion_empleado
     * const ubicacion_empleado = await prisma.ubicacion_empleado.upsert({
     *   create: {
     *     // ... data to create a Ubicacion_empleado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ubicacion_empleado we want to update
     *   }
     * })
     */
    upsert<T extends ubicacion_empleadoUpsertArgs>(args: SelectSubset<T, ubicacion_empleadoUpsertArgs<ExtArgs>>): Prisma__ubicacion_empleadoClient<$Result.GetResult<Prisma.$ubicacion_empleadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ubicacion_empleados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ubicacion_empleadoCountArgs} args - Arguments to filter Ubicacion_empleados to count.
     * @example
     * // Count the number of Ubicacion_empleados
     * const count = await prisma.ubicacion_empleado.count({
     *   where: {
     *     // ... the filter for the Ubicacion_empleados we want to count
     *   }
     * })
    **/
    count<T extends ubicacion_empleadoCountArgs>(
      args?: Subset<T, ubicacion_empleadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ubicacion_empleadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ubicacion_empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ubicacion_empleadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ubicacion_empleadoAggregateArgs>(args: Subset<T, Ubicacion_empleadoAggregateArgs>): Prisma.PrismaPromise<GetUbicacion_empleadoAggregateType<T>>

    /**
     * Group by Ubicacion_empleado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ubicacion_empleadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ubicacion_empleadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ubicacion_empleadoGroupByArgs['orderBy'] }
        : { orderBy?: ubicacion_empleadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ubicacion_empleadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUbicacion_empleadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ubicacion_empleado model
   */
  readonly fields: ubicacion_empleadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ubicacion_empleado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ubicacion_empleadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    punto<T extends PuntoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PuntoDefaultArgs<ExtArgs>>): Prisma__PuntoClient<$Result.GetResult<Prisma.$PuntoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empleado<T extends EmpleadoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpleadoDefaultArgs<ExtArgs>>): Prisma__EmpleadoClient<$Result.GetResult<Prisma.$EmpleadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ubicacion_empleado model
   */
  interface ubicacion_empleadoFieldRefs {
    readonly id: FieldRef<"ubicacion_empleado", 'Int'>
    readonly id_punto: FieldRef<"ubicacion_empleado", 'Int'>
    readonly id_empleado: FieldRef<"ubicacion_empleado", 'Int'>
    readonly estado: FieldRef<"ubicacion_empleado", 'EstadoTrabajador'>
    readonly fecha: FieldRef<"ubicacion_empleado", 'DateTime'>
    readonly estadoEliminado: FieldRef<"ubicacion_empleado", 'EstadoEliminado'>
  }
    

  // Custom InputTypes
  /**
   * ubicacion_empleado findUnique
   */
  export type ubicacion_empleadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which ubicacion_empleado to fetch.
     */
    where: ubicacion_empleadoWhereUniqueInput
  }

  /**
   * ubicacion_empleado findUniqueOrThrow
   */
  export type ubicacion_empleadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which ubicacion_empleado to fetch.
     */
    where: ubicacion_empleadoWhereUniqueInput
  }

  /**
   * ubicacion_empleado findFirst
   */
  export type ubicacion_empleadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which ubicacion_empleado to fetch.
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ubicacion_empleados to fetch.
     */
    orderBy?: ubicacion_empleadoOrderByWithRelationInput | ubicacion_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ubicacion_empleados.
     */
    cursor?: ubicacion_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ubicacion_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ubicacion_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ubicacion_empleados.
     */
    distinct?: Ubicacion_empleadoScalarFieldEnum | Ubicacion_empleadoScalarFieldEnum[]
  }

  /**
   * ubicacion_empleado findFirstOrThrow
   */
  export type ubicacion_empleadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which ubicacion_empleado to fetch.
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ubicacion_empleados to fetch.
     */
    orderBy?: ubicacion_empleadoOrderByWithRelationInput | ubicacion_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ubicacion_empleados.
     */
    cursor?: ubicacion_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ubicacion_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ubicacion_empleados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ubicacion_empleados.
     */
    distinct?: Ubicacion_empleadoScalarFieldEnum | Ubicacion_empleadoScalarFieldEnum[]
  }

  /**
   * ubicacion_empleado findMany
   */
  export type ubicacion_empleadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * Filter, which ubicacion_empleados to fetch.
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ubicacion_empleados to fetch.
     */
    orderBy?: ubicacion_empleadoOrderByWithRelationInput | ubicacion_empleadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ubicacion_empleados.
     */
    cursor?: ubicacion_empleadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ubicacion_empleados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ubicacion_empleados.
     */
    skip?: number
    distinct?: Ubicacion_empleadoScalarFieldEnum | Ubicacion_empleadoScalarFieldEnum[]
  }

  /**
   * ubicacion_empleado create
   */
  export type ubicacion_empleadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * The data needed to create a ubicacion_empleado.
     */
    data: XOR<ubicacion_empleadoCreateInput, ubicacion_empleadoUncheckedCreateInput>
  }

  /**
   * ubicacion_empleado createMany
   */
  export type ubicacion_empleadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ubicacion_empleados.
     */
    data: ubicacion_empleadoCreateManyInput | ubicacion_empleadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ubicacion_empleado createManyAndReturn
   */
  export type ubicacion_empleadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * The data used to create many ubicacion_empleados.
     */
    data: ubicacion_empleadoCreateManyInput | ubicacion_empleadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ubicacion_empleado update
   */
  export type ubicacion_empleadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * The data needed to update a ubicacion_empleado.
     */
    data: XOR<ubicacion_empleadoUpdateInput, ubicacion_empleadoUncheckedUpdateInput>
    /**
     * Choose, which ubicacion_empleado to update.
     */
    where: ubicacion_empleadoWhereUniqueInput
  }

  /**
   * ubicacion_empleado updateMany
   */
  export type ubicacion_empleadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ubicacion_empleados.
     */
    data: XOR<ubicacion_empleadoUpdateManyMutationInput, ubicacion_empleadoUncheckedUpdateManyInput>
    /**
     * Filter which ubicacion_empleados to update
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * Limit how many ubicacion_empleados to update.
     */
    limit?: number
  }

  /**
   * ubicacion_empleado updateManyAndReturn
   */
  export type ubicacion_empleadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * The data used to update ubicacion_empleados.
     */
    data: XOR<ubicacion_empleadoUpdateManyMutationInput, ubicacion_empleadoUncheckedUpdateManyInput>
    /**
     * Filter which ubicacion_empleados to update
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * Limit how many ubicacion_empleados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ubicacion_empleado upsert
   */
  export type ubicacion_empleadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * The filter to search for the ubicacion_empleado to update in case it exists.
     */
    where: ubicacion_empleadoWhereUniqueInput
    /**
     * In case the ubicacion_empleado found by the `where` argument doesn't exist, create a new ubicacion_empleado with this data.
     */
    create: XOR<ubicacion_empleadoCreateInput, ubicacion_empleadoUncheckedCreateInput>
    /**
     * In case the ubicacion_empleado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ubicacion_empleadoUpdateInput, ubicacion_empleadoUncheckedUpdateInput>
  }

  /**
   * ubicacion_empleado delete
   */
  export type ubicacion_empleadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
    /**
     * Filter which ubicacion_empleado to delete.
     */
    where: ubicacion_empleadoWhereUniqueInput
  }

  /**
   * ubicacion_empleado deleteMany
   */
  export type ubicacion_empleadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ubicacion_empleados to delete
     */
    where?: ubicacion_empleadoWhereInput
    /**
     * Limit how many ubicacion_empleados to delete.
     */
    limit?: number
  }

  /**
   * ubicacion_empleado without action
   */
  export type ubicacion_empleadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ubicacion_empleado
     */
    select?: ubicacion_empleadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ubicacion_empleado
     */
    omit?: ubicacion_empleadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ubicacion_empleadoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const PuntoScalarFieldEnum: {
    id: 'id',
    lat: 'lat',
    lng: 'lng',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type PuntoScalarFieldEnum = (typeof PuntoScalarFieldEnum)[keyof typeof PuntoScalarFieldEnum]


  export const UbicacionScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    id_punto: 'id_punto',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type UbicacionScalarFieldEnum = (typeof UbicacionScalarFieldEnum)[keyof typeof UbicacionScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    codigo: 'codigo',
    descripcion: 'descripcion',
    tipo: 'tipo',
    tipo_unidad: 'tipo_unidad',
    venta: 'venta',
    tiempo: 'tiempo',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const PersonaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    ruc: 'ruc',
    mail: 'mail',
    telefono: 'telefono',
    proveedor: 'proveedor',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type PersonaScalarFieldEnum = (typeof PersonaScalarFieldEnum)[keyof typeof PersonaScalarFieldEnum]


  export const InventarioScalarFieldEnum: {
    id: 'id',
    precio: 'precio',
    descuento: 'descuento',
    cantidad: 'cantidad',
    id_categoria: 'id_categoria',
    id_ubicacion: 'id_ubicacion',
    id_proveedor: 'id_proveedor',
    estadoEliminado: 'estadoEliminado',
    estado: 'estado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type InventarioScalarFieldEnum = (typeof InventarioScalarFieldEnum)[keyof typeof InventarioScalarFieldEnum]


  export const PermisoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    estadoEliminado: 'estadoEliminado',
    categoria: 'categoria',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type PermisoScalarFieldEnum = (typeof PermisoScalarFieldEnum)[keyof typeof PermisoScalarFieldEnum]


  export const PosicionScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type PosicionScalarFieldEnum = (typeof PosicionScalarFieldEnum)[keyof typeof PosicionScalarFieldEnum]


  export const EmpleadoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    cedula: 'cedula',
    mail: 'mail',
    telefono: 'telefono',
    sueldo: 'sueldo',
    password: 'password',
    latActual: 'latActual',
    lngActual: 'lngActual',
    fecha_inicio: 'fecha_inicio',
    id_posicion: 'id_posicion',
    estado: 'estado',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type EmpleadoScalarFieldEnum = (typeof EmpleadoScalarFieldEnum)[keyof typeof EmpleadoScalarFieldEnum]


  export const MensajeScalarFieldEnum: {
    id: 'id',
    texto: 'texto',
    titulo: 'titulo',
    fecha: 'fecha',
    tipo: 'tipo',
    estadoEliminado: 'estadoEliminado',
    estado: 'estado',
    id_remitente: 'id_remitente',
    id_destinario: 'id_destinario',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type MensajeScalarFieldEnum = (typeof MensajeScalarFieldEnum)[keyof typeof MensajeScalarFieldEnum]


  export const ProformaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tiempo_esperado: 'tiempo_esperado',
    porcentaje_venta: 'porcentaje_venta',
    id_punto: 'id_punto',
    id_cliente: 'id_cliente',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type ProformaScalarFieldEnum = (typeof ProformaScalarFieldEnum)[keyof typeof ProformaScalarFieldEnum]


  export const ProcesoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    id_proforma: 'id_proforma',
    id_obra: 'id_obra',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type ProcesoScalarFieldEnum = (typeof ProcesoScalarFieldEnum)[keyof typeof ProcesoScalarFieldEnum]


  export const Proceso_empleadosScalarFieldEnum: {
    id: 'id',
    horas: 'horas',
    sueldo: 'sueldo',
    id_proceso: 'id_proceso',
    id_empleado: 'id_empleado',
    estadoEliminado: 'estadoEliminado'
  };

  export type Proceso_empleadosScalarFieldEnum = (typeof Proceso_empleadosScalarFieldEnum)[keyof typeof Proceso_empleadosScalarFieldEnum]


  export const Proceso_herramientasScalarFieldEnum: {
    id: 'id',
    horas: 'horas',
    descuento: 'descuento',
    precio: 'precio',
    id_proceso: 'id_proceso',
    id_herramienta: 'id_herramienta',
    estadoEliminado: 'estadoEliminado'
  };

  export type Proceso_herramientasScalarFieldEnum = (typeof Proceso_herramientasScalarFieldEnum)[keyof typeof Proceso_herramientasScalarFieldEnum]


  export const Proceso_inventarioScalarFieldEnum: {
    id: 'id',
    cantidad: 'cantidad',
    descuento: 'descuento',
    precio: 'precio',
    id_proceso: 'id_proceso',
    id_elemento: 'id_elemento',
    estadoEliminado: 'estadoEliminado'
  };

  export type Proceso_inventarioScalarFieldEnum = (typeof Proceso_inventarioScalarFieldEnum)[keyof typeof Proceso_inventarioScalarFieldEnum]


  export const ObraScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tiempo_esperado: 'tiempo_esperado',
    porcentaje_venta: 'porcentaje_venta',
    id_punto: 'id_punto',
    id_cliente: 'id_cliente',
    id_proforma: 'id_proforma',
    estado: 'estado',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type ObraScalarFieldEnum = (typeof ObraScalarFieldEnum)[keyof typeof ObraScalarFieldEnum]


  export const TransaccionScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    id_empleado: 'id_empleado',
    id_persona: 'id_persona',
    id_obra: 'id_obra',
    id_compra: 'id_compra',
    id_venta: 'id_venta',
    id_devolucion: 'id_devolucion',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type TransaccionScalarFieldEnum = (typeof TransaccionScalarFieldEnum)[keyof typeof TransaccionScalarFieldEnum]


  export const Transaccion_elementosScalarFieldEnum: {
    id: 'id',
    id_transaccion: 'id_transaccion',
    id_elementos: 'id_elementos',
    cantidad: 'cantidad',
    estadoEliminado: 'estadoEliminado'
  };

  export type Transaccion_elementosScalarFieldEnum = (typeof Transaccion_elementosScalarFieldEnum)[keyof typeof Transaccion_elementosScalarFieldEnum]


  export const CompraScalarFieldEnum: {
    id: 'id',
    fechaCredito: 'fechaCredito',
    id_transaccion: 'id_transaccion',
    estadoEliminado: 'estadoEliminado'
  };

  export type CompraScalarFieldEnum = (typeof CompraScalarFieldEnum)[keyof typeof CompraScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    porcentaje: 'porcentaje',
    id_transaccion: 'id_transaccion',
    estadoEliminado: 'estadoEliminado'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const DevolucionScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    id_transaccion: 'id_transaccion',
    estadoEliminado: 'estadoEliminado'
  };

  export type DevolucionScalarFieldEnum = (typeof DevolucionScalarFieldEnum)[keyof typeof DevolucionScalarFieldEnum]


  export const HorarioScalarFieldEnum: {
    id: 'id',
    hora_inicio: 'hora_inicio',
    hora_final: 'hora_final',
    estadoEliminado: 'estadoEliminado'
  };

  export type HorarioScalarFieldEnum = (typeof HorarioScalarFieldEnum)[keyof typeof HorarioScalarFieldEnum]


  export const DiaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    estadoEliminado: 'estadoEliminado'
  };

  export type DiaScalarFieldEnum = (typeof DiaScalarFieldEnum)[keyof typeof DiaScalarFieldEnum]


  export const PedidoScalarFieldEnum: {
    id: 'id',
    id_obra: 'id_obra',
    id_transaccion: 'id_transaccion',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type PedidoScalarFieldEnum = (typeof PedidoScalarFieldEnum)[keyof typeof PedidoScalarFieldEnum]


  export const TareaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    estado: 'estado',
    id_asignador: 'id_asignador',
    id_asignado: 'id_asignado',
    id_ubicacion: 'id_ubicacion',
    id_obra: 'id_obra',
    fecha_final: 'fecha_final',
    fecha_inicio: 'fecha_inicio',
    estadoEliminado: 'estadoEliminado',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    deletedBy: 'deletedBy',
    createdDate: 'createdDate',
    updatedDate: 'updatedDate',
    deletedDate: 'deletedDate'
  };

  export type TareaScalarFieldEnum = (typeof TareaScalarFieldEnum)[keyof typeof TareaScalarFieldEnum]


  export const Pedido_elementosScalarFieldEnum: {
    id_pedido: 'id_pedido',
    id_elemento: 'id_elemento',
    id_empleado: 'id_empleado',
    estado: 'estado',
    estadoEliminado: 'estadoEliminado'
  };

  export type Pedido_elementosScalarFieldEnum = (typeof Pedido_elementosScalarFieldEnum)[keyof typeof Pedido_elementosScalarFieldEnum]


  export const Ubicacion_empleadoScalarFieldEnum: {
    id: 'id',
    id_punto: 'id_punto',
    id_empleado: 'id_empleado',
    estado: 'estado',
    fecha: 'fecha',
    estadoEliminado: 'estadoEliminado'
  };

  export type Ubicacion_empleadoScalarFieldEnum = (typeof Ubicacion_empleadoScalarFieldEnum)[keyof typeof Ubicacion_empleadoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'EstadoEliminado'
   */
  export type EnumEstadoEliminadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoEliminado'>
    


  /**
   * Reference to a field of type 'EstadoEliminado[]'
   */
  export type ListEnumEstadoEliminadoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoEliminado[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'CategoriasInventario'
   */
  export type EnumCategoriasInventarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriasInventario'>
    


  /**
   * Reference to a field of type 'CategoriasInventario[]'
   */
  export type ListEnumCategoriasInventarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriasInventario[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'EstadoHerramientas'
   */
  export type EnumEstadoHerramientasFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoHerramientas'>
    


  /**
   * Reference to a field of type 'EstadoHerramientas[]'
   */
  export type ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoHerramientas[]'>
    


  /**
   * Reference to a field of type 'CategoriasPermiso'
   */
  export type EnumCategoriasPermisoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriasPermiso'>
    


  /**
   * Reference to a field of type 'CategoriasPermiso[]'
   */
  export type ListEnumCategoriasPermisoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriasPermiso[]'>
    


  /**
   * Reference to a field of type 'EstadoTrabajador'
   */
  export type EnumEstadoTrabajadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTrabajador'>
    


  /**
   * Reference to a field of type 'EstadoTrabajador[]'
   */
  export type ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTrabajador[]'>
    


  /**
   * Reference to a field of type 'CategoriaMensajes'
   */
  export type EnumCategoriaMensajesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaMensajes'>
    


  /**
   * Reference to a field of type 'CategoriaMensajes[]'
   */
  export type ListEnumCategoriaMensajesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaMensajes[]'>
    


  /**
   * Reference to a field of type 'EstadoMensaje'
   */
  export type EnumEstadoMensajeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoMensaje'>
    


  /**
   * Reference to a field of type 'EstadoMensaje[]'
   */
  export type ListEnumEstadoMensajeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoMensaje[]'>
    


  /**
   * Reference to a field of type 'EstadoObra'
   */
  export type EnumEstadoObraFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoObra'>
    


  /**
   * Reference to a field of type 'EstadoObra[]'
   */
  export type ListEnumEstadoObraFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoObra[]'>
    


  /**
   * Reference to a field of type 'DiasSemana'
   */
  export type EnumDiasSemanaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DiasSemana'>
    


  /**
   * Reference to a field of type 'DiasSemana[]'
   */
  export type ListEnumDiasSemanaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DiasSemana[]'>
    


  /**
   * Reference to a field of type 'EstadoTarea'
   */
  export type EnumEstadoTareaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTarea'>
    


  /**
   * Reference to a field of type 'EstadoTarea[]'
   */
  export type ListEnumEstadoTareaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTarea[]'>
    


  /**
   * Reference to a field of type 'EstadoPedido'
   */
  export type EnumEstadoPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPedido'>
    


  /**
   * Reference to a field of type 'EstadoPedido[]'
   */
  export type ListEnumEstadoPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPedido[]'>
    
  /**
   * Deep Input Types
   */


  export type PuntoWhereInput = {
    AND?: PuntoWhereInput | PuntoWhereInput[]
    OR?: PuntoWhereInput[]
    NOT?: PuntoWhereInput | PuntoWhereInput[]
    id?: IntFilter<"Punto"> | number
    lat?: DecimalFilter<"Punto"> | Decimal | DecimalJsLike | number | string
    lng?: DecimalFilter<"Punto"> | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Punto"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Punto"> | number
    updatedBy?: IntNullableFilter<"Punto"> | number | null
    deletedBy?: IntNullableFilter<"Punto"> | number | null
    createdDate?: DateTimeFilter<"Punto"> | Date | string
    updatedDate?: DateTimeFilter<"Punto"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Punto"> | Date | string | null
    ubicacion?: UbicacionListRelationFilter
    proforma?: ProformaListRelationFilter
    obra?: ObraListRelationFilter
    empleado?: Ubicacion_empleadoListRelationFilter
  }

  export type PuntoOrderByWithRelationInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    ubicacion?: UbicacionOrderByRelationAggregateInput
    proforma?: ProformaOrderByRelationAggregateInput
    obra?: ObraOrderByRelationAggregateInput
    empleado?: ubicacion_empleadoOrderByRelationAggregateInput
  }

  export type PuntoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    lat_lng?: PuntoLatLngCompoundUniqueInput
    AND?: PuntoWhereInput | PuntoWhereInput[]
    OR?: PuntoWhereInput[]
    NOT?: PuntoWhereInput | PuntoWhereInput[]
    lat?: DecimalFilter<"Punto"> | Decimal | DecimalJsLike | number | string
    lng?: DecimalFilter<"Punto"> | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Punto"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Punto"> | number
    updatedBy?: IntNullableFilter<"Punto"> | number | null
    deletedBy?: IntNullableFilter<"Punto"> | number | null
    createdDate?: DateTimeFilter<"Punto"> | Date | string
    updatedDate?: DateTimeFilter<"Punto"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Punto"> | Date | string | null
    ubicacion?: UbicacionListRelationFilter
    proforma?: ProformaListRelationFilter
    obra?: ObraListRelationFilter
    empleado?: Ubicacion_empleadoListRelationFilter
  }, "id" | "lat_lng">

  export type PuntoOrderByWithAggregationInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: PuntoCountOrderByAggregateInput
    _avg?: PuntoAvgOrderByAggregateInput
    _max?: PuntoMaxOrderByAggregateInput
    _min?: PuntoMinOrderByAggregateInput
    _sum?: PuntoSumOrderByAggregateInput
  }

  export type PuntoScalarWhereWithAggregatesInput = {
    AND?: PuntoScalarWhereWithAggregatesInput | PuntoScalarWhereWithAggregatesInput[]
    OR?: PuntoScalarWhereWithAggregatesInput[]
    NOT?: PuntoScalarWhereWithAggregatesInput | PuntoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Punto"> | number
    lat?: DecimalWithAggregatesFilter<"Punto"> | Decimal | DecimalJsLike | number | string
    lng?: DecimalWithAggregatesFilter<"Punto"> | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Punto"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Punto"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Punto"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Punto"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Punto"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Punto"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Punto"> | Date | string | null
  }

  export type UbicacionWhereInput = {
    AND?: UbicacionWhereInput | UbicacionWhereInput[]
    OR?: UbicacionWhereInput[]
    NOT?: UbicacionWhereInput | UbicacionWhereInput[]
    id?: IntFilter<"Ubicacion"> | number
    nombre?: StringFilter<"Ubicacion"> | string
    descripcion?: StringFilter<"Ubicacion"> | string
    id_punto?: IntFilter<"Ubicacion"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Ubicacion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Ubicacion"> | number
    updatedBy?: IntNullableFilter<"Ubicacion"> | number | null
    deletedBy?: IntNullableFilter<"Ubicacion"> | number | null
    createdDate?: DateTimeFilter<"Ubicacion"> | Date | string
    updatedDate?: DateTimeFilter<"Ubicacion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Ubicacion"> | Date | string | null
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    inventario?: InventarioListRelationFilter
    tarea?: TareaListRelationFilter
  }

  export type UbicacionOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_punto?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    punto?: PuntoOrderByWithRelationInput
    inventario?: InventarioOrderByRelationAggregateInput
    tarea?: TareaOrderByRelationAggregateInput
  }

  export type UbicacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UbicacionWhereInput | UbicacionWhereInput[]
    OR?: UbicacionWhereInput[]
    NOT?: UbicacionWhereInput | UbicacionWhereInput[]
    nombre?: StringFilter<"Ubicacion"> | string
    descripcion?: StringFilter<"Ubicacion"> | string
    id_punto?: IntFilter<"Ubicacion"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Ubicacion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Ubicacion"> | number
    updatedBy?: IntNullableFilter<"Ubicacion"> | number | null
    deletedBy?: IntNullableFilter<"Ubicacion"> | number | null
    createdDate?: DateTimeFilter<"Ubicacion"> | Date | string
    updatedDate?: DateTimeFilter<"Ubicacion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Ubicacion"> | Date | string | null
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    inventario?: InventarioListRelationFilter
    tarea?: TareaListRelationFilter
  }, "id">

  export type UbicacionOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_punto?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: UbicacionCountOrderByAggregateInput
    _avg?: UbicacionAvgOrderByAggregateInput
    _max?: UbicacionMaxOrderByAggregateInput
    _min?: UbicacionMinOrderByAggregateInput
    _sum?: UbicacionSumOrderByAggregateInput
  }

  export type UbicacionScalarWhereWithAggregatesInput = {
    AND?: UbicacionScalarWhereWithAggregatesInput | UbicacionScalarWhereWithAggregatesInput[]
    OR?: UbicacionScalarWhereWithAggregatesInput[]
    NOT?: UbicacionScalarWhereWithAggregatesInput | UbicacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Ubicacion"> | number
    nombre?: StringWithAggregatesFilter<"Ubicacion"> | string
    descripcion?: StringWithAggregatesFilter<"Ubicacion"> | string
    id_punto?: IntWithAggregatesFilter<"Ubicacion"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Ubicacion"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Ubicacion"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Ubicacion"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Ubicacion"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Ubicacion"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Ubicacion"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Ubicacion"> | Date | string | null
  }

  export type CategoriaWhereInput = {
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    id?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
    codigo?: StringFilter<"Categoria"> | string
    descripcion?: StringFilter<"Categoria"> | string
    tipo?: EnumCategoriasInventarioFilter<"Categoria"> | $Enums.CategoriasInventario
    tipo_unidad?: StringFilter<"Categoria"> | string
    venta?: BoolFilter<"Categoria"> | boolean
    tiempo?: DateTimeNullableFilter<"Categoria"> | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Categoria"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Categoria"> | number
    updatedBy?: IntNullableFilter<"Categoria"> | number | null
    deletedBy?: IntNullableFilter<"Categoria"> | number | null
    createdDate?: DateTimeFilter<"Categoria"> | Date | string
    updatedDate?: DateTimeFilter<"Categoria"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Categoria"> | Date | string | null
    inventario?: InventarioListRelationFilter
  }

  export type CategoriaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
    tipo?: SortOrder
    tipo_unidad?: SortOrder
    venta?: SortOrder
    tiempo?: SortOrderInput | SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    inventario?: InventarioOrderByRelationAggregateInput
  }

  export type CategoriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigo?: string
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    nombre?: StringFilter<"Categoria"> | string
    descripcion?: StringFilter<"Categoria"> | string
    tipo?: EnumCategoriasInventarioFilter<"Categoria"> | $Enums.CategoriasInventario
    tipo_unidad?: StringFilter<"Categoria"> | string
    venta?: BoolFilter<"Categoria"> | boolean
    tiempo?: DateTimeNullableFilter<"Categoria"> | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Categoria"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Categoria"> | number
    updatedBy?: IntNullableFilter<"Categoria"> | number | null
    deletedBy?: IntNullableFilter<"Categoria"> | number | null
    createdDate?: DateTimeFilter<"Categoria"> | Date | string
    updatedDate?: DateTimeFilter<"Categoria"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Categoria"> | Date | string | null
    inventario?: InventarioListRelationFilter
  }, "id" | "codigo">

  export type CategoriaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
    tipo?: SortOrder
    tipo_unidad?: SortOrder
    venta?: SortOrder
    tiempo?: SortOrderInput | SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: CategoriaCountOrderByAggregateInput
    _avg?: CategoriaAvgOrderByAggregateInput
    _max?: CategoriaMaxOrderByAggregateInput
    _min?: CategoriaMinOrderByAggregateInput
    _sum?: CategoriaSumOrderByAggregateInput
  }

  export type CategoriaScalarWhereWithAggregatesInput = {
    AND?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    OR?: CategoriaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categoria"> | number
    nombre?: StringWithAggregatesFilter<"Categoria"> | string
    codigo?: StringWithAggregatesFilter<"Categoria"> | string
    descripcion?: StringWithAggregatesFilter<"Categoria"> | string
    tipo?: EnumCategoriasInventarioWithAggregatesFilter<"Categoria"> | $Enums.CategoriasInventario
    tipo_unidad?: StringWithAggregatesFilter<"Categoria"> | string
    venta?: BoolWithAggregatesFilter<"Categoria"> | boolean
    tiempo?: DateTimeNullableWithAggregatesFilter<"Categoria"> | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Categoria"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Categoria"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Categoria"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Categoria"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Categoria"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Categoria"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Categoria"> | Date | string | null
  }

  export type PersonaWhereInput = {
    AND?: PersonaWhereInput | PersonaWhereInput[]
    OR?: PersonaWhereInput[]
    NOT?: PersonaWhereInput | PersonaWhereInput[]
    id?: IntFilter<"Persona"> | number
    nombre?: StringFilter<"Persona"> | string
    ruc?: StringFilter<"Persona"> | string
    mail?: StringFilter<"Persona"> | string
    telefono?: StringFilter<"Persona"> | string
    proveedor?: BoolFilter<"Persona"> | boolean
    estadoEliminado?: EnumEstadoEliminadoFilter<"Persona"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Persona"> | number
    updatedBy?: IntNullableFilter<"Persona"> | number | null
    deletedBy?: IntNullableFilter<"Persona"> | number | null
    createdDate?: DateTimeFilter<"Persona"> | Date | string
    updatedDate?: DateTimeFilter<"Persona"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Persona"> | Date | string | null
    inventario?: InventarioListRelationFilter
    proforma?: ProformaListRelationFilter
    obra?: ObraListRelationFilter
    transaccion?: TransaccionListRelationFilter
  }

  export type PersonaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    proveedor?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    inventario?: InventarioOrderByRelationAggregateInput
    proforma?: ProformaOrderByRelationAggregateInput
    obra?: ObraOrderByRelationAggregateInput
    transaccion?: TransaccionOrderByRelationAggregateInput
  }

  export type PersonaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    ruc?: string
    mail?: string
    AND?: PersonaWhereInput | PersonaWhereInput[]
    OR?: PersonaWhereInput[]
    NOT?: PersonaWhereInput | PersonaWhereInput[]
    nombre?: StringFilter<"Persona"> | string
    telefono?: StringFilter<"Persona"> | string
    proveedor?: BoolFilter<"Persona"> | boolean
    estadoEliminado?: EnumEstadoEliminadoFilter<"Persona"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Persona"> | number
    updatedBy?: IntNullableFilter<"Persona"> | number | null
    deletedBy?: IntNullableFilter<"Persona"> | number | null
    createdDate?: DateTimeFilter<"Persona"> | Date | string
    updatedDate?: DateTimeFilter<"Persona"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Persona"> | Date | string | null
    inventario?: InventarioListRelationFilter
    proforma?: ProformaListRelationFilter
    obra?: ObraListRelationFilter
    transaccion?: TransaccionListRelationFilter
  }, "id" | "ruc" | "mail">

  export type PersonaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    proveedor?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: PersonaCountOrderByAggregateInput
    _avg?: PersonaAvgOrderByAggregateInput
    _max?: PersonaMaxOrderByAggregateInput
    _min?: PersonaMinOrderByAggregateInput
    _sum?: PersonaSumOrderByAggregateInput
  }

  export type PersonaScalarWhereWithAggregatesInput = {
    AND?: PersonaScalarWhereWithAggregatesInput | PersonaScalarWhereWithAggregatesInput[]
    OR?: PersonaScalarWhereWithAggregatesInput[]
    NOT?: PersonaScalarWhereWithAggregatesInput | PersonaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Persona"> | number
    nombre?: StringWithAggregatesFilter<"Persona"> | string
    ruc?: StringWithAggregatesFilter<"Persona"> | string
    mail?: StringWithAggregatesFilter<"Persona"> | string
    telefono?: StringWithAggregatesFilter<"Persona"> | string
    proveedor?: BoolWithAggregatesFilter<"Persona"> | boolean
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Persona"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Persona"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Persona"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Persona"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Persona"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Persona"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Persona"> | Date | string | null
  }

  export type InventarioWhereInput = {
    AND?: InventarioWhereInput | InventarioWhereInput[]
    OR?: InventarioWhereInput[]
    NOT?: InventarioWhereInput | InventarioWhereInput[]
    id?: IntFilter<"Inventario"> | number
    precio?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    cantidad?: FloatNullableFilter<"Inventario"> | number | null
    id_categoria?: IntFilter<"Inventario"> | number
    id_ubicacion?: IntFilter<"Inventario"> | number
    id_proveedor?: IntFilter<"Inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Inventario"> | $Enums.EstadoEliminado
    estado?: EnumEstadoHerramientasNullableFilter<"Inventario"> | $Enums.EstadoHerramientas | null
    createdBy?: IntFilter<"Inventario"> | number
    updatedBy?: IntNullableFilter<"Inventario"> | number | null
    deletedBy?: IntNullableFilter<"Inventario"> | number | null
    createdDate?: DateTimeFilter<"Inventario"> | Date | string
    updatedDate?: DateTimeFilter<"Inventario"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Inventario"> | Date | string | null
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
    ubicacion?: XOR<UbicacionScalarRelationFilter, UbicacionWhereInput>
    proveedor?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    transaccion?: Transaccion_elementosListRelationFilter
    pedido?: Pedido_elementosListRelationFilter
    proceso_herramientas?: Proceso_herramientasListRelationFilter
    proceso_inventario?: Proceso_inventarioListRelationFilter
  }

  export type InventarioOrderByWithRelationInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrderInput | SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    categoria?: CategoriaOrderByWithRelationInput
    ubicacion?: UbicacionOrderByWithRelationInput
    proveedor?: PersonaOrderByWithRelationInput
    transaccion?: transaccion_elementosOrderByRelationAggregateInput
    pedido?: pedido_elementosOrderByRelationAggregateInput
    proceso_herramientas?: proceso_herramientasOrderByRelationAggregateInput
    proceso_inventario?: proceso_inventarioOrderByRelationAggregateInput
  }

  export type InventarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: InventarioWhereInput | InventarioWhereInput[]
    OR?: InventarioWhereInput[]
    NOT?: InventarioWhereInput | InventarioWhereInput[]
    precio?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    cantidad?: FloatNullableFilter<"Inventario"> | number | null
    id_categoria?: IntFilter<"Inventario"> | number
    id_ubicacion?: IntFilter<"Inventario"> | number
    id_proveedor?: IntFilter<"Inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Inventario"> | $Enums.EstadoEliminado
    estado?: EnumEstadoHerramientasNullableFilter<"Inventario"> | $Enums.EstadoHerramientas | null
    createdBy?: IntFilter<"Inventario"> | number
    updatedBy?: IntNullableFilter<"Inventario"> | number | null
    deletedBy?: IntNullableFilter<"Inventario"> | number | null
    createdDate?: DateTimeFilter<"Inventario"> | Date | string
    updatedDate?: DateTimeFilter<"Inventario"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Inventario"> | Date | string | null
    categoria?: XOR<CategoriaScalarRelationFilter, CategoriaWhereInput>
    ubicacion?: XOR<UbicacionScalarRelationFilter, UbicacionWhereInput>
    proveedor?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    transaccion?: Transaccion_elementosListRelationFilter
    pedido?: Pedido_elementosListRelationFilter
    proceso_herramientas?: Proceso_herramientasListRelationFilter
    proceso_inventario?: Proceso_inventarioListRelationFilter
  }, "id">

  export type InventarioOrderByWithAggregationInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrderInput | SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: InventarioCountOrderByAggregateInput
    _avg?: InventarioAvgOrderByAggregateInput
    _max?: InventarioMaxOrderByAggregateInput
    _min?: InventarioMinOrderByAggregateInput
    _sum?: InventarioSumOrderByAggregateInput
  }

  export type InventarioScalarWhereWithAggregatesInput = {
    AND?: InventarioScalarWhereWithAggregatesInput | InventarioScalarWhereWithAggregatesInput[]
    OR?: InventarioScalarWhereWithAggregatesInput[]
    NOT?: InventarioScalarWhereWithAggregatesInput | InventarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Inventario"> | number
    precio?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    descuento?: DecimalWithAggregatesFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    cantidad?: FloatNullableWithAggregatesFilter<"Inventario"> | number | null
    id_categoria?: IntWithAggregatesFilter<"Inventario"> | number
    id_ubicacion?: IntWithAggregatesFilter<"Inventario"> | number
    id_proveedor?: IntWithAggregatesFilter<"Inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Inventario"> | $Enums.EstadoEliminado
    estado?: EnumEstadoHerramientasNullableWithAggregatesFilter<"Inventario"> | $Enums.EstadoHerramientas | null
    createdBy?: IntWithAggregatesFilter<"Inventario"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Inventario"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Inventario"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Inventario"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Inventario"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Inventario"> | Date | string | null
  }

  export type PermisoWhereInput = {
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    id?: IntFilter<"Permiso"> | number
    nombre?: StringFilter<"Permiso"> | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Permiso"> | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFilter<"Permiso"> | $Enums.CategoriasPermiso
    createdBy?: IntFilter<"Permiso"> | number
    updatedBy?: IntNullableFilter<"Permiso"> | number | null
    deletedBy?: IntNullableFilter<"Permiso"> | number | null
    createdDate?: DateTimeFilter<"Permiso"> | Date | string
    updatedDate?: DateTimeFilter<"Permiso"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Permiso"> | Date | string | null
    posiciones?: PosicionListRelationFilter
  }

  export type PermisoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    categoria?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    posiciones?: PosicionOrderByRelationAggregateInput
  }

  export type PermisoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    estadoEliminado?: EnumEstadoEliminadoFilter<"Permiso"> | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFilter<"Permiso"> | $Enums.CategoriasPermiso
    createdBy?: IntFilter<"Permiso"> | number
    updatedBy?: IntNullableFilter<"Permiso"> | number | null
    deletedBy?: IntNullableFilter<"Permiso"> | number | null
    createdDate?: DateTimeFilter<"Permiso"> | Date | string
    updatedDate?: DateTimeFilter<"Permiso"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Permiso"> | Date | string | null
    posiciones?: PosicionListRelationFilter
  }, "id" | "nombre">

  export type PermisoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    categoria?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: PermisoCountOrderByAggregateInput
    _avg?: PermisoAvgOrderByAggregateInput
    _max?: PermisoMaxOrderByAggregateInput
    _min?: PermisoMinOrderByAggregateInput
    _sum?: PermisoSumOrderByAggregateInput
  }

  export type PermisoScalarWhereWithAggregatesInput = {
    AND?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    OR?: PermisoScalarWhereWithAggregatesInput[]
    NOT?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permiso"> | number
    nombre?: StringWithAggregatesFilter<"Permiso"> | string
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Permiso"> | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoWithAggregatesFilter<"Permiso"> | $Enums.CategoriasPermiso
    createdBy?: IntWithAggregatesFilter<"Permiso"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Permiso"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Permiso"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Permiso"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Permiso"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Permiso"> | Date | string | null
  }

  export type PosicionWhereInput = {
    AND?: PosicionWhereInput | PosicionWhereInput[]
    OR?: PosicionWhereInput[]
    NOT?: PosicionWhereInput | PosicionWhereInput[]
    id?: IntFilter<"Posicion"> | number
    nombre?: StringFilter<"Posicion"> | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Posicion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Posicion"> | number
    updatedBy?: IntNullableFilter<"Posicion"> | number | null
    deletedBy?: IntNullableFilter<"Posicion"> | number | null
    createdDate?: DateTimeFilter<"Posicion"> | Date | string
    updatedDate?: DateTimeFilter<"Posicion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Posicion"> | Date | string | null
    permisos?: PermisoListRelationFilter
    empleado?: EmpleadoListRelationFilter
  }

  export type PosicionOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    permisos?: PermisoOrderByRelationAggregateInput
    empleado?: EmpleadoOrderByRelationAggregateInput
  }

  export type PosicionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: PosicionWhereInput | PosicionWhereInput[]
    OR?: PosicionWhereInput[]
    NOT?: PosicionWhereInput | PosicionWhereInput[]
    estadoEliminado?: EnumEstadoEliminadoFilter<"Posicion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Posicion"> | number
    updatedBy?: IntNullableFilter<"Posicion"> | number | null
    deletedBy?: IntNullableFilter<"Posicion"> | number | null
    createdDate?: DateTimeFilter<"Posicion"> | Date | string
    updatedDate?: DateTimeFilter<"Posicion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Posicion"> | Date | string | null
    permisos?: PermisoListRelationFilter
    empleado?: EmpleadoListRelationFilter
  }, "id" | "nombre">

  export type PosicionOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: PosicionCountOrderByAggregateInput
    _avg?: PosicionAvgOrderByAggregateInput
    _max?: PosicionMaxOrderByAggregateInput
    _min?: PosicionMinOrderByAggregateInput
    _sum?: PosicionSumOrderByAggregateInput
  }

  export type PosicionScalarWhereWithAggregatesInput = {
    AND?: PosicionScalarWhereWithAggregatesInput | PosicionScalarWhereWithAggregatesInput[]
    OR?: PosicionScalarWhereWithAggregatesInput[]
    NOT?: PosicionScalarWhereWithAggregatesInput | PosicionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Posicion"> | number
    nombre?: StringWithAggregatesFilter<"Posicion"> | string
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Posicion"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Posicion"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Posicion"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Posicion"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Posicion"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Posicion"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Posicion"> | Date | string | null
  }

  export type EmpleadoWhereInput = {
    AND?: EmpleadoWhereInput | EmpleadoWhereInput[]
    OR?: EmpleadoWhereInput[]
    NOT?: EmpleadoWhereInput | EmpleadoWhereInput[]
    id?: IntFilter<"Empleado"> | number
    nombre?: StringFilter<"Empleado"> | string
    cedula?: StringFilter<"Empleado"> | string
    mail?: StringFilter<"Empleado"> | string
    telefono?: StringFilter<"Empleado"> | string
    sueldo?: DecimalFilter<"Empleado"> | Decimal | DecimalJsLike | number | string
    password?: StringFilter<"Empleado"> | string
    latActual?: DecimalNullableFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    lngActual?: DecimalNullableFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFilter<"Empleado"> | Date | string
    id_posicion?: IntFilter<"Empleado"> | number
    estado?: EnumEstadoTrabajadorFilter<"Empleado"> | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFilter<"Empleado"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Empleado"> | number
    updatedBy?: IntNullableFilter<"Empleado"> | number | null
    deletedBy?: IntNullableFilter<"Empleado"> | number | null
    createdDate?: DateTimeFilter<"Empleado"> | Date | string
    updatedDate?: DateTimeFilter<"Empleado"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Empleado"> | Date | string | null
    posicion?: XOR<PosicionScalarRelationFilter, PosicionWhereInput>
    transaccion?: TransaccionListRelationFilter
    pedido?: Pedido_elementosListRelationFilter
    proceso?: Proceso_empleadosListRelationFilter
    ubicacion?: Ubicacion_empleadoListRelationFilter
    mensajesEnviados?: MensajeListRelationFilter
    mensajesRecibidos?: MensajeListRelationFilter
    tareasAsignadas?: TareaListRelationFilter
    tareasRecibidas?: TareaListRelationFilter
  }

  export type EmpleadoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    sueldo?: SortOrder
    password?: SortOrder
    latActual?: SortOrderInput | SortOrder
    lngActual?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    id_posicion?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    posicion?: PosicionOrderByWithRelationInput
    transaccion?: TransaccionOrderByRelationAggregateInput
    pedido?: pedido_elementosOrderByRelationAggregateInput
    proceso?: proceso_empleadosOrderByRelationAggregateInput
    ubicacion?: ubicacion_empleadoOrderByRelationAggregateInput
    mensajesEnviados?: MensajeOrderByRelationAggregateInput
    mensajesRecibidos?: MensajeOrderByRelationAggregateInput
    tareasAsignadas?: TareaOrderByRelationAggregateInput
    tareasRecibidas?: TareaOrderByRelationAggregateInput
  }

  export type EmpleadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cedula?: string
    mail?: string
    AND?: EmpleadoWhereInput | EmpleadoWhereInput[]
    OR?: EmpleadoWhereInput[]
    NOT?: EmpleadoWhereInput | EmpleadoWhereInput[]
    nombre?: StringFilter<"Empleado"> | string
    telefono?: StringFilter<"Empleado"> | string
    sueldo?: DecimalFilter<"Empleado"> | Decimal | DecimalJsLike | number | string
    password?: StringFilter<"Empleado"> | string
    latActual?: DecimalNullableFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    lngActual?: DecimalNullableFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFilter<"Empleado"> | Date | string
    id_posicion?: IntFilter<"Empleado"> | number
    estado?: EnumEstadoTrabajadorFilter<"Empleado"> | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFilter<"Empleado"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Empleado"> | number
    updatedBy?: IntNullableFilter<"Empleado"> | number | null
    deletedBy?: IntNullableFilter<"Empleado"> | number | null
    createdDate?: DateTimeFilter<"Empleado"> | Date | string
    updatedDate?: DateTimeFilter<"Empleado"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Empleado"> | Date | string | null
    posicion?: XOR<PosicionScalarRelationFilter, PosicionWhereInput>
    transaccion?: TransaccionListRelationFilter
    pedido?: Pedido_elementosListRelationFilter
    proceso?: Proceso_empleadosListRelationFilter
    ubicacion?: Ubicacion_empleadoListRelationFilter
    mensajesEnviados?: MensajeListRelationFilter
    mensajesRecibidos?: MensajeListRelationFilter
    tareasAsignadas?: TareaListRelationFilter
    tareasRecibidas?: TareaListRelationFilter
  }, "id" | "cedula" | "mail">

  export type EmpleadoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    sueldo?: SortOrder
    password?: SortOrder
    latActual?: SortOrderInput | SortOrder
    lngActual?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    id_posicion?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: EmpleadoCountOrderByAggregateInput
    _avg?: EmpleadoAvgOrderByAggregateInput
    _max?: EmpleadoMaxOrderByAggregateInput
    _min?: EmpleadoMinOrderByAggregateInput
    _sum?: EmpleadoSumOrderByAggregateInput
  }

  export type EmpleadoScalarWhereWithAggregatesInput = {
    AND?: EmpleadoScalarWhereWithAggregatesInput | EmpleadoScalarWhereWithAggregatesInput[]
    OR?: EmpleadoScalarWhereWithAggregatesInput[]
    NOT?: EmpleadoScalarWhereWithAggregatesInput | EmpleadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Empleado"> | number
    nombre?: StringWithAggregatesFilter<"Empleado"> | string
    cedula?: StringWithAggregatesFilter<"Empleado"> | string
    mail?: StringWithAggregatesFilter<"Empleado"> | string
    telefono?: StringWithAggregatesFilter<"Empleado"> | string
    sueldo?: DecimalWithAggregatesFilter<"Empleado"> | Decimal | DecimalJsLike | number | string
    password?: StringWithAggregatesFilter<"Empleado"> | string
    latActual?: DecimalNullableWithAggregatesFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    lngActual?: DecimalNullableWithAggregatesFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeWithAggregatesFilter<"Empleado"> | Date | string
    id_posicion?: IntWithAggregatesFilter<"Empleado"> | number
    estado?: EnumEstadoTrabajadorWithAggregatesFilter<"Empleado"> | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Empleado"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Empleado"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Empleado"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Empleado"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Empleado"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Empleado"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Empleado"> | Date | string | null
  }

  export type MensajeWhereInput = {
    AND?: MensajeWhereInput | MensajeWhereInput[]
    OR?: MensajeWhereInput[]
    NOT?: MensajeWhereInput | MensajeWhereInput[]
    id?: IntFilter<"Mensaje"> | number
    texto?: StringFilter<"Mensaje"> | string
    titulo?: StringFilter<"Mensaje"> | string
    fecha?: DateTimeFilter<"Mensaje"> | Date | string
    tipo?: EnumCategoriaMensajesFilter<"Mensaje"> | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFilter<"Mensaje"> | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFilter<"Mensaje"> | $Enums.EstadoMensaje
    id_remitente?: IntFilter<"Mensaje"> | number
    id_destinario?: IntFilter<"Mensaje"> | number
    createdBy?: IntFilter<"Mensaje"> | number
    updatedBy?: IntNullableFilter<"Mensaje"> | number | null
    deletedBy?: IntNullableFilter<"Mensaje"> | number | null
    createdDate?: DateTimeFilter<"Mensaje"> | Date | string
    updatedDate?: DateTimeFilter<"Mensaje"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Mensaje"> | Date | string | null
    remitente?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    destinatario?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
  }

  export type MensajeOrderByWithRelationInput = {
    id?: SortOrder
    texto?: SortOrder
    titulo?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    remitente?: EmpleadoOrderByWithRelationInput
    destinatario?: EmpleadoOrderByWithRelationInput
  }

  export type MensajeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MensajeWhereInput | MensajeWhereInput[]
    OR?: MensajeWhereInput[]
    NOT?: MensajeWhereInput | MensajeWhereInput[]
    texto?: StringFilter<"Mensaje"> | string
    titulo?: StringFilter<"Mensaje"> | string
    fecha?: DateTimeFilter<"Mensaje"> | Date | string
    tipo?: EnumCategoriaMensajesFilter<"Mensaje"> | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFilter<"Mensaje"> | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFilter<"Mensaje"> | $Enums.EstadoMensaje
    id_remitente?: IntFilter<"Mensaje"> | number
    id_destinario?: IntFilter<"Mensaje"> | number
    createdBy?: IntFilter<"Mensaje"> | number
    updatedBy?: IntNullableFilter<"Mensaje"> | number | null
    deletedBy?: IntNullableFilter<"Mensaje"> | number | null
    createdDate?: DateTimeFilter<"Mensaje"> | Date | string
    updatedDate?: DateTimeFilter<"Mensaje"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Mensaje"> | Date | string | null
    remitente?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    destinatario?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
  }, "id">

  export type MensajeOrderByWithAggregationInput = {
    id?: SortOrder
    texto?: SortOrder
    titulo?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: MensajeCountOrderByAggregateInput
    _avg?: MensajeAvgOrderByAggregateInput
    _max?: MensajeMaxOrderByAggregateInput
    _min?: MensajeMinOrderByAggregateInput
    _sum?: MensajeSumOrderByAggregateInput
  }

  export type MensajeScalarWhereWithAggregatesInput = {
    AND?: MensajeScalarWhereWithAggregatesInput | MensajeScalarWhereWithAggregatesInput[]
    OR?: MensajeScalarWhereWithAggregatesInput[]
    NOT?: MensajeScalarWhereWithAggregatesInput | MensajeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mensaje"> | number
    texto?: StringWithAggregatesFilter<"Mensaje"> | string
    titulo?: StringWithAggregatesFilter<"Mensaje"> | string
    fecha?: DateTimeWithAggregatesFilter<"Mensaje"> | Date | string
    tipo?: EnumCategoriaMensajesWithAggregatesFilter<"Mensaje"> | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Mensaje"> | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeWithAggregatesFilter<"Mensaje"> | $Enums.EstadoMensaje
    id_remitente?: IntWithAggregatesFilter<"Mensaje"> | number
    id_destinario?: IntWithAggregatesFilter<"Mensaje"> | number
    createdBy?: IntWithAggregatesFilter<"Mensaje"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Mensaje"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Mensaje"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Mensaje"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Mensaje"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Mensaje"> | Date | string | null
  }

  export type ProformaWhereInput = {
    AND?: ProformaWhereInput | ProformaWhereInput[]
    OR?: ProformaWhereInput[]
    NOT?: ProformaWhereInput | ProformaWhereInput[]
    id?: IntFilter<"Proforma"> | number
    nombre?: StringFilter<"Proforma"> | string
    tiempo_esperado?: DateTimeFilter<"Proforma"> | Date | string
    porcentaje_venta?: DecimalFilter<"Proforma"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntFilter<"Proforma"> | number
    id_cliente?: IntFilter<"Proforma"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Proforma"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Proforma"> | number
    updatedBy?: IntNullableFilter<"Proforma"> | number | null
    deletedBy?: IntNullableFilter<"Proforma"> | number | null
    createdDate?: DateTimeFilter<"Proforma"> | Date | string
    updatedDate?: DateTimeFilter<"Proforma"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Proforma"> | Date | string | null
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
    procesos?: ProcesoListRelationFilter
  }

  export type ProformaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    punto?: PuntoOrderByWithRelationInput
    cliente?: PersonaOrderByWithRelationInput
    obra?: ObraOrderByWithRelationInput
    procesos?: ProcesoOrderByRelationAggregateInput
  }

  export type ProformaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProformaWhereInput | ProformaWhereInput[]
    OR?: ProformaWhereInput[]
    NOT?: ProformaWhereInput | ProformaWhereInput[]
    nombre?: StringFilter<"Proforma"> | string
    tiempo_esperado?: DateTimeFilter<"Proforma"> | Date | string
    porcentaje_venta?: DecimalFilter<"Proforma"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntFilter<"Proforma"> | number
    id_cliente?: IntFilter<"Proforma"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Proforma"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Proforma"> | number
    updatedBy?: IntNullableFilter<"Proforma"> | number | null
    deletedBy?: IntNullableFilter<"Proforma"> | number | null
    createdDate?: DateTimeFilter<"Proforma"> | Date | string
    updatedDate?: DateTimeFilter<"Proforma"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Proforma"> | Date | string | null
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
    procesos?: ProcesoListRelationFilter
  }, "id">

  export type ProformaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: ProformaCountOrderByAggregateInput
    _avg?: ProformaAvgOrderByAggregateInput
    _max?: ProformaMaxOrderByAggregateInput
    _min?: ProformaMinOrderByAggregateInput
    _sum?: ProformaSumOrderByAggregateInput
  }

  export type ProformaScalarWhereWithAggregatesInput = {
    AND?: ProformaScalarWhereWithAggregatesInput | ProformaScalarWhereWithAggregatesInput[]
    OR?: ProformaScalarWhereWithAggregatesInput[]
    NOT?: ProformaScalarWhereWithAggregatesInput | ProformaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Proforma"> | number
    nombre?: StringWithAggregatesFilter<"Proforma"> | string
    tiempo_esperado?: DateTimeWithAggregatesFilter<"Proforma"> | Date | string
    porcentaje_venta?: DecimalWithAggregatesFilter<"Proforma"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntWithAggregatesFilter<"Proforma"> | number
    id_cliente?: IntWithAggregatesFilter<"Proforma"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Proforma"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Proforma"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Proforma"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Proforma"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Proforma"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Proforma"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Proforma"> | Date | string | null
  }

  export type ProcesoWhereInput = {
    AND?: ProcesoWhereInput | ProcesoWhereInput[]
    OR?: ProcesoWhereInput[]
    NOT?: ProcesoWhereInput | ProcesoWhereInput[]
    id?: IntFilter<"Proceso"> | number
    nombre?: StringFilter<"Proceso"> | string
    descripcion?: StringFilter<"Proceso"> | string
    id_proforma?: IntNullableFilter<"Proceso"> | number | null
    id_obra?: IntNullableFilter<"Proceso"> | number | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Proceso"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Proceso"> | number
    updatedBy?: IntNullableFilter<"Proceso"> | number | null
    deletedBy?: IntNullableFilter<"Proceso"> | number | null
    createdDate?: DateTimeFilter<"Proceso"> | Date | string
    updatedDate?: DateTimeFilter<"Proceso"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Proceso"> | Date | string | null
    empleados?: Proceso_empleadosListRelationFilter
    herramientas?: Proceso_herramientasListRelationFilter
    inventario?: Proceso_inventarioListRelationFilter
    proforma?: XOR<ProformaNullableScalarRelationFilter, ProformaWhereInput> | null
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
  }

  export type ProcesoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_proforma?: SortOrderInput | SortOrder
    id_obra?: SortOrderInput | SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    empleados?: proceso_empleadosOrderByRelationAggregateInput
    herramientas?: proceso_herramientasOrderByRelationAggregateInput
    inventario?: proceso_inventarioOrderByRelationAggregateInput
    proforma?: ProformaOrderByWithRelationInput
    obra?: ObraOrderByWithRelationInput
  }

  export type ProcesoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProcesoWhereInput | ProcesoWhereInput[]
    OR?: ProcesoWhereInput[]
    NOT?: ProcesoWhereInput | ProcesoWhereInput[]
    nombre?: StringFilter<"Proceso"> | string
    descripcion?: StringFilter<"Proceso"> | string
    id_proforma?: IntNullableFilter<"Proceso"> | number | null
    id_obra?: IntNullableFilter<"Proceso"> | number | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Proceso"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Proceso"> | number
    updatedBy?: IntNullableFilter<"Proceso"> | number | null
    deletedBy?: IntNullableFilter<"Proceso"> | number | null
    createdDate?: DateTimeFilter<"Proceso"> | Date | string
    updatedDate?: DateTimeFilter<"Proceso"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Proceso"> | Date | string | null
    empleados?: Proceso_empleadosListRelationFilter
    herramientas?: Proceso_herramientasListRelationFilter
    inventario?: Proceso_inventarioListRelationFilter
    proforma?: XOR<ProformaNullableScalarRelationFilter, ProformaWhereInput> | null
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
  }, "id">

  export type ProcesoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_proforma?: SortOrderInput | SortOrder
    id_obra?: SortOrderInput | SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: ProcesoCountOrderByAggregateInput
    _avg?: ProcesoAvgOrderByAggregateInput
    _max?: ProcesoMaxOrderByAggregateInput
    _min?: ProcesoMinOrderByAggregateInput
    _sum?: ProcesoSumOrderByAggregateInput
  }

  export type ProcesoScalarWhereWithAggregatesInput = {
    AND?: ProcesoScalarWhereWithAggregatesInput | ProcesoScalarWhereWithAggregatesInput[]
    OR?: ProcesoScalarWhereWithAggregatesInput[]
    NOT?: ProcesoScalarWhereWithAggregatesInput | ProcesoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Proceso"> | number
    nombre?: StringWithAggregatesFilter<"Proceso"> | string
    descripcion?: StringWithAggregatesFilter<"Proceso"> | string
    id_proforma?: IntNullableWithAggregatesFilter<"Proceso"> | number | null
    id_obra?: IntNullableWithAggregatesFilter<"Proceso"> | number | null
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Proceso"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Proceso"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Proceso"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Proceso"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Proceso"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Proceso"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Proceso"> | Date | string | null
  }

  export type proceso_empleadosWhereInput = {
    AND?: proceso_empleadosWhereInput | proceso_empleadosWhereInput[]
    OR?: proceso_empleadosWhereInput[]
    NOT?: proceso_empleadosWhereInput | proceso_empleadosWhereInput[]
    id?: IntFilter<"proceso_empleados"> | number
    horas?: IntFilter<"proceso_empleados"> | number
    sueldo?: FloatFilter<"proceso_empleados"> | number
    id_proceso?: IntFilter<"proceso_empleados"> | number
    id_empleado?: IntFilter<"proceso_empleados"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_empleados"> | $Enums.EstadoEliminado
    proceso?: XOR<ProcesoScalarRelationFilter, ProcesoWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    horarios?: HorarioListRelationFilter
  }

  export type proceso_empleadosOrderByWithRelationInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
    estadoEliminado?: SortOrder
    proceso?: ProcesoOrderByWithRelationInput
    empleado?: EmpleadoOrderByWithRelationInput
    horarios?: HorarioOrderByRelationAggregateInput
  }

  export type proceso_empleadosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: proceso_empleadosWhereInput | proceso_empleadosWhereInput[]
    OR?: proceso_empleadosWhereInput[]
    NOT?: proceso_empleadosWhereInput | proceso_empleadosWhereInput[]
    horas?: IntFilter<"proceso_empleados"> | number
    sueldo?: FloatFilter<"proceso_empleados"> | number
    id_proceso?: IntFilter<"proceso_empleados"> | number
    id_empleado?: IntFilter<"proceso_empleados"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_empleados"> | $Enums.EstadoEliminado
    proceso?: XOR<ProcesoScalarRelationFilter, ProcesoWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    horarios?: HorarioListRelationFilter
  }, "id">

  export type proceso_empleadosOrderByWithAggregationInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
    estadoEliminado?: SortOrder
    _count?: proceso_empleadosCountOrderByAggregateInput
    _avg?: proceso_empleadosAvgOrderByAggregateInput
    _max?: proceso_empleadosMaxOrderByAggregateInput
    _min?: proceso_empleadosMinOrderByAggregateInput
    _sum?: proceso_empleadosSumOrderByAggregateInput
  }

  export type proceso_empleadosScalarWhereWithAggregatesInput = {
    AND?: proceso_empleadosScalarWhereWithAggregatesInput | proceso_empleadosScalarWhereWithAggregatesInput[]
    OR?: proceso_empleadosScalarWhereWithAggregatesInput[]
    NOT?: proceso_empleadosScalarWhereWithAggregatesInput | proceso_empleadosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"proceso_empleados"> | number
    horas?: IntWithAggregatesFilter<"proceso_empleados"> | number
    sueldo?: FloatWithAggregatesFilter<"proceso_empleados"> | number
    id_proceso?: IntWithAggregatesFilter<"proceso_empleados"> | number
    id_empleado?: IntWithAggregatesFilter<"proceso_empleados"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"proceso_empleados"> | $Enums.EstadoEliminado
  }

  export type proceso_herramientasWhereInput = {
    AND?: proceso_herramientasWhereInput | proceso_herramientasWhereInput[]
    OR?: proceso_herramientasWhereInput[]
    NOT?: proceso_herramientasWhereInput | proceso_herramientasWhereInput[]
    id?: IntFilter<"proceso_herramientas"> | number
    horas?: IntFilter<"proceso_herramientas"> | number
    descuento?: FloatFilter<"proceso_herramientas"> | number
    precio?: FloatFilter<"proceso_herramientas"> | number
    id_proceso?: IntFilter<"proceso_herramientas"> | number
    id_herramienta?: IntFilter<"proceso_herramientas"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_herramientas"> | $Enums.EstadoEliminado
    proceso?: XOR<ProcesoScalarRelationFilter, ProcesoWhereInput>
    herramienta?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
    horarios?: HorarioListRelationFilter
  }

  export type proceso_herramientasOrderByWithRelationInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
    estadoEliminado?: SortOrder
    proceso?: ProcesoOrderByWithRelationInput
    herramienta?: InventarioOrderByWithRelationInput
    horarios?: HorarioOrderByRelationAggregateInput
  }

  export type proceso_herramientasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: proceso_herramientasWhereInput | proceso_herramientasWhereInput[]
    OR?: proceso_herramientasWhereInput[]
    NOT?: proceso_herramientasWhereInput | proceso_herramientasWhereInput[]
    horas?: IntFilter<"proceso_herramientas"> | number
    descuento?: FloatFilter<"proceso_herramientas"> | number
    precio?: FloatFilter<"proceso_herramientas"> | number
    id_proceso?: IntFilter<"proceso_herramientas"> | number
    id_herramienta?: IntFilter<"proceso_herramientas"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_herramientas"> | $Enums.EstadoEliminado
    proceso?: XOR<ProcesoScalarRelationFilter, ProcesoWhereInput>
    herramienta?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
    horarios?: HorarioListRelationFilter
  }, "id">

  export type proceso_herramientasOrderByWithAggregationInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
    estadoEliminado?: SortOrder
    _count?: proceso_herramientasCountOrderByAggregateInput
    _avg?: proceso_herramientasAvgOrderByAggregateInput
    _max?: proceso_herramientasMaxOrderByAggregateInput
    _min?: proceso_herramientasMinOrderByAggregateInput
    _sum?: proceso_herramientasSumOrderByAggregateInput
  }

  export type proceso_herramientasScalarWhereWithAggregatesInput = {
    AND?: proceso_herramientasScalarWhereWithAggregatesInput | proceso_herramientasScalarWhereWithAggregatesInput[]
    OR?: proceso_herramientasScalarWhereWithAggregatesInput[]
    NOT?: proceso_herramientasScalarWhereWithAggregatesInput | proceso_herramientasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"proceso_herramientas"> | number
    horas?: IntWithAggregatesFilter<"proceso_herramientas"> | number
    descuento?: FloatWithAggregatesFilter<"proceso_herramientas"> | number
    precio?: FloatWithAggregatesFilter<"proceso_herramientas"> | number
    id_proceso?: IntWithAggregatesFilter<"proceso_herramientas"> | number
    id_herramienta?: IntWithAggregatesFilter<"proceso_herramientas"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"proceso_herramientas"> | $Enums.EstadoEliminado
  }

  export type proceso_inventarioWhereInput = {
    AND?: proceso_inventarioWhereInput | proceso_inventarioWhereInput[]
    OR?: proceso_inventarioWhereInput[]
    NOT?: proceso_inventarioWhereInput | proceso_inventarioWhereInput[]
    id?: IntFilter<"proceso_inventario"> | number
    cantidad?: FloatFilter<"proceso_inventario"> | number
    descuento?: FloatFilter<"proceso_inventario"> | number
    precio?: FloatFilter<"proceso_inventario"> | number
    id_proceso?: IntFilter<"proceso_inventario"> | number
    id_elemento?: IntFilter<"proceso_inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_inventario"> | $Enums.EstadoEliminado
    proceso?: XOR<ProcesoScalarRelationFilter, ProcesoWhereInput>
    elemento?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
  }

  export type proceso_inventarioOrderByWithRelationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
    estadoEliminado?: SortOrder
    proceso?: ProcesoOrderByWithRelationInput
    elemento?: InventarioOrderByWithRelationInput
  }

  export type proceso_inventarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: proceso_inventarioWhereInput | proceso_inventarioWhereInput[]
    OR?: proceso_inventarioWhereInput[]
    NOT?: proceso_inventarioWhereInput | proceso_inventarioWhereInput[]
    cantidad?: FloatFilter<"proceso_inventario"> | number
    descuento?: FloatFilter<"proceso_inventario"> | number
    precio?: FloatFilter<"proceso_inventario"> | number
    id_proceso?: IntFilter<"proceso_inventario"> | number
    id_elemento?: IntFilter<"proceso_inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_inventario"> | $Enums.EstadoEliminado
    proceso?: XOR<ProcesoScalarRelationFilter, ProcesoWhereInput>
    elemento?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
  }, "id">

  export type proceso_inventarioOrderByWithAggregationInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
    estadoEliminado?: SortOrder
    _count?: proceso_inventarioCountOrderByAggregateInput
    _avg?: proceso_inventarioAvgOrderByAggregateInput
    _max?: proceso_inventarioMaxOrderByAggregateInput
    _min?: proceso_inventarioMinOrderByAggregateInput
    _sum?: proceso_inventarioSumOrderByAggregateInput
  }

  export type proceso_inventarioScalarWhereWithAggregatesInput = {
    AND?: proceso_inventarioScalarWhereWithAggregatesInput | proceso_inventarioScalarWhereWithAggregatesInput[]
    OR?: proceso_inventarioScalarWhereWithAggregatesInput[]
    NOT?: proceso_inventarioScalarWhereWithAggregatesInput | proceso_inventarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"proceso_inventario"> | number
    cantidad?: FloatWithAggregatesFilter<"proceso_inventario"> | number
    descuento?: FloatWithAggregatesFilter<"proceso_inventario"> | number
    precio?: FloatWithAggregatesFilter<"proceso_inventario"> | number
    id_proceso?: IntWithAggregatesFilter<"proceso_inventario"> | number
    id_elemento?: IntWithAggregatesFilter<"proceso_inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"proceso_inventario"> | $Enums.EstadoEliminado
  }

  export type ObraWhereInput = {
    AND?: ObraWhereInput | ObraWhereInput[]
    OR?: ObraWhereInput[]
    NOT?: ObraWhereInput | ObraWhereInput[]
    id?: IntFilter<"Obra"> | number
    nombre?: StringFilter<"Obra"> | string
    tiempo_esperado?: DateTimeFilter<"Obra"> | Date | string
    porcentaje_venta?: DecimalFilter<"Obra"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntFilter<"Obra"> | number
    id_cliente?: IntFilter<"Obra"> | number
    id_proforma?: IntFilter<"Obra"> | number
    estado?: EnumEstadoObraFilter<"Obra"> | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFilter<"Obra"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Obra"> | number
    updatedBy?: IntNullableFilter<"Obra"> | number | null
    deletedBy?: IntNullableFilter<"Obra"> | number | null
    createdDate?: DateTimeFilter<"Obra"> | Date | string
    updatedDate?: DateTimeFilter<"Obra"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Obra"> | Date | string | null
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    proforma?: XOR<ProformaScalarRelationFilter, ProformaWhereInput>
    proceso?: ProcesoListRelationFilter
    transaccion?: TransaccionListRelationFilter
    pedido?: PedidoListRelationFilter
    tarea?: TareaListRelationFilter
  }

  export type ObraOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    punto?: PuntoOrderByWithRelationInput
    cliente?: PersonaOrderByWithRelationInput
    proforma?: ProformaOrderByWithRelationInput
    proceso?: ProcesoOrderByRelationAggregateInput
    transaccion?: TransaccionOrderByRelationAggregateInput
    pedido?: PedidoOrderByRelationAggregateInput
    tarea?: TareaOrderByRelationAggregateInput
  }

  export type ObraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    id_proforma?: number
    AND?: ObraWhereInput | ObraWhereInput[]
    OR?: ObraWhereInput[]
    NOT?: ObraWhereInput | ObraWhereInput[]
    nombre?: StringFilter<"Obra"> | string
    tiempo_esperado?: DateTimeFilter<"Obra"> | Date | string
    porcentaje_venta?: DecimalFilter<"Obra"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntFilter<"Obra"> | number
    id_cliente?: IntFilter<"Obra"> | number
    estado?: EnumEstadoObraFilter<"Obra"> | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFilter<"Obra"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Obra"> | number
    updatedBy?: IntNullableFilter<"Obra"> | number | null
    deletedBy?: IntNullableFilter<"Obra"> | number | null
    createdDate?: DateTimeFilter<"Obra"> | Date | string
    updatedDate?: DateTimeFilter<"Obra"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Obra"> | Date | string | null
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    proforma?: XOR<ProformaScalarRelationFilter, ProformaWhereInput>
    proceso?: ProcesoListRelationFilter
    transaccion?: TransaccionListRelationFilter
    pedido?: PedidoListRelationFilter
    tarea?: TareaListRelationFilter
  }, "id" | "id_proforma">

  export type ObraOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: ObraCountOrderByAggregateInput
    _avg?: ObraAvgOrderByAggregateInput
    _max?: ObraMaxOrderByAggregateInput
    _min?: ObraMinOrderByAggregateInput
    _sum?: ObraSumOrderByAggregateInput
  }

  export type ObraScalarWhereWithAggregatesInput = {
    AND?: ObraScalarWhereWithAggregatesInput | ObraScalarWhereWithAggregatesInput[]
    OR?: ObraScalarWhereWithAggregatesInput[]
    NOT?: ObraScalarWhereWithAggregatesInput | ObraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Obra"> | number
    nombre?: StringWithAggregatesFilter<"Obra"> | string
    tiempo_esperado?: DateTimeWithAggregatesFilter<"Obra"> | Date | string
    porcentaje_venta?: DecimalWithAggregatesFilter<"Obra"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntWithAggregatesFilter<"Obra"> | number
    id_cliente?: IntWithAggregatesFilter<"Obra"> | number
    id_proforma?: IntWithAggregatesFilter<"Obra"> | number
    estado?: EnumEstadoObraWithAggregatesFilter<"Obra"> | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Obra"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Obra"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Obra"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Obra"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Obra"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Obra"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Obra"> | Date | string | null
  }

  export type TransaccionWhereInput = {
    AND?: TransaccionWhereInput | TransaccionWhereInput[]
    OR?: TransaccionWhereInput[]
    NOT?: TransaccionWhereInput | TransaccionWhereInput[]
    id?: IntFilter<"Transaccion"> | number
    fecha?: DateTimeFilter<"Transaccion"> | Date | string
    id_empleado?: IntFilter<"Transaccion"> | number
    id_persona?: IntFilter<"Transaccion"> | number
    id_obra?: IntNullableFilter<"Transaccion"> | number | null
    id_compra?: IntNullableFilter<"Transaccion"> | number | null
    id_venta?: IntNullableFilter<"Transaccion"> | number | null
    id_devolucion?: IntNullableFilter<"Transaccion"> | number | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Transaccion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Transaccion"> | number
    updatedBy?: IntNullableFilter<"Transaccion"> | number | null
    deletedBy?: IntNullableFilter<"Transaccion"> | number | null
    createdDate?: DateTimeFilter<"Transaccion"> | Date | string
    updatedDate?: DateTimeFilter<"Transaccion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Transaccion"> | Date | string | null
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    persona?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
    elementos?: Transaccion_elementosListRelationFilter
    pedido?: PedidoListRelationFilter
    compra?: XOR<CompraNullableScalarRelationFilter, CompraWhereInput> | null
    venta?: XOR<VentaNullableScalarRelationFilter, VentaWhereInput> | null
    devolucion?: XOR<DevolucionNullableScalarRelationFilter, DevolucionWhereInput> | null
  }

  export type TransaccionOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrderInput | SortOrder
    id_compra?: SortOrderInput | SortOrder
    id_venta?: SortOrderInput | SortOrder
    id_devolucion?: SortOrderInput | SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    empleado?: EmpleadoOrderByWithRelationInput
    persona?: PersonaOrderByWithRelationInput
    obra?: ObraOrderByWithRelationInput
    elementos?: transaccion_elementosOrderByRelationAggregateInput
    pedido?: PedidoOrderByRelationAggregateInput
    compra?: CompraOrderByWithRelationInput
    venta?: VentaOrderByWithRelationInput
    devolucion?: DevolucionOrderByWithRelationInput
  }

  export type TransaccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransaccionWhereInput | TransaccionWhereInput[]
    OR?: TransaccionWhereInput[]
    NOT?: TransaccionWhereInput | TransaccionWhereInput[]
    fecha?: DateTimeFilter<"Transaccion"> | Date | string
    id_empleado?: IntFilter<"Transaccion"> | number
    id_persona?: IntFilter<"Transaccion"> | number
    id_obra?: IntNullableFilter<"Transaccion"> | number | null
    id_compra?: IntNullableFilter<"Transaccion"> | number | null
    id_venta?: IntNullableFilter<"Transaccion"> | number | null
    id_devolucion?: IntNullableFilter<"Transaccion"> | number | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Transaccion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Transaccion"> | number
    updatedBy?: IntNullableFilter<"Transaccion"> | number | null
    deletedBy?: IntNullableFilter<"Transaccion"> | number | null
    createdDate?: DateTimeFilter<"Transaccion"> | Date | string
    updatedDate?: DateTimeFilter<"Transaccion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Transaccion"> | Date | string | null
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    persona?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
    elementos?: Transaccion_elementosListRelationFilter
    pedido?: PedidoListRelationFilter
    compra?: XOR<CompraNullableScalarRelationFilter, CompraWhereInput> | null
    venta?: XOR<VentaNullableScalarRelationFilter, VentaWhereInput> | null
    devolucion?: XOR<DevolucionNullableScalarRelationFilter, DevolucionWhereInput> | null
  }, "id">

  export type TransaccionOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrderInput | SortOrder
    id_compra?: SortOrderInput | SortOrder
    id_venta?: SortOrderInput | SortOrder
    id_devolucion?: SortOrderInput | SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: TransaccionCountOrderByAggregateInput
    _avg?: TransaccionAvgOrderByAggregateInput
    _max?: TransaccionMaxOrderByAggregateInput
    _min?: TransaccionMinOrderByAggregateInput
    _sum?: TransaccionSumOrderByAggregateInput
  }

  export type TransaccionScalarWhereWithAggregatesInput = {
    AND?: TransaccionScalarWhereWithAggregatesInput | TransaccionScalarWhereWithAggregatesInput[]
    OR?: TransaccionScalarWhereWithAggregatesInput[]
    NOT?: TransaccionScalarWhereWithAggregatesInput | TransaccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transaccion"> | number
    fecha?: DateTimeWithAggregatesFilter<"Transaccion"> | Date | string
    id_empleado?: IntWithAggregatesFilter<"Transaccion"> | number
    id_persona?: IntWithAggregatesFilter<"Transaccion"> | number
    id_obra?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    id_compra?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    id_venta?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    id_devolucion?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Transaccion"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Transaccion"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Transaccion"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Transaccion"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Transaccion"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Transaccion"> | Date | string | null
  }

  export type transaccion_elementosWhereInput = {
    AND?: transaccion_elementosWhereInput | transaccion_elementosWhereInput[]
    OR?: transaccion_elementosWhereInput[]
    NOT?: transaccion_elementosWhereInput | transaccion_elementosWhereInput[]
    id?: IntFilter<"transaccion_elementos"> | number
    id_transaccion?: IntFilter<"transaccion_elementos"> | number
    id_elementos?: IntFilter<"transaccion_elementos"> | number
    cantidad?: FloatFilter<"transaccion_elementos"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"transaccion_elementos"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
    elemento?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
  }

  export type transaccion_elementosOrderByWithRelationInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
    estadoEliminado?: SortOrder
    transaccion?: TransaccionOrderByWithRelationInput
    elemento?: InventarioOrderByWithRelationInput
  }

  export type transaccion_elementosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: transaccion_elementosWhereInput | transaccion_elementosWhereInput[]
    OR?: transaccion_elementosWhereInput[]
    NOT?: transaccion_elementosWhereInput | transaccion_elementosWhereInput[]
    id_transaccion?: IntFilter<"transaccion_elementos"> | number
    id_elementos?: IntFilter<"transaccion_elementos"> | number
    cantidad?: FloatFilter<"transaccion_elementos"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"transaccion_elementos"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
    elemento?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
  }, "id">

  export type transaccion_elementosOrderByWithAggregationInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
    estadoEliminado?: SortOrder
    _count?: transaccion_elementosCountOrderByAggregateInput
    _avg?: transaccion_elementosAvgOrderByAggregateInput
    _max?: transaccion_elementosMaxOrderByAggregateInput
    _min?: transaccion_elementosMinOrderByAggregateInput
    _sum?: transaccion_elementosSumOrderByAggregateInput
  }

  export type transaccion_elementosScalarWhereWithAggregatesInput = {
    AND?: transaccion_elementosScalarWhereWithAggregatesInput | transaccion_elementosScalarWhereWithAggregatesInput[]
    OR?: transaccion_elementosScalarWhereWithAggregatesInput[]
    NOT?: transaccion_elementosScalarWhereWithAggregatesInput | transaccion_elementosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"transaccion_elementos"> | number
    id_transaccion?: IntWithAggregatesFilter<"transaccion_elementos"> | number
    id_elementos?: IntWithAggregatesFilter<"transaccion_elementos"> | number
    cantidad?: FloatWithAggregatesFilter<"transaccion_elementos"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"transaccion_elementos"> | $Enums.EstadoEliminado
  }

  export type CompraWhereInput = {
    AND?: CompraWhereInput | CompraWhereInput[]
    OR?: CompraWhereInput[]
    NOT?: CompraWhereInput | CompraWhereInput[]
    id?: IntFilter<"Compra"> | number
    fechaCredito?: DateTimeNullableFilter<"Compra"> | Date | string | null
    id_transaccion?: IntFilter<"Compra"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Compra"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
  }

  export type CompraOrderByWithRelationInput = {
    id?: SortOrder
    fechaCredito?: SortOrderInput | SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    transaccion?: TransaccionOrderByWithRelationInput
  }

  export type CompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    id_transaccion?: number
    AND?: CompraWhereInput | CompraWhereInput[]
    OR?: CompraWhereInput[]
    NOT?: CompraWhereInput | CompraWhereInput[]
    fechaCredito?: DateTimeNullableFilter<"Compra"> | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Compra"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
  }, "id" | "id_transaccion">

  export type CompraOrderByWithAggregationInput = {
    id?: SortOrder
    fechaCredito?: SortOrderInput | SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    _count?: CompraCountOrderByAggregateInput
    _avg?: CompraAvgOrderByAggregateInput
    _max?: CompraMaxOrderByAggregateInput
    _min?: CompraMinOrderByAggregateInput
    _sum?: CompraSumOrderByAggregateInput
  }

  export type CompraScalarWhereWithAggregatesInput = {
    AND?: CompraScalarWhereWithAggregatesInput | CompraScalarWhereWithAggregatesInput[]
    OR?: CompraScalarWhereWithAggregatesInput[]
    NOT?: CompraScalarWhereWithAggregatesInput | CompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Compra"> | number
    fechaCredito?: DateTimeNullableWithAggregatesFilter<"Compra"> | Date | string | null
    id_transaccion?: IntWithAggregatesFilter<"Compra"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Compra"> | $Enums.EstadoEliminado
  }

  export type VentaWhereInput = {
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    id?: IntFilter<"Venta"> | number
    codigo?: StringFilter<"Venta"> | string
    porcentaje?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    id_transaccion?: IntFilter<"Venta"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Venta"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
  }

  export type VentaOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    transaccion?: TransaccionOrderByWithRelationInput
  }

  export type VentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    id_transaccion?: number
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    codigo?: StringFilter<"Venta"> | string
    porcentaje?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Venta"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
  }, "id" | "id_transaccion">

  export type VentaOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    _count?: VentaCountOrderByAggregateInput
    _avg?: VentaAvgOrderByAggregateInput
    _max?: VentaMaxOrderByAggregateInput
    _min?: VentaMinOrderByAggregateInput
    _sum?: VentaSumOrderByAggregateInput
  }

  export type VentaScalarWhereWithAggregatesInput = {
    AND?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    OR?: VentaScalarWhereWithAggregatesInput[]
    NOT?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Venta"> | number
    codigo?: StringWithAggregatesFilter<"Venta"> | string
    porcentaje?: DecimalWithAggregatesFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    id_transaccion?: IntWithAggregatesFilter<"Venta"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Venta"> | $Enums.EstadoEliminado
  }

  export type DevolucionWhereInput = {
    AND?: DevolucionWhereInput | DevolucionWhereInput[]
    OR?: DevolucionWhereInput[]
    NOT?: DevolucionWhereInput | DevolucionWhereInput[]
    id?: IntFilter<"Devolucion"> | number
    codigo?: StringFilter<"Devolucion"> | string
    id_transaccion?: IntFilter<"Devolucion"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Devolucion"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
  }

  export type DevolucionOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    transaccion?: TransaccionOrderByWithRelationInput
  }

  export type DevolucionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    id_transaccion?: number
    AND?: DevolucionWhereInput | DevolucionWhereInput[]
    OR?: DevolucionWhereInput[]
    NOT?: DevolucionWhereInput | DevolucionWhereInput[]
    codigo?: StringFilter<"Devolucion"> | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Devolucion"> | $Enums.EstadoEliminado
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
  }, "id" | "id_transaccion">

  export type DevolucionOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    _count?: DevolucionCountOrderByAggregateInput
    _avg?: DevolucionAvgOrderByAggregateInput
    _max?: DevolucionMaxOrderByAggregateInput
    _min?: DevolucionMinOrderByAggregateInput
    _sum?: DevolucionSumOrderByAggregateInput
  }

  export type DevolucionScalarWhereWithAggregatesInput = {
    AND?: DevolucionScalarWhereWithAggregatesInput | DevolucionScalarWhereWithAggregatesInput[]
    OR?: DevolucionScalarWhereWithAggregatesInput[]
    NOT?: DevolucionScalarWhereWithAggregatesInput | DevolucionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Devolucion"> | number
    codigo?: StringWithAggregatesFilter<"Devolucion"> | string
    id_transaccion?: IntWithAggregatesFilter<"Devolucion"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Devolucion"> | $Enums.EstadoEliminado
  }

  export type HorarioWhereInput = {
    AND?: HorarioWhereInput | HorarioWhereInput[]
    OR?: HorarioWhereInput[]
    NOT?: HorarioWhereInput | HorarioWhereInput[]
    id?: IntFilter<"Horario"> | number
    hora_inicio?: DateTimeFilter<"Horario"> | Date | string
    hora_final?: DateTimeFilter<"Horario"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Horario"> | $Enums.EstadoEliminado
    dias?: DiaListRelationFilter
    proceso_empleados?: Proceso_empleadosListRelationFilter
    proceso_herramientas?: Proceso_herramientasListRelationFilter
  }

  export type HorarioOrderByWithRelationInput = {
    id?: SortOrder
    hora_inicio?: SortOrder
    hora_final?: SortOrder
    estadoEliminado?: SortOrder
    dias?: DiaOrderByRelationAggregateInput
    proceso_empleados?: proceso_empleadosOrderByRelationAggregateInput
    proceso_herramientas?: proceso_herramientasOrderByRelationAggregateInput
  }

  export type HorarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HorarioWhereInput | HorarioWhereInput[]
    OR?: HorarioWhereInput[]
    NOT?: HorarioWhereInput | HorarioWhereInput[]
    hora_inicio?: DateTimeFilter<"Horario"> | Date | string
    hora_final?: DateTimeFilter<"Horario"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Horario"> | $Enums.EstadoEliminado
    dias?: DiaListRelationFilter
    proceso_empleados?: Proceso_empleadosListRelationFilter
    proceso_herramientas?: Proceso_herramientasListRelationFilter
  }, "id">

  export type HorarioOrderByWithAggregationInput = {
    id?: SortOrder
    hora_inicio?: SortOrder
    hora_final?: SortOrder
    estadoEliminado?: SortOrder
    _count?: HorarioCountOrderByAggregateInput
    _avg?: HorarioAvgOrderByAggregateInput
    _max?: HorarioMaxOrderByAggregateInput
    _min?: HorarioMinOrderByAggregateInput
    _sum?: HorarioSumOrderByAggregateInput
  }

  export type HorarioScalarWhereWithAggregatesInput = {
    AND?: HorarioScalarWhereWithAggregatesInput | HorarioScalarWhereWithAggregatesInput[]
    OR?: HorarioScalarWhereWithAggregatesInput[]
    NOT?: HorarioScalarWhereWithAggregatesInput | HorarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Horario"> | number
    hora_inicio?: DateTimeWithAggregatesFilter<"Horario"> | Date | string
    hora_final?: DateTimeWithAggregatesFilter<"Horario"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Horario"> | $Enums.EstadoEliminado
  }

  export type DiaWhereInput = {
    AND?: DiaWhereInput | DiaWhereInput[]
    OR?: DiaWhereInput[]
    NOT?: DiaWhereInput | DiaWhereInput[]
    id?: IntFilter<"Dia"> | number
    nombre?: EnumDiasSemanaFilter<"Dia"> | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFilter<"Dia"> | $Enums.EstadoEliminado
    horarios?: HorarioListRelationFilter
  }

  export type DiaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    horarios?: HorarioOrderByRelationAggregateInput
  }

  export type DiaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DiaWhereInput | DiaWhereInput[]
    OR?: DiaWhereInput[]
    NOT?: DiaWhereInput | DiaWhereInput[]
    nombre?: EnumDiasSemanaFilter<"Dia"> | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFilter<"Dia"> | $Enums.EstadoEliminado
    horarios?: HorarioListRelationFilter
  }, "id">

  export type DiaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    _count?: DiaCountOrderByAggregateInput
    _avg?: DiaAvgOrderByAggregateInput
    _max?: DiaMaxOrderByAggregateInput
    _min?: DiaMinOrderByAggregateInput
    _sum?: DiaSumOrderByAggregateInput
  }

  export type DiaScalarWhereWithAggregatesInput = {
    AND?: DiaScalarWhereWithAggregatesInput | DiaScalarWhereWithAggregatesInput[]
    OR?: DiaScalarWhereWithAggregatesInput[]
    NOT?: DiaScalarWhereWithAggregatesInput | DiaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Dia"> | number
    nombre?: EnumDiasSemanaWithAggregatesFilter<"Dia"> | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Dia"> | $Enums.EstadoEliminado
  }

  export type PedidoWhereInput = {
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    id?: IntFilter<"Pedido"> | number
    id_obra?: IntFilter<"Pedido"> | number
    id_transaccion?: IntFilter<"Pedido"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Pedido"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Pedido"> | number
    updatedBy?: IntNullableFilter<"Pedido"> | number | null
    deletedBy?: IntNullableFilter<"Pedido"> | number | null
    createdDate?: DateTimeFilter<"Pedido"> | Date | string
    updatedDate?: DateTimeFilter<"Pedido"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Pedido"> | Date | string | null
    obra?: XOR<ObraScalarRelationFilter, ObraWhereInput>
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
    elemento?: Pedido_elementosListRelationFilter
  }

  export type PedidoOrderByWithRelationInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    obra?: ObraOrderByWithRelationInput
    transaccion?: TransaccionOrderByWithRelationInput
    elemento?: pedido_elementosOrderByRelationAggregateInput
  }

  export type PedidoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    id_obra?: IntFilter<"Pedido"> | number
    id_transaccion?: IntFilter<"Pedido"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Pedido"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Pedido"> | number
    updatedBy?: IntNullableFilter<"Pedido"> | number | null
    deletedBy?: IntNullableFilter<"Pedido"> | number | null
    createdDate?: DateTimeFilter<"Pedido"> | Date | string
    updatedDate?: DateTimeFilter<"Pedido"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Pedido"> | Date | string | null
    obra?: XOR<ObraScalarRelationFilter, ObraWhereInput>
    transaccion?: XOR<TransaccionScalarRelationFilter, TransaccionWhereInput>
    elemento?: Pedido_elementosListRelationFilter
  }, "id">

  export type PedidoOrderByWithAggregationInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: PedidoCountOrderByAggregateInput
    _avg?: PedidoAvgOrderByAggregateInput
    _max?: PedidoMaxOrderByAggregateInput
    _min?: PedidoMinOrderByAggregateInput
    _sum?: PedidoSumOrderByAggregateInput
  }

  export type PedidoScalarWhereWithAggregatesInput = {
    AND?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    OR?: PedidoScalarWhereWithAggregatesInput[]
    NOT?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pedido"> | number
    id_obra?: IntWithAggregatesFilter<"Pedido"> | number
    id_transaccion?: IntWithAggregatesFilter<"Pedido"> | number
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Pedido"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Pedido"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Pedido"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Pedido"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Pedido"> | Date | string | null
  }

  export type TareaWhereInput = {
    AND?: TareaWhereInput | TareaWhereInput[]
    OR?: TareaWhereInput[]
    NOT?: TareaWhereInput | TareaWhereInput[]
    id?: IntFilter<"Tarea"> | number
    nombre?: StringFilter<"Tarea"> | string
    descripcion?: StringFilter<"Tarea"> | string
    estado?: EnumEstadoTareaFilter<"Tarea"> | $Enums.EstadoTarea
    id_asignador?: IntFilter<"Tarea"> | number
    id_asignado?: IntNullableFilter<"Tarea"> | number | null
    id_ubicacion?: IntNullableFilter<"Tarea"> | number | null
    id_obra?: IntNullableFilter<"Tarea"> | number | null
    fecha_final?: DateTimeFilter<"Tarea"> | Date | string
    fecha_inicio?: DateTimeFilter<"Tarea"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Tarea"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Tarea"> | number
    updatedBy?: IntNullableFilter<"Tarea"> | number | null
    deletedBy?: IntNullableFilter<"Tarea"> | number | null
    createdDate?: DateTimeFilter<"Tarea"> | Date | string
    updatedDate?: DateTimeFilter<"Tarea"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Tarea"> | Date | string | null
    asignador?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    asignado?: XOR<EmpleadoNullableScalarRelationFilter, EmpleadoWhereInput> | null
    ubicacion?: XOR<UbicacionNullableScalarRelationFilter, UbicacionWhereInput> | null
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
  }

  export type TareaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrderInput | SortOrder
    id_ubicacion?: SortOrderInput | SortOrder
    id_obra?: SortOrderInput | SortOrder
    fecha_final?: SortOrder
    fecha_inicio?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    asignador?: EmpleadoOrderByWithRelationInput
    asignado?: EmpleadoOrderByWithRelationInput
    ubicacion?: UbicacionOrderByWithRelationInput
    obra?: ObraOrderByWithRelationInput
  }

  export type TareaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TareaWhereInput | TareaWhereInput[]
    OR?: TareaWhereInput[]
    NOT?: TareaWhereInput | TareaWhereInput[]
    nombre?: StringFilter<"Tarea"> | string
    descripcion?: StringFilter<"Tarea"> | string
    estado?: EnumEstadoTareaFilter<"Tarea"> | $Enums.EstadoTarea
    id_asignador?: IntFilter<"Tarea"> | number
    id_asignado?: IntNullableFilter<"Tarea"> | number | null
    id_ubicacion?: IntNullableFilter<"Tarea"> | number | null
    id_obra?: IntNullableFilter<"Tarea"> | number | null
    fecha_final?: DateTimeFilter<"Tarea"> | Date | string
    fecha_inicio?: DateTimeFilter<"Tarea"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Tarea"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Tarea"> | number
    updatedBy?: IntNullableFilter<"Tarea"> | number | null
    deletedBy?: IntNullableFilter<"Tarea"> | number | null
    createdDate?: DateTimeFilter<"Tarea"> | Date | string
    updatedDate?: DateTimeFilter<"Tarea"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Tarea"> | Date | string | null
    asignador?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
    asignado?: XOR<EmpleadoNullableScalarRelationFilter, EmpleadoWhereInput> | null
    ubicacion?: XOR<UbicacionNullableScalarRelationFilter, UbicacionWhereInput> | null
    obra?: XOR<ObraNullableScalarRelationFilter, ObraWhereInput> | null
  }, "id">

  export type TareaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrderInput | SortOrder
    id_ubicacion?: SortOrderInput | SortOrder
    id_obra?: SortOrderInput | SortOrder
    fecha_final?: SortOrder
    fecha_inicio?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrderInput | SortOrder
    _count?: TareaCountOrderByAggregateInput
    _avg?: TareaAvgOrderByAggregateInput
    _max?: TareaMaxOrderByAggregateInput
    _min?: TareaMinOrderByAggregateInput
    _sum?: TareaSumOrderByAggregateInput
  }

  export type TareaScalarWhereWithAggregatesInput = {
    AND?: TareaScalarWhereWithAggregatesInput | TareaScalarWhereWithAggregatesInput[]
    OR?: TareaScalarWhereWithAggregatesInput[]
    NOT?: TareaScalarWhereWithAggregatesInput | TareaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Tarea"> | number
    nombre?: StringWithAggregatesFilter<"Tarea"> | string
    descripcion?: StringWithAggregatesFilter<"Tarea"> | string
    estado?: EnumEstadoTareaWithAggregatesFilter<"Tarea"> | $Enums.EstadoTarea
    id_asignador?: IntWithAggregatesFilter<"Tarea"> | number
    id_asignado?: IntNullableWithAggregatesFilter<"Tarea"> | number | null
    id_ubicacion?: IntNullableWithAggregatesFilter<"Tarea"> | number | null
    id_obra?: IntNullableWithAggregatesFilter<"Tarea"> | number | null
    fecha_final?: DateTimeWithAggregatesFilter<"Tarea"> | Date | string
    fecha_inicio?: DateTimeWithAggregatesFilter<"Tarea"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"Tarea"> | $Enums.EstadoEliminado
    createdBy?: IntWithAggregatesFilter<"Tarea"> | number
    updatedBy?: IntNullableWithAggregatesFilter<"Tarea"> | number | null
    deletedBy?: IntNullableWithAggregatesFilter<"Tarea"> | number | null
    createdDate?: DateTimeWithAggregatesFilter<"Tarea"> | Date | string
    updatedDate?: DateTimeWithAggregatesFilter<"Tarea"> | Date | string
    deletedDate?: DateTimeNullableWithAggregatesFilter<"Tarea"> | Date | string | null
  }

  export type pedido_elementosWhereInput = {
    AND?: pedido_elementosWhereInput | pedido_elementosWhereInput[]
    OR?: pedido_elementosWhereInput[]
    NOT?: pedido_elementosWhereInput | pedido_elementosWhereInput[]
    id_pedido?: IntFilter<"pedido_elementos"> | number
    id_elemento?: IntFilter<"pedido_elementos"> | number
    id_empleado?: IntFilter<"pedido_elementos"> | number
    estado?: EnumEstadoPedidoFilter<"pedido_elementos"> | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFilter<"pedido_elementos"> | $Enums.EstadoEliminado
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    elemento?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
  }

  export type pedido_elementosOrderByWithRelationInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
    elemento?: InventarioOrderByWithRelationInput
    empleado?: EmpleadoOrderByWithRelationInput
  }

  export type pedido_elementosWhereUniqueInput = Prisma.AtLeast<{
    id_pedido_id_elemento?: pedido_elementosId_pedidoId_elementoCompoundUniqueInput
    AND?: pedido_elementosWhereInput | pedido_elementosWhereInput[]
    OR?: pedido_elementosWhereInput[]
    NOT?: pedido_elementosWhereInput | pedido_elementosWhereInput[]
    id_pedido?: IntFilter<"pedido_elementos"> | number
    id_elemento?: IntFilter<"pedido_elementos"> | number
    id_empleado?: IntFilter<"pedido_elementos"> | number
    estado?: EnumEstadoPedidoFilter<"pedido_elementos"> | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFilter<"pedido_elementos"> | $Enums.EstadoEliminado
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    elemento?: XOR<InventarioScalarRelationFilter, InventarioWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
  }, "id_pedido_id_elemento">

  export type pedido_elementosOrderByWithAggregationInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    _count?: pedido_elementosCountOrderByAggregateInput
    _avg?: pedido_elementosAvgOrderByAggregateInput
    _max?: pedido_elementosMaxOrderByAggregateInput
    _min?: pedido_elementosMinOrderByAggregateInput
    _sum?: pedido_elementosSumOrderByAggregateInput
  }

  export type pedido_elementosScalarWhereWithAggregatesInput = {
    AND?: pedido_elementosScalarWhereWithAggregatesInput | pedido_elementosScalarWhereWithAggregatesInput[]
    OR?: pedido_elementosScalarWhereWithAggregatesInput[]
    NOT?: pedido_elementosScalarWhereWithAggregatesInput | pedido_elementosScalarWhereWithAggregatesInput[]
    id_pedido?: IntWithAggregatesFilter<"pedido_elementos"> | number
    id_elemento?: IntWithAggregatesFilter<"pedido_elementos"> | number
    id_empleado?: IntWithAggregatesFilter<"pedido_elementos"> | number
    estado?: EnumEstadoPedidoWithAggregatesFilter<"pedido_elementos"> | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"pedido_elementos"> | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoWhereInput = {
    AND?: ubicacion_empleadoWhereInput | ubicacion_empleadoWhereInput[]
    OR?: ubicacion_empleadoWhereInput[]
    NOT?: ubicacion_empleadoWhereInput | ubicacion_empleadoWhereInput[]
    id?: IntFilter<"ubicacion_empleado"> | number
    id_punto?: IntFilter<"ubicacion_empleado"> | number
    id_empleado?: IntFilter<"ubicacion_empleado"> | number
    estado?: EnumEstadoTrabajadorFilter<"ubicacion_empleado"> | $Enums.EstadoTrabajador
    fecha?: DateTimeFilter<"ubicacion_empleado"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"ubicacion_empleado"> | $Enums.EstadoEliminado
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
  }

  export type ubicacion_empleadoOrderByWithRelationInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    estadoEliminado?: SortOrder
    punto?: PuntoOrderByWithRelationInput
    empleado?: EmpleadoOrderByWithRelationInput
  }

  export type ubicacion_empleadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ubicacion_empleadoWhereInput | ubicacion_empleadoWhereInput[]
    OR?: ubicacion_empleadoWhereInput[]
    NOT?: ubicacion_empleadoWhereInput | ubicacion_empleadoWhereInput[]
    id_punto?: IntFilter<"ubicacion_empleado"> | number
    id_empleado?: IntFilter<"ubicacion_empleado"> | number
    estado?: EnumEstadoTrabajadorFilter<"ubicacion_empleado"> | $Enums.EstadoTrabajador
    fecha?: DateTimeFilter<"ubicacion_empleado"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"ubicacion_empleado"> | $Enums.EstadoEliminado
    punto?: XOR<PuntoScalarRelationFilter, PuntoWhereInput>
    empleado?: XOR<EmpleadoScalarRelationFilter, EmpleadoWhereInput>
  }, "id">

  export type ubicacion_empleadoOrderByWithAggregationInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    estadoEliminado?: SortOrder
    _count?: ubicacion_empleadoCountOrderByAggregateInput
    _avg?: ubicacion_empleadoAvgOrderByAggregateInput
    _max?: ubicacion_empleadoMaxOrderByAggregateInput
    _min?: ubicacion_empleadoMinOrderByAggregateInput
    _sum?: ubicacion_empleadoSumOrderByAggregateInput
  }

  export type ubicacion_empleadoScalarWhereWithAggregatesInput = {
    AND?: ubicacion_empleadoScalarWhereWithAggregatesInput | ubicacion_empleadoScalarWhereWithAggregatesInput[]
    OR?: ubicacion_empleadoScalarWhereWithAggregatesInput[]
    NOT?: ubicacion_empleadoScalarWhereWithAggregatesInput | ubicacion_empleadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ubicacion_empleado"> | number
    id_punto?: IntWithAggregatesFilter<"ubicacion_empleado"> | number
    id_empleado?: IntWithAggregatesFilter<"ubicacion_empleado"> | number
    estado?: EnumEstadoTrabajadorWithAggregatesFilter<"ubicacion_empleado"> | $Enums.EstadoTrabajador
    fecha?: DateTimeWithAggregatesFilter<"ubicacion_empleado"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoWithAggregatesFilter<"ubicacion_empleado"> | $Enums.EstadoEliminado
  }

  export type PuntoCreateInput = {
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionCreateNestedManyWithoutPuntoInput
    proforma?: ProformaCreateNestedManyWithoutPuntoInput
    obra?: ObraCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoCreateNestedManyWithoutPuntoInput
  }

  export type PuntoUncheckedCreateInput = {
    id?: number
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionUncheckedCreateNestedManyWithoutPuntoInput
    proforma?: ProformaUncheckedCreateNestedManyWithoutPuntoInput
    obra?: ObraUncheckedCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoUncheckedCreateNestedManyWithoutPuntoInput
  }

  export type PuntoUpdateInput = {
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUpdateManyWithoutPuntoNestedInput
    proforma?: ProformaUpdateManyWithoutPuntoNestedInput
    obra?: ObraUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUpdateManyWithoutPuntoNestedInput
  }

  export type PuntoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUncheckedUpdateManyWithoutPuntoNestedInput
    proforma?: ProformaUncheckedUpdateManyWithoutPuntoNestedInput
    obra?: ObraUncheckedUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUncheckedUpdateManyWithoutPuntoNestedInput
  }

  export type PuntoCreateManyInput = {
    id?: number
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PuntoUpdateManyMutationInput = {
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PuntoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UbicacionCreateInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutUbicacionInput
    inventario?: InventarioCreateNestedManyWithoutUbicacionInput
    tarea?: TareaCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion: string
    id_punto: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutUbicacionInput
    tarea?: TareaUncheckedCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutUbicacionNestedInput
    inventario?: InventarioUpdateManyWithoutUbicacionNestedInput
    tarea?: TareaUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_punto?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutUbicacionNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionCreateManyInput = {
    id?: number
    nombre: string
    descripcion: string
    id_punto: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type UbicacionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UbicacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_punto?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoriaCreateInput = {
    nombre: string
    codigo: string
    descripcion: string
    tipo: $Enums.CategoriasInventario
    tipo_unidad: string
    venta: boolean
    tiempo?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUncheckedCreateInput = {
    id?: number
    nombre: string
    codigo: string
    descripcion: string
    tipo: $Enums.CategoriasInventario
    tipo_unidad: string
    venta: boolean
    tiempo?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    tipo?: EnumCategoriasInventarioFieldUpdateOperationsInput | $Enums.CategoriasInventario
    tipo_unidad?: StringFieldUpdateOperationsInput | string
    venta?: BoolFieldUpdateOperationsInput | boolean
    tiempo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    tipo?: EnumCategoriasInventarioFieldUpdateOperationsInput | $Enums.CategoriasInventario
    tipo_unidad?: StringFieldUpdateOperationsInput | string
    venta?: BoolFieldUpdateOperationsInput | boolean
    tiempo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaCreateManyInput = {
    id?: number
    nombre: string
    codigo: string
    descripcion: string
    tipo: $Enums.CategoriasInventario
    tipo_unidad: string
    venta: boolean
    tiempo?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type CategoriaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    tipo?: EnumCategoriasInventarioFieldUpdateOperationsInput | $Enums.CategoriasInventario
    tipo_unidad?: StringFieldUpdateOperationsInput | string
    venta?: BoolFieldUpdateOperationsInput | boolean
    tiempo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    tipo?: EnumCategoriasInventarioFieldUpdateOperationsInput | $Enums.CategoriasInventario
    tipo_unidad?: StringFieldUpdateOperationsInput | string
    venta?: BoolFieldUpdateOperationsInput | boolean
    tiempo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PersonaCreateInput = {
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioCreateNestedManyWithoutProveedorInput
    proforma?: ProformaCreateNestedManyWithoutClienteInput
    obra?: ObraCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionCreateNestedManyWithoutPersonaInput
  }

  export type PersonaUncheckedCreateInput = {
    id?: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutProveedorInput
    proforma?: ProformaUncheckedCreateNestedManyWithoutClienteInput
    obra?: ObraUncheckedCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutPersonaInput
  }

  export type PersonaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUpdateManyWithoutProveedorNestedInput
    proforma?: ProformaUpdateManyWithoutClienteNestedInput
    obra?: ObraUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUpdateManyWithoutPersonaNestedInput
  }

  export type PersonaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutProveedorNestedInput
    proforma?: ProformaUncheckedUpdateManyWithoutClienteNestedInput
    obra?: ObraUncheckedUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutPersonaNestedInput
  }

  export type PersonaCreateManyInput = {
    id?: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PersonaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PersonaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InventarioCreateInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioUpdateInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type InventarioCreateManyInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type InventarioUpdateManyMutationInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InventarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoCreateInput = {
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    categoria: $Enums.CategoriasPermiso
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posiciones?: PosicionCreateNestedManyWithoutPermisosInput
  }

  export type PermisoUncheckedCreateInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    categoria: $Enums.CategoriasPermiso
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posiciones?: PosicionUncheckedCreateNestedManyWithoutPermisosInput
  }

  export type PermisoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posiciones?: PosicionUpdateManyWithoutPermisosNestedInput
  }

  export type PermisoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posiciones?: PosicionUncheckedUpdateManyWithoutPermisosNestedInput
  }

  export type PermisoCreateManyInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    categoria: $Enums.CategoriasPermiso
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PermisoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PosicionCreateInput = {
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    permisos?: PermisoCreateNestedManyWithoutPosicionesInput
    empleado?: EmpleadoCreateNestedManyWithoutPosicionInput
  }

  export type PosicionUncheckedCreateInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    permisos?: PermisoUncheckedCreateNestedManyWithoutPosicionesInput
    empleado?: EmpleadoUncheckedCreateNestedManyWithoutPosicionInput
  }

  export type PosicionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisos?: PermisoUpdateManyWithoutPosicionesNestedInput
    empleado?: EmpleadoUpdateManyWithoutPosicionNestedInput
  }

  export type PosicionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisos?: PermisoUncheckedUpdateManyWithoutPosicionesNestedInput
    empleado?: EmpleadoUncheckedUpdateManyWithoutPosicionNestedInput
  }

  export type PosicionCreateManyInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PosicionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PosicionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EmpleadoCreateInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoCreateManyInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type EmpleadoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EmpleadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MensajeCreateInput = {
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    remitente?: EmpleadoCreateNestedOneWithoutMensajesEnviadosInput
    destinatario?: EmpleadoCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajeUncheckedCreateInput = {
    id?: number
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    id_remitente?: number
    id_destinario?: number
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type MensajeUpdateInput = {
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remitente?: EmpleadoUpdateOneRequiredWithoutMensajesEnviadosNestedInput
    destinatario?: EmpleadoUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    id_remitente?: IntFieldUpdateOperationsInput | number
    id_destinario?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MensajeCreateManyInput = {
    id?: number
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    id_remitente?: number
    id_destinario?: number
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type MensajeUpdateManyMutationInput = {
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MensajeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    id_remitente?: IntFieldUpdateOperationsInput | number
    id_destinario?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProformaCreateInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutProformaInput
    cliente: PersonaCreateNestedOneWithoutProformaInput
    obra?: ObraCreateNestedOneWithoutProformaInput
    procesos?: ProcesoCreateNestedManyWithoutProformaInput
  }

  export type ProformaUncheckedCreateInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra?: ObraUncheckedCreateNestedOneWithoutProformaInput
    procesos?: ProcesoUncheckedCreateNestedManyWithoutProformaInput
  }

  export type ProformaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutProformaNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutProformaNestedInput
    obra?: ObraUpdateOneWithoutProformaNestedInput
    procesos?: ProcesoUpdateManyWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUncheckedUpdateOneWithoutProformaNestedInput
    procesos?: ProcesoUncheckedUpdateManyWithoutProformaNestedInput
  }

  export type ProformaCreateManyInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ProformaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProformaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProcesoCreateInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioCreateNestedManyWithoutProcesoInput
    proforma?: ProformaCreateNestedOneWithoutProcesosInput
    obra?: ObraCreateNestedOneWithoutProcesoInput
  }

  export type ProcesoUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutProcesoInput
  }

  export type ProcesoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUpdateManyWithoutProcesoNestedInput
    proforma?: ProformaUpdateOneWithoutProcesosNestedInput
    obra?: ObraUpdateOneWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUncheckedUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUncheckedUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUncheckedUpdateManyWithoutProcesoNestedInput
  }

  export type ProcesoCreateManyInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ProcesoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProcesoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proceso_empleadosCreateInput = {
    horas: number
    sueldo: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutEmpleadosInput
    empleado: EmpleadoCreateNestedOneWithoutProcesoInput
    horarios?: HorarioCreateNestedManyWithoutProceso_empleadosInput
  }

  export type proceso_empleadosUncheckedCreateInput = {
    id?: number
    horas: number
    sueldo: number
    id_proceso: number
    id_empleado: number
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutProceso_empleadosInput
  }

  export type proceso_empleadosUpdateInput = {
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutEmpleadosNestedInput
    empleado?: EmpleadoUpdateOneRequiredWithoutProcesoNestedInput
    horarios?: HorarioUpdateManyWithoutProceso_empleadosNestedInput
  }

  export type proceso_empleadosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutProceso_empleadosNestedInput
  }

  export type proceso_empleadosCreateManyInput = {
    id?: number
    horas: number
    sueldo: number
    id_proceso: number
    id_empleado: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_empleadosUpdateManyMutationInput = {
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_empleadosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_herramientasCreateInput = {
    horas: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutHerramientasInput
    herramienta: InventarioCreateNestedOneWithoutProceso_herramientasInput
    horarios?: HorarioCreateNestedManyWithoutProceso_herramientasInput
  }

  export type proceso_herramientasUncheckedCreateInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    id_herramienta: number
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutProceso_herramientasInput
  }

  export type proceso_herramientasUpdateInput = {
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutHerramientasNestedInput
    herramienta?: InventarioUpdateOneRequiredWithoutProceso_herramientasNestedInput
    horarios?: HorarioUpdateManyWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_herramienta?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasCreateManyInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    id_herramienta: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_herramientasUpdateManyMutationInput = {
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_herramientasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_herramienta?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioCreateInput = {
    cantidad: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutInventarioInput
    elemento: InventarioCreateNestedOneWithoutProceso_inventarioInput
  }

  export type proceso_inventarioUncheckedCreateInput = {
    id?: number
    cantidad: number
    descuento: number
    precio: number
    id_proceso: number
    id_elemento: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_inventarioUpdateInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutInventarioNestedInput
    elemento?: InventarioUpdateOneRequiredWithoutProceso_inventarioNestedInput
  }

  export type proceso_inventarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioCreateManyInput = {
    id?: number
    cantidad: number
    descuento: number
    precio: number
    id_proceso: number
    id_elemento: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_inventarioUpdateManyMutationInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ObraCreateInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    cliente: PersonaCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type ObraCreateManyInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ObraUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ObraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransaccionCreateInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionCreateManyInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TransaccionUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransaccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaccion_elementosCreateInput = {
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
    transaccion: TransaccionCreateNestedOneWithoutElementosInput
    elemento: InventarioCreateNestedOneWithoutTransaccionInput
  }

  export type transaccion_elementosUncheckedCreateInput = {
    id?: number
    id_transaccion: number
    id_elementos: number
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type transaccion_elementosUpdateInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    transaccion?: TransaccionUpdateOneRequiredWithoutElementosNestedInput
    elemento?: InventarioUpdateOneRequiredWithoutTransaccionNestedInput
  }

  export type transaccion_elementosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    id_elementos?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type transaccion_elementosCreateManyInput = {
    id?: number
    id_transaccion: number
    id_elementos: number
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type transaccion_elementosUpdateManyMutationInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type transaccion_elementosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    id_elementos?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type CompraCreateInput = {
    fechaCredito?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
    transaccion: TransaccionCreateNestedOneWithoutCompraInput
  }

  export type CompraUncheckedCreateInput = {
    id?: number
    fechaCredito?: Date | string | null
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type CompraUpdateInput = {
    fechaCredito?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    transaccion?: TransaccionUpdateOneRequiredWithoutCompraNestedInput
  }

  export type CompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaCredito?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type CompraCreateManyInput = {
    id?: number
    fechaCredito?: Date | string | null
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type CompraUpdateManyMutationInput = {
    fechaCredito?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type CompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaCredito?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type VentaCreateInput = {
    codigo: string
    porcentaje: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    transaccion: TransaccionCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateInput = {
    id?: number
    codigo: string
    porcentaje: Decimal | DecimalJsLike | number | string
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type VentaUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    transaccion?: TransaccionUpdateOneRequiredWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type VentaCreateManyInput = {
    id?: number
    codigo: string
    porcentaje: Decimal | DecimalJsLike | number | string
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type VentaUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type VentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DevolucionCreateInput = {
    codigo: string
    estadoEliminado?: $Enums.EstadoEliminado
    transaccion: TransaccionCreateNestedOneWithoutDevolucionInput
  }

  export type DevolucionUncheckedCreateInput = {
    id?: number
    codigo: string
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DevolucionUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    transaccion?: TransaccionUpdateOneRequiredWithoutDevolucionNestedInput
  }

  export type DevolucionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DevolucionCreateManyInput = {
    id?: number
    codigo: string
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DevolucionUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DevolucionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type HorarioCreateInput = {
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    dias?: DiaCreateNestedManyWithoutHorariosInput
    proceso_empleados?: proceso_empleadosCreateNestedManyWithoutHorariosInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHorariosInput
  }

  export type HorarioUncheckedCreateInput = {
    id?: number
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    dias?: DiaUncheckedCreateNestedManyWithoutHorariosInput
    proceso_empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutHorariosInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type HorarioUpdateInput = {
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    dias?: DiaUpdateManyWithoutHorariosNestedInput
    proceso_empleados?: proceso_empleadosUpdateManyWithoutHorariosNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    dias?: DiaUncheckedUpdateManyWithoutHorariosNestedInput
    proceso_empleados?: proceso_empleadosUncheckedUpdateManyWithoutHorariosNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioCreateManyInput = {
    id?: number
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type HorarioUpdateManyMutationInput = {
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type HorarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DiaCreateInput = {
    nombre: $Enums.DiasSemana
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioCreateNestedManyWithoutDiasInput
  }

  export type DiaUncheckedCreateInput = {
    id?: number
    nombre: $Enums.DiasSemana
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutDiasInput
  }

  export type DiaUpdateInput = {
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUpdateManyWithoutDiasNestedInput
  }

  export type DiaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutDiasNestedInput
  }

  export type DiaCreateManyInput = {
    id?: number
    nombre: $Enums.DiasSemana
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DiaUpdateManyMutationInput = {
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DiaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type PedidoCreateInput = {
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra: ObraCreateNestedOneWithoutPedidoInput
    transaccion: TransaccionCreateNestedOneWithoutPedidoInput
    elemento?: pedido_elementosCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateInput = {
    id?: number
    id_obra: number
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elemento?: pedido_elementosUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUpdateInput = {
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUpdateOneRequiredWithoutPedidoNestedInput
    transaccion?: TransaccionUpdateOneRequiredWithoutPedidoNestedInput
    elemento?: pedido_elementosUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_obra?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elemento?: pedido_elementosUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoCreateManyInput = {
    id?: number
    id_obra: number
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PedidoUpdateManyMutationInput = {
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PedidoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_obra?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaCreateInput = {
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    asignador: EmpleadoCreateNestedOneWithoutTareasAsignadasInput
    asignado?: EmpleadoCreateNestedOneWithoutTareasRecibidasInput
    ubicacion?: UbicacionCreateNestedOneWithoutTareaInput
    obra?: ObraCreateNestedOneWithoutTareaInput
  }

  export type TareaUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_asignado?: number | null
    id_ubicacion?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    asignador?: EmpleadoUpdateOneRequiredWithoutTareasAsignadasNestedInput
    asignado?: EmpleadoUpdateOneWithoutTareasRecibidasNestedInput
    ubicacion?: UbicacionUpdateOneWithoutTareaNestedInput
    obra?: ObraUpdateOneWithoutTareaNestedInput
  }

  export type TareaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaCreateManyInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_asignado?: number | null
    id_ubicacion?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pedido_elementosCreateInput = {
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
    pedido: PedidoCreateNestedOneWithoutElementoInput
    elemento: InventarioCreateNestedOneWithoutPedidoInput
    empleado: EmpleadoCreateNestedOneWithoutPedidoInput
  }

  export type pedido_elementosUncheckedCreateInput = {
    id_pedido: number
    id_elemento: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosUpdateInput = {
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    pedido?: PedidoUpdateOneRequiredWithoutElementoNestedInput
    elemento?: InventarioUpdateOneRequiredWithoutPedidoNestedInput
    empleado?: EmpleadoUpdateOneRequiredWithoutPedidoNestedInput
  }

  export type pedido_elementosUncheckedUpdateInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosCreateManyInput = {
    id_pedido: number
    id_elemento: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosUpdateManyMutationInput = {
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosUncheckedUpdateManyInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoCreateInput = {
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    punto: PuntoCreateNestedOneWithoutEmpleadoInput
    empleado: EmpleadoCreateNestedOneWithoutUbicacionInput
  }

  export type ubicacion_empleadoUncheckedCreateInput = {
    id?: number
    id_punto: number
    id_empleado: number
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUpdateInput = {
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    punto?: PuntoUpdateOneRequiredWithoutEmpleadoNestedInput
    empleado?: EmpleadoUpdateOneRequiredWithoutUbicacionNestedInput
  }

  export type ubicacion_empleadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_punto?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoCreateManyInput = {
    id?: number
    id_punto: number
    id_empleado: number
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUpdateManyMutationInput = {
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_punto?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumEstadoEliminadoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEliminado | EnumEstadoEliminadoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEliminadoFilter<$PrismaModel> | $Enums.EstadoEliminado
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UbicacionListRelationFilter = {
    every?: UbicacionWhereInput
    some?: UbicacionWhereInput
    none?: UbicacionWhereInput
  }

  export type ProformaListRelationFilter = {
    every?: ProformaWhereInput
    some?: ProformaWhereInput
    none?: ProformaWhereInput
  }

  export type ObraListRelationFilter = {
    every?: ObraWhereInput
    some?: ObraWhereInput
    none?: ObraWhereInput
  }

  export type Ubicacion_empleadoListRelationFilter = {
    every?: ubicacion_empleadoWhereInput
    some?: ubicacion_empleadoWhereInput
    none?: ubicacion_empleadoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UbicacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProformaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ObraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ubicacion_empleadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PuntoLatLngCompoundUniqueInput = {
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
  }

  export type PuntoCountOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PuntoAvgOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PuntoMaxOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PuntoMinOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PuntoSumOrderByAggregateInput = {
    id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumEstadoEliminadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEliminado | EnumEstadoEliminadoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEliminadoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoEliminado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoEliminadoFilter<$PrismaModel>
    _max?: NestedEnumEstadoEliminadoFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type PuntoScalarRelationFilter = {
    is?: PuntoWhereInput
    isNot?: PuntoWhereInput
  }

  export type InventarioListRelationFilter = {
    every?: InventarioWhereInput
    some?: InventarioWhereInput
    none?: InventarioWhereInput
  }

  export type TareaListRelationFilter = {
    every?: TareaWhereInput
    some?: TareaWhereInput
    none?: TareaWhereInput
  }

  export type InventarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TareaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UbicacionCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_punto?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type UbicacionAvgOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type UbicacionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_punto?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type UbicacionMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_punto?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type UbicacionSumOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumCategoriasInventarioFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasInventario | EnumCategoriasInventarioFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasInventarioFilter<$PrismaModel> | $Enums.CategoriasInventario
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type CategoriaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
    tipo?: SortOrder
    tipo_unidad?: SortOrder
    venta?: SortOrder
    tiempo?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type CategoriaAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type CategoriaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
    tipo?: SortOrder
    tipo_unidad?: SortOrder
    venta?: SortOrder
    tiempo?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type CategoriaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    descripcion?: SortOrder
    tipo?: SortOrder
    tipo_unidad?: SortOrder
    venta?: SortOrder
    tiempo?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type CategoriaSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EnumCategoriasInventarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasInventario | EnumCategoriasInventarioFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasInventarioWithAggregatesFilter<$PrismaModel> | $Enums.CategoriasInventario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriasInventarioFilter<$PrismaModel>
    _max?: NestedEnumCategoriasInventarioFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type TransaccionListRelationFilter = {
    every?: TransaccionWhereInput
    some?: TransaccionWhereInput
    none?: TransaccionWhereInput
  }

  export type TransaccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PersonaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    proveedor?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PersonaAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PersonaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    proveedor?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PersonaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    ruc?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    proveedor?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PersonaSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type EnumEstadoHerramientasNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoHerramientas | EnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoHerramientasNullableFilter<$PrismaModel> | $Enums.EstadoHerramientas | null
  }

  export type CategoriaScalarRelationFilter = {
    is?: CategoriaWhereInput
    isNot?: CategoriaWhereInput
  }

  export type UbicacionScalarRelationFilter = {
    is?: UbicacionWhereInput
    isNot?: UbicacionWhereInput
  }

  export type PersonaScalarRelationFilter = {
    is?: PersonaWhereInput
    isNot?: PersonaWhereInput
  }

  export type Transaccion_elementosListRelationFilter = {
    every?: transaccion_elementosWhereInput
    some?: transaccion_elementosWhereInput
    none?: transaccion_elementosWhereInput
  }

  export type Pedido_elementosListRelationFilter = {
    every?: pedido_elementosWhereInput
    some?: pedido_elementosWhereInput
    none?: pedido_elementosWhereInput
  }

  export type Proceso_herramientasListRelationFilter = {
    every?: proceso_herramientasWhereInput
    some?: proceso_herramientasWhereInput
    none?: proceso_herramientasWhereInput
  }

  export type Proceso_inventarioListRelationFilter = {
    every?: proceso_inventarioWhereInput
    some?: proceso_inventarioWhereInput
    none?: proceso_inventarioWhereInput
  }

  export type transaccion_elementosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pedido_elementosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type proceso_herramientasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type proceso_inventarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventarioCountOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type InventarioAvgOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type InventarioMaxOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type InventarioMinOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type InventarioSumOrderByAggregateInput = {
    id?: SortOrder
    precio?: SortOrder
    descuento?: SortOrder
    cantidad?: SortOrder
    id_categoria?: SortOrder
    id_ubicacion?: SortOrder
    id_proveedor?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumEstadoHerramientasNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoHerramientas | EnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoHerramientasNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoHerramientas | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoHerramientasNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoHerramientasNullableFilter<$PrismaModel>
  }

  export type EnumCategoriasPermisoFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasPermiso | EnumCategoriasPermisoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasPermisoFilter<$PrismaModel> | $Enums.CategoriasPermiso
  }

  export type PosicionListRelationFilter = {
    every?: PosicionWhereInput
    some?: PosicionWhereInput
    none?: PosicionWhereInput
  }

  export type PosicionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermisoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    categoria?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PermisoAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PermisoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    categoria?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PermisoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    categoria?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PermisoSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EnumCategoriasPermisoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasPermiso | EnumCategoriasPermisoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasPermisoWithAggregatesFilter<$PrismaModel> | $Enums.CategoriasPermiso
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriasPermisoFilter<$PrismaModel>
    _max?: NestedEnumCategoriasPermisoFilter<$PrismaModel>
  }

  export type PermisoListRelationFilter = {
    every?: PermisoWhereInput
    some?: PermisoWhereInput
    none?: PermisoWhereInput
  }

  export type EmpleadoListRelationFilter = {
    every?: EmpleadoWhereInput
    some?: EmpleadoWhereInput
    none?: EmpleadoWhereInput
  }

  export type PermisoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmpleadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PosicionCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PosicionAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PosicionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PosicionMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PosicionSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumEstadoTrabajadorFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTrabajador | EnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTrabajadorFilter<$PrismaModel> | $Enums.EstadoTrabajador
  }

  export type PosicionScalarRelationFilter = {
    is?: PosicionWhereInput
    isNot?: PosicionWhereInput
  }

  export type Proceso_empleadosListRelationFilter = {
    every?: proceso_empleadosWhereInput
    some?: proceso_empleadosWhereInput
    none?: proceso_empleadosWhereInput
  }

  export type MensajeListRelationFilter = {
    every?: MensajeWhereInput
    some?: MensajeWhereInput
    none?: MensajeWhereInput
  }

  export type proceso_empleadosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MensajeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmpleadoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    sueldo?: SortOrder
    password?: SortOrder
    latActual?: SortOrder
    lngActual?: SortOrder
    fecha_inicio?: SortOrder
    id_posicion?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type EmpleadoAvgOrderByAggregateInput = {
    id?: SortOrder
    sueldo?: SortOrder
    latActual?: SortOrder
    lngActual?: SortOrder
    id_posicion?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EmpleadoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    sueldo?: SortOrder
    password?: SortOrder
    latActual?: SortOrder
    lngActual?: SortOrder
    fecha_inicio?: SortOrder
    id_posicion?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type EmpleadoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    mail?: SortOrder
    telefono?: SortOrder
    sueldo?: SortOrder
    password?: SortOrder
    latActual?: SortOrder
    lngActual?: SortOrder
    fecha_inicio?: SortOrder
    id_posicion?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type EmpleadoSumOrderByAggregateInput = {
    id?: SortOrder
    sueldo?: SortOrder
    latActual?: SortOrder
    lngActual?: SortOrder
    id_posicion?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumEstadoTrabajadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTrabajador | EnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTrabajadorWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTrabajador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTrabajadorFilter<$PrismaModel>
    _max?: NestedEnumEstadoTrabajadorFilter<$PrismaModel>
  }

  export type EnumCategoriaMensajesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaMensajes | EnumCategoriaMensajesFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaMensajesFilter<$PrismaModel> | $Enums.CategoriaMensajes
  }

  export type EnumEstadoMensajeFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMensaje | EnumEstadoMensajeFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMensajeFilter<$PrismaModel> | $Enums.EstadoMensaje
  }

  export type EmpleadoScalarRelationFilter = {
    is?: EmpleadoWhereInput
    isNot?: EmpleadoWhereInput
  }

  export type MensajeCountOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    titulo?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type MensajeAvgOrderByAggregateInput = {
    id?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type MensajeMaxOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    titulo?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type MensajeMinOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    titulo?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    estadoEliminado?: SortOrder
    estado?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type MensajeSumOrderByAggregateInput = {
    id?: SortOrder
    id_remitente?: SortOrder
    id_destinario?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EnumCategoriaMensajesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaMensajes | EnumCategoriaMensajesFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaMensajesWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaMensajes
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaMensajesFilter<$PrismaModel>
    _max?: NestedEnumCategoriaMensajesFilter<$PrismaModel>
  }

  export type EnumEstadoMensajeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMensaje | EnumEstadoMensajeFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMensajeWithAggregatesFilter<$PrismaModel> | $Enums.EstadoMensaje
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoMensajeFilter<$PrismaModel>
    _max?: NestedEnumEstadoMensajeFilter<$PrismaModel>
  }

  export type ObraNullableScalarRelationFilter = {
    is?: ObraWhereInput | null
    isNot?: ObraWhereInput | null
  }

  export type ProcesoListRelationFilter = {
    every?: ProcesoWhereInput
    some?: ProcesoWhereInput
    none?: ProcesoWhereInput
  }

  export type ProcesoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProformaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ProformaAvgOrderByAggregateInput = {
    id?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type ProformaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ProformaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ProformaSumOrderByAggregateInput = {
    id?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type ProformaNullableScalarRelationFilter = {
    is?: ProformaWhereInput | null
    isNot?: ProformaWhereInput | null
  }

  export type ProcesoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_proforma?: SortOrder
    id_obra?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ProcesoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_proforma?: SortOrder
    id_obra?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type ProcesoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_proforma?: SortOrder
    id_obra?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ProcesoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_proforma?: SortOrder
    id_obra?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ProcesoSumOrderByAggregateInput = {
    id?: SortOrder
    id_proforma?: SortOrder
    id_obra?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ProcesoScalarRelationFilter = {
    is?: ProcesoWhereInput
    isNot?: ProcesoWhereInput
  }

  export type HorarioListRelationFilter = {
    every?: HorarioWhereInput
    some?: HorarioWhereInput
    none?: HorarioWhereInput
  }

  export type HorarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type proceso_empleadosCountOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_empleadosAvgOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
  }

  export type proceso_empleadosMaxOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_empleadosMinOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_empleadosSumOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    sueldo?: SortOrder
    id_proceso?: SortOrder
    id_empleado?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type InventarioScalarRelationFilter = {
    is?: InventarioWhereInput
    isNot?: InventarioWhereInput
  }

  export type proceso_herramientasCountOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_herramientasAvgOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
  }

  export type proceso_herramientasMaxOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_herramientasMinOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_herramientasSumOrderByAggregateInput = {
    id?: SortOrder
    horas?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_herramienta?: SortOrder
  }

  export type proceso_inventarioCountOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_inventarioAvgOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
  }

  export type proceso_inventarioMaxOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_inventarioMinOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type proceso_inventarioSumOrderByAggregateInput = {
    id?: SortOrder
    cantidad?: SortOrder
    descuento?: SortOrder
    precio?: SortOrder
    id_proceso?: SortOrder
    id_elemento?: SortOrder
  }

  export type EnumEstadoObraFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoObra | EnumEstadoObraFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoObraFilter<$PrismaModel> | $Enums.EstadoObra
  }

  export type ProformaScalarRelationFilter = {
    is?: ProformaWhereInput
    isNot?: ProformaWhereInput
  }

  export type PedidoListRelationFilter = {
    every?: PedidoWhereInput
    some?: PedidoWhereInput
    none?: PedidoWhereInput
  }

  export type PedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ObraCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ObraAvgOrderByAggregateInput = {
    id?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type ObraMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ObraMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tiempo_esperado?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type ObraSumOrderByAggregateInput = {
    id?: SortOrder
    porcentaje_venta?: SortOrder
    id_punto?: SortOrder
    id_cliente?: SortOrder
    id_proforma?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EnumEstadoObraWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoObra | EnumEstadoObraFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoObraWithAggregatesFilter<$PrismaModel> | $Enums.EstadoObra
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoObraFilter<$PrismaModel>
    _max?: NestedEnumEstadoObraFilter<$PrismaModel>
  }

  export type CompraNullableScalarRelationFilter = {
    is?: CompraWhereInput | null
    isNot?: CompraWhereInput | null
  }

  export type VentaNullableScalarRelationFilter = {
    is?: VentaWhereInput | null
    isNot?: VentaWhereInput | null
  }

  export type DevolucionNullableScalarRelationFilter = {
    is?: DevolucionWhereInput | null
    isNot?: DevolucionWhereInput | null
  }

  export type TransaccionCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrder
    id_compra?: SortOrder
    id_venta?: SortOrder
    id_devolucion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type TransaccionAvgOrderByAggregateInput = {
    id?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrder
    id_compra?: SortOrder
    id_venta?: SortOrder
    id_devolucion?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type TransaccionMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrder
    id_compra?: SortOrder
    id_venta?: SortOrder
    id_devolucion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type TransaccionMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrder
    id_compra?: SortOrder
    id_venta?: SortOrder
    id_devolucion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type TransaccionSumOrderByAggregateInput = {
    id?: SortOrder
    id_empleado?: SortOrder
    id_persona?: SortOrder
    id_obra?: SortOrder
    id_compra?: SortOrder
    id_venta?: SortOrder
    id_devolucion?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type TransaccionScalarRelationFilter = {
    is?: TransaccionWhereInput
    isNot?: TransaccionWhereInput
  }

  export type transaccion_elementosCountOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type transaccion_elementosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
  }

  export type transaccion_elementosMaxOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type transaccion_elementosMinOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type transaccion_elementosSumOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
    id_elementos?: SortOrder
    cantidad?: SortOrder
  }

  export type CompraCountOrderByAggregateInput = {
    id?: SortOrder
    fechaCredito?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type CompraAvgOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
  }

  export type CompraMaxOrderByAggregateInput = {
    id?: SortOrder
    fechaCredito?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type CompraMinOrderByAggregateInput = {
    id?: SortOrder
    fechaCredito?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type CompraSumOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
  }

  export type VentaCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type VentaAvgOrderByAggregateInput = {
    id?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
  }

  export type VentaMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type VentaMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type VentaSumOrderByAggregateInput = {
    id?: SortOrder
    porcentaje?: SortOrder
    id_transaccion?: SortOrder
  }

  export type DevolucionCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type DevolucionAvgOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
  }

  export type DevolucionMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type DevolucionMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type DevolucionSumOrderByAggregateInput = {
    id?: SortOrder
    id_transaccion?: SortOrder
  }

  export type DiaListRelationFilter = {
    every?: DiaWhereInput
    some?: DiaWhereInput
    none?: DiaWhereInput
  }

  export type DiaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HorarioCountOrderByAggregateInput = {
    id?: SortOrder
    hora_inicio?: SortOrder
    hora_final?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type HorarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type HorarioMaxOrderByAggregateInput = {
    id?: SortOrder
    hora_inicio?: SortOrder
    hora_final?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type HorarioMinOrderByAggregateInput = {
    id?: SortOrder
    hora_inicio?: SortOrder
    hora_final?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type HorarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumDiasSemanaFilter<$PrismaModel = never> = {
    equals?: $Enums.DiasSemana | EnumDiasSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    notIn?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    not?: NestedEnumDiasSemanaFilter<$PrismaModel> | $Enums.DiasSemana
  }

  export type DiaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type DiaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DiaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type DiaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type DiaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumDiasSemanaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DiasSemana | EnumDiasSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    notIn?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    not?: NestedEnumDiasSemanaWithAggregatesFilter<$PrismaModel> | $Enums.DiasSemana
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiasSemanaFilter<$PrismaModel>
    _max?: NestedEnumDiasSemanaFilter<$PrismaModel>
  }

  export type ObraScalarRelationFilter = {
    is?: ObraWhereInput
    isNot?: ObraWhereInput
  }

  export type PedidoCountOrderByAggregateInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PedidoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type PedidoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PedidoMinOrderByAggregateInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type PedidoSumOrderByAggregateInput = {
    id?: SortOrder
    id_obra?: SortOrder
    id_transaccion?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EnumEstadoTareaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaFilter<$PrismaModel> | $Enums.EstadoTarea
  }

  export type EmpleadoNullableScalarRelationFilter = {
    is?: EmpleadoWhereInput | null
    isNot?: EmpleadoWhereInput | null
  }

  export type UbicacionNullableScalarRelationFilter = {
    is?: UbicacionWhereInput | null
    isNot?: UbicacionWhereInput | null
  }

  export type TareaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrder
    id_ubicacion?: SortOrder
    id_obra?: SortOrder
    fecha_final?: SortOrder
    fecha_inicio?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type TareaAvgOrderByAggregateInput = {
    id?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrder
    id_ubicacion?: SortOrder
    id_obra?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type TareaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrder
    id_ubicacion?: SortOrder
    id_obra?: SortOrder
    fecha_final?: SortOrder
    fecha_inicio?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type TareaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrder
    id_ubicacion?: SortOrder
    id_obra?: SortOrder
    fecha_final?: SortOrder
    fecha_inicio?: SortOrder
    estadoEliminado?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
    createdDate?: SortOrder
    updatedDate?: SortOrder
    deletedDate?: SortOrder
  }

  export type TareaSumOrderByAggregateInput = {
    id?: SortOrder
    id_asignador?: SortOrder
    id_asignado?: SortOrder
    id_ubicacion?: SortOrder
    id_obra?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    deletedBy?: SortOrder
  }

  export type EnumEstadoTareaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTarea
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTareaFilter<$PrismaModel>
    _max?: NestedEnumEstadoTareaFilter<$PrismaModel>
  }

  export type EnumEstadoPedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedido | EnumEstadoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoFilter<$PrismaModel> | $Enums.EstadoPedido
  }

  export type PedidoScalarRelationFilter = {
    is?: PedidoWhereInput
    isNot?: PedidoWhereInput
  }

  export type pedido_elementosId_pedidoId_elementoCompoundUniqueInput = {
    id_pedido: number
    id_elemento: number
  }

  export type pedido_elementosCountOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type pedido_elementosAvgOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
  }

  export type pedido_elementosMaxOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type pedido_elementosMinOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type pedido_elementosSumOrderByAggregateInput = {
    id_pedido?: SortOrder
    id_elemento?: SortOrder
    id_empleado?: SortOrder
  }

  export type EnumEstadoPedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedido | EnumEstadoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPedidoFilter<$PrismaModel>
    _max?: NestedEnumEstadoPedidoFilter<$PrismaModel>
  }

  export type ubicacion_empleadoCountOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type ubicacion_empleadoAvgOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
  }

  export type ubicacion_empleadoMaxOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type ubicacion_empleadoMinOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    estadoEliminado?: SortOrder
  }

  export type ubicacion_empleadoSumOrderByAggregateInput = {
    id?: SortOrder
    id_punto?: SortOrder
    id_empleado?: SortOrder
  }

  export type UbicacionCreateNestedManyWithoutPuntoInput = {
    create?: XOR<UbicacionCreateWithoutPuntoInput, UbicacionUncheckedCreateWithoutPuntoInput> | UbicacionCreateWithoutPuntoInput[] | UbicacionUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: UbicacionCreateOrConnectWithoutPuntoInput | UbicacionCreateOrConnectWithoutPuntoInput[]
    createMany?: UbicacionCreateManyPuntoInputEnvelope
    connect?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
  }

  export type ProformaCreateNestedManyWithoutPuntoInput = {
    create?: XOR<ProformaCreateWithoutPuntoInput, ProformaUncheckedCreateWithoutPuntoInput> | ProformaCreateWithoutPuntoInput[] | ProformaUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutPuntoInput | ProformaCreateOrConnectWithoutPuntoInput[]
    createMany?: ProformaCreateManyPuntoInputEnvelope
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
  }

  export type ObraCreateNestedManyWithoutPuntoInput = {
    create?: XOR<ObraCreateWithoutPuntoInput, ObraUncheckedCreateWithoutPuntoInput> | ObraCreateWithoutPuntoInput[] | ObraUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutPuntoInput | ObraCreateOrConnectWithoutPuntoInput[]
    createMany?: ObraCreateManyPuntoInputEnvelope
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
  }

  export type ubicacion_empleadoCreateNestedManyWithoutPuntoInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutPuntoInput, ubicacion_empleadoUncheckedCreateWithoutPuntoInput> | ubicacion_empleadoCreateWithoutPuntoInput[] | ubicacion_empleadoUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutPuntoInput | ubicacion_empleadoCreateOrConnectWithoutPuntoInput[]
    createMany?: ubicacion_empleadoCreateManyPuntoInputEnvelope
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
  }

  export type UbicacionUncheckedCreateNestedManyWithoutPuntoInput = {
    create?: XOR<UbicacionCreateWithoutPuntoInput, UbicacionUncheckedCreateWithoutPuntoInput> | UbicacionCreateWithoutPuntoInput[] | UbicacionUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: UbicacionCreateOrConnectWithoutPuntoInput | UbicacionCreateOrConnectWithoutPuntoInput[]
    createMany?: UbicacionCreateManyPuntoInputEnvelope
    connect?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
  }

  export type ProformaUncheckedCreateNestedManyWithoutPuntoInput = {
    create?: XOR<ProformaCreateWithoutPuntoInput, ProformaUncheckedCreateWithoutPuntoInput> | ProformaCreateWithoutPuntoInput[] | ProformaUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutPuntoInput | ProformaCreateOrConnectWithoutPuntoInput[]
    createMany?: ProformaCreateManyPuntoInputEnvelope
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
  }

  export type ObraUncheckedCreateNestedManyWithoutPuntoInput = {
    create?: XOR<ObraCreateWithoutPuntoInput, ObraUncheckedCreateWithoutPuntoInput> | ObraCreateWithoutPuntoInput[] | ObraUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutPuntoInput | ObraCreateOrConnectWithoutPuntoInput[]
    createMany?: ObraCreateManyPuntoInputEnvelope
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
  }

  export type ubicacion_empleadoUncheckedCreateNestedManyWithoutPuntoInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutPuntoInput, ubicacion_empleadoUncheckedCreateWithoutPuntoInput> | ubicacion_empleadoCreateWithoutPuntoInput[] | ubicacion_empleadoUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutPuntoInput | ubicacion_empleadoCreateOrConnectWithoutPuntoInput[]
    createMany?: ubicacion_empleadoCreateManyPuntoInputEnvelope
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumEstadoEliminadoFieldUpdateOperationsInput = {
    set?: $Enums.EstadoEliminado
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UbicacionUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<UbicacionCreateWithoutPuntoInput, UbicacionUncheckedCreateWithoutPuntoInput> | UbicacionCreateWithoutPuntoInput[] | UbicacionUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: UbicacionCreateOrConnectWithoutPuntoInput | UbicacionCreateOrConnectWithoutPuntoInput[]
    upsert?: UbicacionUpsertWithWhereUniqueWithoutPuntoInput | UbicacionUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: UbicacionCreateManyPuntoInputEnvelope
    set?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    disconnect?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    delete?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    connect?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    update?: UbicacionUpdateWithWhereUniqueWithoutPuntoInput | UbicacionUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: UbicacionUpdateManyWithWhereWithoutPuntoInput | UbicacionUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: UbicacionScalarWhereInput | UbicacionScalarWhereInput[]
  }

  export type ProformaUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<ProformaCreateWithoutPuntoInput, ProformaUncheckedCreateWithoutPuntoInput> | ProformaCreateWithoutPuntoInput[] | ProformaUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutPuntoInput | ProformaCreateOrConnectWithoutPuntoInput[]
    upsert?: ProformaUpsertWithWhereUniqueWithoutPuntoInput | ProformaUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: ProformaCreateManyPuntoInputEnvelope
    set?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    disconnect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    delete?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    update?: ProformaUpdateWithWhereUniqueWithoutPuntoInput | ProformaUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: ProformaUpdateManyWithWhereWithoutPuntoInput | ProformaUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: ProformaScalarWhereInput | ProformaScalarWhereInput[]
  }

  export type ObraUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<ObraCreateWithoutPuntoInput, ObraUncheckedCreateWithoutPuntoInput> | ObraCreateWithoutPuntoInput[] | ObraUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutPuntoInput | ObraCreateOrConnectWithoutPuntoInput[]
    upsert?: ObraUpsertWithWhereUniqueWithoutPuntoInput | ObraUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: ObraCreateManyPuntoInputEnvelope
    set?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    disconnect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    delete?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    update?: ObraUpdateWithWhereUniqueWithoutPuntoInput | ObraUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: ObraUpdateManyWithWhereWithoutPuntoInput | ObraUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: ObraScalarWhereInput | ObraScalarWhereInput[]
  }

  export type ubicacion_empleadoUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutPuntoInput, ubicacion_empleadoUncheckedCreateWithoutPuntoInput> | ubicacion_empleadoCreateWithoutPuntoInput[] | ubicacion_empleadoUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutPuntoInput | ubicacion_empleadoCreateOrConnectWithoutPuntoInput[]
    upsert?: ubicacion_empleadoUpsertWithWhereUniqueWithoutPuntoInput | ubicacion_empleadoUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: ubicacion_empleadoCreateManyPuntoInputEnvelope
    set?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    disconnect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    delete?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    update?: ubicacion_empleadoUpdateWithWhereUniqueWithoutPuntoInput | ubicacion_empleadoUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: ubicacion_empleadoUpdateManyWithWhereWithoutPuntoInput | ubicacion_empleadoUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: ubicacion_empleadoScalarWhereInput | ubicacion_empleadoScalarWhereInput[]
  }

  export type UbicacionUncheckedUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<UbicacionCreateWithoutPuntoInput, UbicacionUncheckedCreateWithoutPuntoInput> | UbicacionCreateWithoutPuntoInput[] | UbicacionUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: UbicacionCreateOrConnectWithoutPuntoInput | UbicacionCreateOrConnectWithoutPuntoInput[]
    upsert?: UbicacionUpsertWithWhereUniqueWithoutPuntoInput | UbicacionUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: UbicacionCreateManyPuntoInputEnvelope
    set?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    disconnect?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    delete?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    connect?: UbicacionWhereUniqueInput | UbicacionWhereUniqueInput[]
    update?: UbicacionUpdateWithWhereUniqueWithoutPuntoInput | UbicacionUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: UbicacionUpdateManyWithWhereWithoutPuntoInput | UbicacionUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: UbicacionScalarWhereInput | UbicacionScalarWhereInput[]
  }

  export type ProformaUncheckedUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<ProformaCreateWithoutPuntoInput, ProformaUncheckedCreateWithoutPuntoInput> | ProformaCreateWithoutPuntoInput[] | ProformaUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutPuntoInput | ProformaCreateOrConnectWithoutPuntoInput[]
    upsert?: ProformaUpsertWithWhereUniqueWithoutPuntoInput | ProformaUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: ProformaCreateManyPuntoInputEnvelope
    set?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    disconnect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    delete?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    update?: ProformaUpdateWithWhereUniqueWithoutPuntoInput | ProformaUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: ProformaUpdateManyWithWhereWithoutPuntoInput | ProformaUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: ProformaScalarWhereInput | ProformaScalarWhereInput[]
  }

  export type ObraUncheckedUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<ObraCreateWithoutPuntoInput, ObraUncheckedCreateWithoutPuntoInput> | ObraCreateWithoutPuntoInput[] | ObraUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutPuntoInput | ObraCreateOrConnectWithoutPuntoInput[]
    upsert?: ObraUpsertWithWhereUniqueWithoutPuntoInput | ObraUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: ObraCreateManyPuntoInputEnvelope
    set?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    disconnect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    delete?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    update?: ObraUpdateWithWhereUniqueWithoutPuntoInput | ObraUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: ObraUpdateManyWithWhereWithoutPuntoInput | ObraUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: ObraScalarWhereInput | ObraScalarWhereInput[]
  }

  export type ubicacion_empleadoUncheckedUpdateManyWithoutPuntoNestedInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutPuntoInput, ubicacion_empleadoUncheckedCreateWithoutPuntoInput> | ubicacion_empleadoCreateWithoutPuntoInput[] | ubicacion_empleadoUncheckedCreateWithoutPuntoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutPuntoInput | ubicacion_empleadoCreateOrConnectWithoutPuntoInput[]
    upsert?: ubicacion_empleadoUpsertWithWhereUniqueWithoutPuntoInput | ubicacion_empleadoUpsertWithWhereUniqueWithoutPuntoInput[]
    createMany?: ubicacion_empleadoCreateManyPuntoInputEnvelope
    set?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    disconnect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    delete?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    update?: ubicacion_empleadoUpdateWithWhereUniqueWithoutPuntoInput | ubicacion_empleadoUpdateWithWhereUniqueWithoutPuntoInput[]
    updateMany?: ubicacion_empleadoUpdateManyWithWhereWithoutPuntoInput | ubicacion_empleadoUpdateManyWithWhereWithoutPuntoInput[]
    deleteMany?: ubicacion_empleadoScalarWhereInput | ubicacion_empleadoScalarWhereInput[]
  }

  export type PuntoCreateNestedOneWithoutUbicacionInput = {
    create?: XOR<PuntoCreateWithoutUbicacionInput, PuntoUncheckedCreateWithoutUbicacionInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutUbicacionInput
    connect?: PuntoWhereUniqueInput
  }

  export type InventarioCreateNestedManyWithoutUbicacionInput = {
    create?: XOR<InventarioCreateWithoutUbicacionInput, InventarioUncheckedCreateWithoutUbicacionInput> | InventarioCreateWithoutUbicacionInput[] | InventarioUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutUbicacionInput | InventarioCreateOrConnectWithoutUbicacionInput[]
    createMany?: InventarioCreateManyUbicacionInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type TareaCreateNestedManyWithoutUbicacionInput = {
    create?: XOR<TareaCreateWithoutUbicacionInput, TareaUncheckedCreateWithoutUbicacionInput> | TareaCreateWithoutUbicacionInput[] | TareaUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutUbicacionInput | TareaCreateOrConnectWithoutUbicacionInput[]
    createMany?: TareaCreateManyUbicacionInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutUbicacionInput = {
    create?: XOR<InventarioCreateWithoutUbicacionInput, InventarioUncheckedCreateWithoutUbicacionInput> | InventarioCreateWithoutUbicacionInput[] | InventarioUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutUbicacionInput | InventarioCreateOrConnectWithoutUbicacionInput[]
    createMany?: InventarioCreateManyUbicacionInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type TareaUncheckedCreateNestedManyWithoutUbicacionInput = {
    create?: XOR<TareaCreateWithoutUbicacionInput, TareaUncheckedCreateWithoutUbicacionInput> | TareaCreateWithoutUbicacionInput[] | TareaUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutUbicacionInput | TareaCreateOrConnectWithoutUbicacionInput[]
    createMany?: TareaCreateManyUbicacionInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type PuntoUpdateOneRequiredWithoutUbicacionNestedInput = {
    create?: XOR<PuntoCreateWithoutUbicacionInput, PuntoUncheckedCreateWithoutUbicacionInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutUbicacionInput
    upsert?: PuntoUpsertWithoutUbicacionInput
    connect?: PuntoWhereUniqueInput
    update?: XOR<XOR<PuntoUpdateToOneWithWhereWithoutUbicacionInput, PuntoUpdateWithoutUbicacionInput>, PuntoUncheckedUpdateWithoutUbicacionInput>
  }

  export type InventarioUpdateManyWithoutUbicacionNestedInput = {
    create?: XOR<InventarioCreateWithoutUbicacionInput, InventarioUncheckedCreateWithoutUbicacionInput> | InventarioCreateWithoutUbicacionInput[] | InventarioUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutUbicacionInput | InventarioCreateOrConnectWithoutUbicacionInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutUbicacionInput | InventarioUpsertWithWhereUniqueWithoutUbicacionInput[]
    createMany?: InventarioCreateManyUbicacionInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutUbicacionInput | InventarioUpdateWithWhereUniqueWithoutUbicacionInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutUbicacionInput | InventarioUpdateManyWithWhereWithoutUbicacionInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type TareaUpdateManyWithoutUbicacionNestedInput = {
    create?: XOR<TareaCreateWithoutUbicacionInput, TareaUncheckedCreateWithoutUbicacionInput> | TareaCreateWithoutUbicacionInput[] | TareaUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutUbicacionInput | TareaCreateOrConnectWithoutUbicacionInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutUbicacionInput | TareaUpsertWithWhereUniqueWithoutUbicacionInput[]
    createMany?: TareaCreateManyUbicacionInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutUbicacionInput | TareaUpdateWithWhereUniqueWithoutUbicacionInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutUbicacionInput | TareaUpdateManyWithWhereWithoutUbicacionInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type InventarioUncheckedUpdateManyWithoutUbicacionNestedInput = {
    create?: XOR<InventarioCreateWithoutUbicacionInput, InventarioUncheckedCreateWithoutUbicacionInput> | InventarioCreateWithoutUbicacionInput[] | InventarioUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutUbicacionInput | InventarioCreateOrConnectWithoutUbicacionInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutUbicacionInput | InventarioUpsertWithWhereUniqueWithoutUbicacionInput[]
    createMany?: InventarioCreateManyUbicacionInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutUbicacionInput | InventarioUpdateWithWhereUniqueWithoutUbicacionInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutUbicacionInput | InventarioUpdateManyWithWhereWithoutUbicacionInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type TareaUncheckedUpdateManyWithoutUbicacionNestedInput = {
    create?: XOR<TareaCreateWithoutUbicacionInput, TareaUncheckedCreateWithoutUbicacionInput> | TareaCreateWithoutUbicacionInput[] | TareaUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutUbicacionInput | TareaCreateOrConnectWithoutUbicacionInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutUbicacionInput | TareaUpsertWithWhereUniqueWithoutUbicacionInput[]
    createMany?: TareaCreateManyUbicacionInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutUbicacionInput | TareaUpdateWithWhereUniqueWithoutUbicacionInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutUbicacionInput | TareaUpdateManyWithWhereWithoutUbicacionInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type InventarioCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type EnumCategoriasInventarioFieldUpdateOperationsInput = {
    set?: $Enums.CategoriasInventario
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type InventarioUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutCategoriaInput | InventarioUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutCategoriaInput | InventarioUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutCategoriaInput | InventarioUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type InventarioUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput> | InventarioCreateWithoutCategoriaInput[] | InventarioUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutCategoriaInput | InventarioCreateOrConnectWithoutCategoriaInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutCategoriaInput | InventarioUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: InventarioCreateManyCategoriaInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutCategoriaInput | InventarioUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutCategoriaInput | InventarioUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type InventarioCreateNestedManyWithoutProveedorInput = {
    create?: XOR<InventarioCreateWithoutProveedorInput, InventarioUncheckedCreateWithoutProveedorInput> | InventarioCreateWithoutProveedorInput[] | InventarioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProveedorInput | InventarioCreateOrConnectWithoutProveedorInput[]
    createMany?: InventarioCreateManyProveedorInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type ProformaCreateNestedManyWithoutClienteInput = {
    create?: XOR<ProformaCreateWithoutClienteInput, ProformaUncheckedCreateWithoutClienteInput> | ProformaCreateWithoutClienteInput[] | ProformaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutClienteInput | ProformaCreateOrConnectWithoutClienteInput[]
    createMany?: ProformaCreateManyClienteInputEnvelope
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
  }

  export type ObraCreateNestedManyWithoutClienteInput = {
    create?: XOR<ObraCreateWithoutClienteInput, ObraUncheckedCreateWithoutClienteInput> | ObraCreateWithoutClienteInput[] | ObraUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutClienteInput | ObraCreateOrConnectWithoutClienteInput[]
    createMany?: ObraCreateManyClienteInputEnvelope
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
  }

  export type TransaccionCreateNestedManyWithoutPersonaInput = {
    create?: XOR<TransaccionCreateWithoutPersonaInput, TransaccionUncheckedCreateWithoutPersonaInput> | TransaccionCreateWithoutPersonaInput[] | TransaccionUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutPersonaInput | TransaccionCreateOrConnectWithoutPersonaInput[]
    createMany?: TransaccionCreateManyPersonaInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<InventarioCreateWithoutProveedorInput, InventarioUncheckedCreateWithoutProveedorInput> | InventarioCreateWithoutProveedorInput[] | InventarioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProveedorInput | InventarioCreateOrConnectWithoutProveedorInput[]
    createMany?: InventarioCreateManyProveedorInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type ProformaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ProformaCreateWithoutClienteInput, ProformaUncheckedCreateWithoutClienteInput> | ProformaCreateWithoutClienteInput[] | ProformaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutClienteInput | ProformaCreateOrConnectWithoutClienteInput[]
    createMany?: ProformaCreateManyClienteInputEnvelope
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
  }

  export type ObraUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ObraCreateWithoutClienteInput, ObraUncheckedCreateWithoutClienteInput> | ObraCreateWithoutClienteInput[] | ObraUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutClienteInput | ObraCreateOrConnectWithoutClienteInput[]
    createMany?: ObraCreateManyClienteInputEnvelope
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
  }

  export type TransaccionUncheckedCreateNestedManyWithoutPersonaInput = {
    create?: XOR<TransaccionCreateWithoutPersonaInput, TransaccionUncheckedCreateWithoutPersonaInput> | TransaccionCreateWithoutPersonaInput[] | TransaccionUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutPersonaInput | TransaccionCreateOrConnectWithoutPersonaInput[]
    createMany?: TransaccionCreateManyPersonaInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type InventarioUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<InventarioCreateWithoutProveedorInput, InventarioUncheckedCreateWithoutProveedorInput> | InventarioCreateWithoutProveedorInput[] | InventarioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProveedorInput | InventarioCreateOrConnectWithoutProveedorInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutProveedorInput | InventarioUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: InventarioCreateManyProveedorInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutProveedorInput | InventarioUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutProveedorInput | InventarioUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type ProformaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ProformaCreateWithoutClienteInput, ProformaUncheckedCreateWithoutClienteInput> | ProformaCreateWithoutClienteInput[] | ProformaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutClienteInput | ProformaCreateOrConnectWithoutClienteInput[]
    upsert?: ProformaUpsertWithWhereUniqueWithoutClienteInput | ProformaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ProformaCreateManyClienteInputEnvelope
    set?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    disconnect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    delete?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    update?: ProformaUpdateWithWhereUniqueWithoutClienteInput | ProformaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ProformaUpdateManyWithWhereWithoutClienteInput | ProformaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ProformaScalarWhereInput | ProformaScalarWhereInput[]
  }

  export type ObraUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ObraCreateWithoutClienteInput, ObraUncheckedCreateWithoutClienteInput> | ObraCreateWithoutClienteInput[] | ObraUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutClienteInput | ObraCreateOrConnectWithoutClienteInput[]
    upsert?: ObraUpsertWithWhereUniqueWithoutClienteInput | ObraUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ObraCreateManyClienteInputEnvelope
    set?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    disconnect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    delete?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    update?: ObraUpdateWithWhereUniqueWithoutClienteInput | ObraUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ObraUpdateManyWithWhereWithoutClienteInput | ObraUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ObraScalarWhereInput | ObraScalarWhereInput[]
  }

  export type TransaccionUpdateManyWithoutPersonaNestedInput = {
    create?: XOR<TransaccionCreateWithoutPersonaInput, TransaccionUncheckedCreateWithoutPersonaInput> | TransaccionCreateWithoutPersonaInput[] | TransaccionUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutPersonaInput | TransaccionCreateOrConnectWithoutPersonaInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutPersonaInput | TransaccionUpsertWithWhereUniqueWithoutPersonaInput[]
    createMany?: TransaccionCreateManyPersonaInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutPersonaInput | TransaccionUpdateWithWhereUniqueWithoutPersonaInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutPersonaInput | TransaccionUpdateManyWithWhereWithoutPersonaInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type InventarioUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<InventarioCreateWithoutProveedorInput, InventarioUncheckedCreateWithoutProveedorInput> | InventarioCreateWithoutProveedorInput[] | InventarioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProveedorInput | InventarioCreateOrConnectWithoutProveedorInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutProveedorInput | InventarioUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: InventarioCreateManyProveedorInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutProveedorInput | InventarioUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutProveedorInput | InventarioUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type ProformaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ProformaCreateWithoutClienteInput, ProformaUncheckedCreateWithoutClienteInput> | ProformaCreateWithoutClienteInput[] | ProformaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ProformaCreateOrConnectWithoutClienteInput | ProformaCreateOrConnectWithoutClienteInput[]
    upsert?: ProformaUpsertWithWhereUniqueWithoutClienteInput | ProformaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ProformaCreateManyClienteInputEnvelope
    set?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    disconnect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    delete?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    connect?: ProformaWhereUniqueInput | ProformaWhereUniqueInput[]
    update?: ProformaUpdateWithWhereUniqueWithoutClienteInput | ProformaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ProformaUpdateManyWithWhereWithoutClienteInput | ProformaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ProformaScalarWhereInput | ProformaScalarWhereInput[]
  }

  export type ObraUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ObraCreateWithoutClienteInput, ObraUncheckedCreateWithoutClienteInput> | ObraCreateWithoutClienteInput[] | ObraUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ObraCreateOrConnectWithoutClienteInput | ObraCreateOrConnectWithoutClienteInput[]
    upsert?: ObraUpsertWithWhereUniqueWithoutClienteInput | ObraUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ObraCreateManyClienteInputEnvelope
    set?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    disconnect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    delete?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    connect?: ObraWhereUniqueInput | ObraWhereUniqueInput[]
    update?: ObraUpdateWithWhereUniqueWithoutClienteInput | ObraUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ObraUpdateManyWithWhereWithoutClienteInput | ObraUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ObraScalarWhereInput | ObraScalarWhereInput[]
  }

  export type TransaccionUncheckedUpdateManyWithoutPersonaNestedInput = {
    create?: XOR<TransaccionCreateWithoutPersonaInput, TransaccionUncheckedCreateWithoutPersonaInput> | TransaccionCreateWithoutPersonaInput[] | TransaccionUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutPersonaInput | TransaccionCreateOrConnectWithoutPersonaInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutPersonaInput | TransaccionUpsertWithWhereUniqueWithoutPersonaInput[]
    createMany?: TransaccionCreateManyPersonaInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutPersonaInput | TransaccionUpdateWithWhereUniqueWithoutPersonaInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutPersonaInput | TransaccionUpdateManyWithWhereWithoutPersonaInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type CategoriaCreateNestedOneWithoutInventarioInput = {
    create?: XOR<CategoriaCreateWithoutInventarioInput, CategoriaUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutInventarioInput
    connect?: CategoriaWhereUniqueInput
  }

  export type UbicacionCreateNestedOneWithoutInventarioInput = {
    create?: XOR<UbicacionCreateWithoutInventarioInput, UbicacionUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: UbicacionCreateOrConnectWithoutInventarioInput
    connect?: UbicacionWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutInventarioInput = {
    create?: XOR<PersonaCreateWithoutInventarioInput, PersonaUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutInventarioInput
    connect?: PersonaWhereUniqueInput
  }

  export type transaccion_elementosCreateNestedManyWithoutElementoInput = {
    create?: XOR<transaccion_elementosCreateWithoutElementoInput, transaccion_elementosUncheckedCreateWithoutElementoInput> | transaccion_elementosCreateWithoutElementoInput[] | transaccion_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutElementoInput | transaccion_elementosCreateOrConnectWithoutElementoInput[]
    createMany?: transaccion_elementosCreateManyElementoInputEnvelope
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
  }

  export type pedido_elementosCreateNestedManyWithoutElementoInput = {
    create?: XOR<pedido_elementosCreateWithoutElementoInput, pedido_elementosUncheckedCreateWithoutElementoInput> | pedido_elementosCreateWithoutElementoInput[] | pedido_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutElementoInput | pedido_elementosCreateOrConnectWithoutElementoInput[]
    createMany?: pedido_elementosCreateManyElementoInputEnvelope
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
  }

  export type proceso_herramientasCreateNestedManyWithoutHerramientaInput = {
    create?: XOR<proceso_herramientasCreateWithoutHerramientaInput, proceso_herramientasUncheckedCreateWithoutHerramientaInput> | proceso_herramientasCreateWithoutHerramientaInput[] | proceso_herramientasUncheckedCreateWithoutHerramientaInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHerramientaInput | proceso_herramientasCreateOrConnectWithoutHerramientaInput[]
    createMany?: proceso_herramientasCreateManyHerramientaInputEnvelope
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
  }

  export type proceso_inventarioCreateNestedManyWithoutElementoInput = {
    create?: XOR<proceso_inventarioCreateWithoutElementoInput, proceso_inventarioUncheckedCreateWithoutElementoInput> | proceso_inventarioCreateWithoutElementoInput[] | proceso_inventarioUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutElementoInput | proceso_inventarioCreateOrConnectWithoutElementoInput[]
    createMany?: proceso_inventarioCreateManyElementoInputEnvelope
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
  }

  export type transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput = {
    create?: XOR<transaccion_elementosCreateWithoutElementoInput, transaccion_elementosUncheckedCreateWithoutElementoInput> | transaccion_elementosCreateWithoutElementoInput[] | transaccion_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutElementoInput | transaccion_elementosCreateOrConnectWithoutElementoInput[]
    createMany?: transaccion_elementosCreateManyElementoInputEnvelope
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
  }

  export type pedido_elementosUncheckedCreateNestedManyWithoutElementoInput = {
    create?: XOR<pedido_elementosCreateWithoutElementoInput, pedido_elementosUncheckedCreateWithoutElementoInput> | pedido_elementosCreateWithoutElementoInput[] | pedido_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutElementoInput | pedido_elementosCreateOrConnectWithoutElementoInput[]
    createMany?: pedido_elementosCreateManyElementoInputEnvelope
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
  }

  export type proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput = {
    create?: XOR<proceso_herramientasCreateWithoutHerramientaInput, proceso_herramientasUncheckedCreateWithoutHerramientaInput> | proceso_herramientasCreateWithoutHerramientaInput[] | proceso_herramientasUncheckedCreateWithoutHerramientaInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHerramientaInput | proceso_herramientasCreateOrConnectWithoutHerramientaInput[]
    createMany?: proceso_herramientasCreateManyHerramientaInputEnvelope
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
  }

  export type proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput = {
    create?: XOR<proceso_inventarioCreateWithoutElementoInput, proceso_inventarioUncheckedCreateWithoutElementoInput> | proceso_inventarioCreateWithoutElementoInput[] | proceso_inventarioUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutElementoInput | proceso_inventarioCreateOrConnectWithoutElementoInput[]
    createMany?: proceso_inventarioCreateManyElementoInputEnvelope
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumEstadoHerramientasFieldUpdateOperationsInput = {
    set?: $Enums.EstadoHerramientas | null
  }

  export type CategoriaUpdateOneRequiredWithoutInventarioNestedInput = {
    create?: XOR<CategoriaCreateWithoutInventarioInput, CategoriaUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: CategoriaCreateOrConnectWithoutInventarioInput
    upsert?: CategoriaUpsertWithoutInventarioInput
    connect?: CategoriaWhereUniqueInput
    update?: XOR<XOR<CategoriaUpdateToOneWithWhereWithoutInventarioInput, CategoriaUpdateWithoutInventarioInput>, CategoriaUncheckedUpdateWithoutInventarioInput>
  }

  export type UbicacionUpdateOneRequiredWithoutInventarioNestedInput = {
    create?: XOR<UbicacionCreateWithoutInventarioInput, UbicacionUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: UbicacionCreateOrConnectWithoutInventarioInput
    upsert?: UbicacionUpsertWithoutInventarioInput
    connect?: UbicacionWhereUniqueInput
    update?: XOR<XOR<UbicacionUpdateToOneWithWhereWithoutInventarioInput, UbicacionUpdateWithoutInventarioInput>, UbicacionUncheckedUpdateWithoutInventarioInput>
  }

  export type PersonaUpdateOneRequiredWithoutInventarioNestedInput = {
    create?: XOR<PersonaCreateWithoutInventarioInput, PersonaUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutInventarioInput
    upsert?: PersonaUpsertWithoutInventarioInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutInventarioInput, PersonaUpdateWithoutInventarioInput>, PersonaUncheckedUpdateWithoutInventarioInput>
  }

  export type transaccion_elementosUpdateManyWithoutElementoNestedInput = {
    create?: XOR<transaccion_elementosCreateWithoutElementoInput, transaccion_elementosUncheckedCreateWithoutElementoInput> | transaccion_elementosCreateWithoutElementoInput[] | transaccion_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutElementoInput | transaccion_elementosCreateOrConnectWithoutElementoInput[]
    upsert?: transaccion_elementosUpsertWithWhereUniqueWithoutElementoInput | transaccion_elementosUpsertWithWhereUniqueWithoutElementoInput[]
    createMany?: transaccion_elementosCreateManyElementoInputEnvelope
    set?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    disconnect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    delete?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    update?: transaccion_elementosUpdateWithWhereUniqueWithoutElementoInput | transaccion_elementosUpdateWithWhereUniqueWithoutElementoInput[]
    updateMany?: transaccion_elementosUpdateManyWithWhereWithoutElementoInput | transaccion_elementosUpdateManyWithWhereWithoutElementoInput[]
    deleteMany?: transaccion_elementosScalarWhereInput | transaccion_elementosScalarWhereInput[]
  }

  export type pedido_elementosUpdateManyWithoutElementoNestedInput = {
    create?: XOR<pedido_elementosCreateWithoutElementoInput, pedido_elementosUncheckedCreateWithoutElementoInput> | pedido_elementosCreateWithoutElementoInput[] | pedido_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutElementoInput | pedido_elementosCreateOrConnectWithoutElementoInput[]
    upsert?: pedido_elementosUpsertWithWhereUniqueWithoutElementoInput | pedido_elementosUpsertWithWhereUniqueWithoutElementoInput[]
    createMany?: pedido_elementosCreateManyElementoInputEnvelope
    set?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    disconnect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    delete?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    update?: pedido_elementosUpdateWithWhereUniqueWithoutElementoInput | pedido_elementosUpdateWithWhereUniqueWithoutElementoInput[]
    updateMany?: pedido_elementosUpdateManyWithWhereWithoutElementoInput | pedido_elementosUpdateManyWithWhereWithoutElementoInput[]
    deleteMany?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
  }

  export type proceso_herramientasUpdateManyWithoutHerramientaNestedInput = {
    create?: XOR<proceso_herramientasCreateWithoutHerramientaInput, proceso_herramientasUncheckedCreateWithoutHerramientaInput> | proceso_herramientasCreateWithoutHerramientaInput[] | proceso_herramientasUncheckedCreateWithoutHerramientaInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHerramientaInput | proceso_herramientasCreateOrConnectWithoutHerramientaInput[]
    upsert?: proceso_herramientasUpsertWithWhereUniqueWithoutHerramientaInput | proceso_herramientasUpsertWithWhereUniqueWithoutHerramientaInput[]
    createMany?: proceso_herramientasCreateManyHerramientaInputEnvelope
    set?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    disconnect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    delete?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    update?: proceso_herramientasUpdateWithWhereUniqueWithoutHerramientaInput | proceso_herramientasUpdateWithWhereUniqueWithoutHerramientaInput[]
    updateMany?: proceso_herramientasUpdateManyWithWhereWithoutHerramientaInput | proceso_herramientasUpdateManyWithWhereWithoutHerramientaInput[]
    deleteMany?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
  }

  export type proceso_inventarioUpdateManyWithoutElementoNestedInput = {
    create?: XOR<proceso_inventarioCreateWithoutElementoInput, proceso_inventarioUncheckedCreateWithoutElementoInput> | proceso_inventarioCreateWithoutElementoInput[] | proceso_inventarioUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutElementoInput | proceso_inventarioCreateOrConnectWithoutElementoInput[]
    upsert?: proceso_inventarioUpsertWithWhereUniqueWithoutElementoInput | proceso_inventarioUpsertWithWhereUniqueWithoutElementoInput[]
    createMany?: proceso_inventarioCreateManyElementoInputEnvelope
    set?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    disconnect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    delete?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    update?: proceso_inventarioUpdateWithWhereUniqueWithoutElementoInput | proceso_inventarioUpdateWithWhereUniqueWithoutElementoInput[]
    updateMany?: proceso_inventarioUpdateManyWithWhereWithoutElementoInput | proceso_inventarioUpdateManyWithWhereWithoutElementoInput[]
    deleteMany?: proceso_inventarioScalarWhereInput | proceso_inventarioScalarWhereInput[]
  }

  export type transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput = {
    create?: XOR<transaccion_elementosCreateWithoutElementoInput, transaccion_elementosUncheckedCreateWithoutElementoInput> | transaccion_elementosCreateWithoutElementoInput[] | transaccion_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutElementoInput | transaccion_elementosCreateOrConnectWithoutElementoInput[]
    upsert?: transaccion_elementosUpsertWithWhereUniqueWithoutElementoInput | transaccion_elementosUpsertWithWhereUniqueWithoutElementoInput[]
    createMany?: transaccion_elementosCreateManyElementoInputEnvelope
    set?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    disconnect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    delete?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    update?: transaccion_elementosUpdateWithWhereUniqueWithoutElementoInput | transaccion_elementosUpdateWithWhereUniqueWithoutElementoInput[]
    updateMany?: transaccion_elementosUpdateManyWithWhereWithoutElementoInput | transaccion_elementosUpdateManyWithWhereWithoutElementoInput[]
    deleteMany?: transaccion_elementosScalarWhereInput | transaccion_elementosScalarWhereInput[]
  }

  export type pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput = {
    create?: XOR<pedido_elementosCreateWithoutElementoInput, pedido_elementosUncheckedCreateWithoutElementoInput> | pedido_elementosCreateWithoutElementoInput[] | pedido_elementosUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutElementoInput | pedido_elementosCreateOrConnectWithoutElementoInput[]
    upsert?: pedido_elementosUpsertWithWhereUniqueWithoutElementoInput | pedido_elementosUpsertWithWhereUniqueWithoutElementoInput[]
    createMany?: pedido_elementosCreateManyElementoInputEnvelope
    set?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    disconnect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    delete?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    update?: pedido_elementosUpdateWithWhereUniqueWithoutElementoInput | pedido_elementosUpdateWithWhereUniqueWithoutElementoInput[]
    updateMany?: pedido_elementosUpdateManyWithWhereWithoutElementoInput | pedido_elementosUpdateManyWithWhereWithoutElementoInput[]
    deleteMany?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
  }

  export type proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput = {
    create?: XOR<proceso_herramientasCreateWithoutHerramientaInput, proceso_herramientasUncheckedCreateWithoutHerramientaInput> | proceso_herramientasCreateWithoutHerramientaInput[] | proceso_herramientasUncheckedCreateWithoutHerramientaInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHerramientaInput | proceso_herramientasCreateOrConnectWithoutHerramientaInput[]
    upsert?: proceso_herramientasUpsertWithWhereUniqueWithoutHerramientaInput | proceso_herramientasUpsertWithWhereUniqueWithoutHerramientaInput[]
    createMany?: proceso_herramientasCreateManyHerramientaInputEnvelope
    set?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    disconnect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    delete?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    update?: proceso_herramientasUpdateWithWhereUniqueWithoutHerramientaInput | proceso_herramientasUpdateWithWhereUniqueWithoutHerramientaInput[]
    updateMany?: proceso_herramientasUpdateManyWithWhereWithoutHerramientaInput | proceso_herramientasUpdateManyWithWhereWithoutHerramientaInput[]
    deleteMany?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
  }

  export type proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput = {
    create?: XOR<proceso_inventarioCreateWithoutElementoInput, proceso_inventarioUncheckedCreateWithoutElementoInput> | proceso_inventarioCreateWithoutElementoInput[] | proceso_inventarioUncheckedCreateWithoutElementoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutElementoInput | proceso_inventarioCreateOrConnectWithoutElementoInput[]
    upsert?: proceso_inventarioUpsertWithWhereUniqueWithoutElementoInput | proceso_inventarioUpsertWithWhereUniqueWithoutElementoInput[]
    createMany?: proceso_inventarioCreateManyElementoInputEnvelope
    set?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    disconnect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    delete?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    update?: proceso_inventarioUpdateWithWhereUniqueWithoutElementoInput | proceso_inventarioUpdateWithWhereUniqueWithoutElementoInput[]
    updateMany?: proceso_inventarioUpdateManyWithWhereWithoutElementoInput | proceso_inventarioUpdateManyWithWhereWithoutElementoInput[]
    deleteMany?: proceso_inventarioScalarWhereInput | proceso_inventarioScalarWhereInput[]
  }

  export type PosicionCreateNestedManyWithoutPermisosInput = {
    create?: XOR<PosicionCreateWithoutPermisosInput, PosicionUncheckedCreateWithoutPermisosInput> | PosicionCreateWithoutPermisosInput[] | PosicionUncheckedCreateWithoutPermisosInput[]
    connectOrCreate?: PosicionCreateOrConnectWithoutPermisosInput | PosicionCreateOrConnectWithoutPermisosInput[]
    connect?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
  }

  export type PosicionUncheckedCreateNestedManyWithoutPermisosInput = {
    create?: XOR<PosicionCreateWithoutPermisosInput, PosicionUncheckedCreateWithoutPermisosInput> | PosicionCreateWithoutPermisosInput[] | PosicionUncheckedCreateWithoutPermisosInput[]
    connectOrCreate?: PosicionCreateOrConnectWithoutPermisosInput | PosicionCreateOrConnectWithoutPermisosInput[]
    connect?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
  }

  export type EnumCategoriasPermisoFieldUpdateOperationsInput = {
    set?: $Enums.CategoriasPermiso
  }

  export type PosicionUpdateManyWithoutPermisosNestedInput = {
    create?: XOR<PosicionCreateWithoutPermisosInput, PosicionUncheckedCreateWithoutPermisosInput> | PosicionCreateWithoutPermisosInput[] | PosicionUncheckedCreateWithoutPermisosInput[]
    connectOrCreate?: PosicionCreateOrConnectWithoutPermisosInput | PosicionCreateOrConnectWithoutPermisosInput[]
    upsert?: PosicionUpsertWithWhereUniqueWithoutPermisosInput | PosicionUpsertWithWhereUniqueWithoutPermisosInput[]
    set?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    disconnect?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    delete?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    connect?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    update?: PosicionUpdateWithWhereUniqueWithoutPermisosInput | PosicionUpdateWithWhereUniqueWithoutPermisosInput[]
    updateMany?: PosicionUpdateManyWithWhereWithoutPermisosInput | PosicionUpdateManyWithWhereWithoutPermisosInput[]
    deleteMany?: PosicionScalarWhereInput | PosicionScalarWhereInput[]
  }

  export type PosicionUncheckedUpdateManyWithoutPermisosNestedInput = {
    create?: XOR<PosicionCreateWithoutPermisosInput, PosicionUncheckedCreateWithoutPermisosInput> | PosicionCreateWithoutPermisosInput[] | PosicionUncheckedCreateWithoutPermisosInput[]
    connectOrCreate?: PosicionCreateOrConnectWithoutPermisosInput | PosicionCreateOrConnectWithoutPermisosInput[]
    upsert?: PosicionUpsertWithWhereUniqueWithoutPermisosInput | PosicionUpsertWithWhereUniqueWithoutPermisosInput[]
    set?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    disconnect?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    delete?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    connect?: PosicionWhereUniqueInput | PosicionWhereUniqueInput[]
    update?: PosicionUpdateWithWhereUniqueWithoutPermisosInput | PosicionUpdateWithWhereUniqueWithoutPermisosInput[]
    updateMany?: PosicionUpdateManyWithWhereWithoutPermisosInput | PosicionUpdateManyWithWhereWithoutPermisosInput[]
    deleteMany?: PosicionScalarWhereInput | PosicionScalarWhereInput[]
  }

  export type PermisoCreateNestedManyWithoutPosicionesInput = {
    create?: XOR<PermisoCreateWithoutPosicionesInput, PermisoUncheckedCreateWithoutPosicionesInput> | PermisoCreateWithoutPosicionesInput[] | PermisoUncheckedCreateWithoutPosicionesInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutPosicionesInput | PermisoCreateOrConnectWithoutPosicionesInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type EmpleadoCreateNestedManyWithoutPosicionInput = {
    create?: XOR<EmpleadoCreateWithoutPosicionInput, EmpleadoUncheckedCreateWithoutPosicionInput> | EmpleadoCreateWithoutPosicionInput[] | EmpleadoUncheckedCreateWithoutPosicionInput[]
    connectOrCreate?: EmpleadoCreateOrConnectWithoutPosicionInput | EmpleadoCreateOrConnectWithoutPosicionInput[]
    createMany?: EmpleadoCreateManyPosicionInputEnvelope
    connect?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
  }

  export type PermisoUncheckedCreateNestedManyWithoutPosicionesInput = {
    create?: XOR<PermisoCreateWithoutPosicionesInput, PermisoUncheckedCreateWithoutPosicionesInput> | PermisoCreateWithoutPosicionesInput[] | PermisoUncheckedCreateWithoutPosicionesInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutPosicionesInput | PermisoCreateOrConnectWithoutPosicionesInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type EmpleadoUncheckedCreateNestedManyWithoutPosicionInput = {
    create?: XOR<EmpleadoCreateWithoutPosicionInput, EmpleadoUncheckedCreateWithoutPosicionInput> | EmpleadoCreateWithoutPosicionInput[] | EmpleadoUncheckedCreateWithoutPosicionInput[]
    connectOrCreate?: EmpleadoCreateOrConnectWithoutPosicionInput | EmpleadoCreateOrConnectWithoutPosicionInput[]
    createMany?: EmpleadoCreateManyPosicionInputEnvelope
    connect?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
  }

  export type PermisoUpdateManyWithoutPosicionesNestedInput = {
    create?: XOR<PermisoCreateWithoutPosicionesInput, PermisoUncheckedCreateWithoutPosicionesInput> | PermisoCreateWithoutPosicionesInput[] | PermisoUncheckedCreateWithoutPosicionesInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutPosicionesInput | PermisoCreateOrConnectWithoutPosicionesInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutPosicionesInput | PermisoUpsertWithWhereUniqueWithoutPosicionesInput[]
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutPosicionesInput | PermisoUpdateWithWhereUniqueWithoutPosicionesInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutPosicionesInput | PermisoUpdateManyWithWhereWithoutPosicionesInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type EmpleadoUpdateManyWithoutPosicionNestedInput = {
    create?: XOR<EmpleadoCreateWithoutPosicionInput, EmpleadoUncheckedCreateWithoutPosicionInput> | EmpleadoCreateWithoutPosicionInput[] | EmpleadoUncheckedCreateWithoutPosicionInput[]
    connectOrCreate?: EmpleadoCreateOrConnectWithoutPosicionInput | EmpleadoCreateOrConnectWithoutPosicionInput[]
    upsert?: EmpleadoUpsertWithWhereUniqueWithoutPosicionInput | EmpleadoUpsertWithWhereUniqueWithoutPosicionInput[]
    createMany?: EmpleadoCreateManyPosicionInputEnvelope
    set?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    disconnect?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    delete?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    connect?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    update?: EmpleadoUpdateWithWhereUniqueWithoutPosicionInput | EmpleadoUpdateWithWhereUniqueWithoutPosicionInput[]
    updateMany?: EmpleadoUpdateManyWithWhereWithoutPosicionInput | EmpleadoUpdateManyWithWhereWithoutPosicionInput[]
    deleteMany?: EmpleadoScalarWhereInput | EmpleadoScalarWhereInput[]
  }

  export type PermisoUncheckedUpdateManyWithoutPosicionesNestedInput = {
    create?: XOR<PermisoCreateWithoutPosicionesInput, PermisoUncheckedCreateWithoutPosicionesInput> | PermisoCreateWithoutPosicionesInput[] | PermisoUncheckedCreateWithoutPosicionesInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutPosicionesInput | PermisoCreateOrConnectWithoutPosicionesInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutPosicionesInput | PermisoUpsertWithWhereUniqueWithoutPosicionesInput[]
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutPosicionesInput | PermisoUpdateWithWhereUniqueWithoutPosicionesInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutPosicionesInput | PermisoUpdateManyWithWhereWithoutPosicionesInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type EmpleadoUncheckedUpdateManyWithoutPosicionNestedInput = {
    create?: XOR<EmpleadoCreateWithoutPosicionInput, EmpleadoUncheckedCreateWithoutPosicionInput> | EmpleadoCreateWithoutPosicionInput[] | EmpleadoUncheckedCreateWithoutPosicionInput[]
    connectOrCreate?: EmpleadoCreateOrConnectWithoutPosicionInput | EmpleadoCreateOrConnectWithoutPosicionInput[]
    upsert?: EmpleadoUpsertWithWhereUniqueWithoutPosicionInput | EmpleadoUpsertWithWhereUniqueWithoutPosicionInput[]
    createMany?: EmpleadoCreateManyPosicionInputEnvelope
    set?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    disconnect?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    delete?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    connect?: EmpleadoWhereUniqueInput | EmpleadoWhereUniqueInput[]
    update?: EmpleadoUpdateWithWhereUniqueWithoutPosicionInput | EmpleadoUpdateWithWhereUniqueWithoutPosicionInput[]
    updateMany?: EmpleadoUpdateManyWithWhereWithoutPosicionInput | EmpleadoUpdateManyWithWhereWithoutPosicionInput[]
    deleteMany?: EmpleadoScalarWhereInput | EmpleadoScalarWhereInput[]
  }

  export type PosicionCreateNestedOneWithoutEmpleadoInput = {
    create?: XOR<PosicionCreateWithoutEmpleadoInput, PosicionUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: PosicionCreateOrConnectWithoutEmpleadoInput
    connect?: PosicionWhereUniqueInput
  }

  export type TransaccionCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<TransaccionCreateWithoutEmpleadoInput, TransaccionUncheckedCreateWithoutEmpleadoInput> | TransaccionCreateWithoutEmpleadoInput[] | TransaccionUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutEmpleadoInput | TransaccionCreateOrConnectWithoutEmpleadoInput[]
    createMany?: TransaccionCreateManyEmpleadoInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type pedido_elementosCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<pedido_elementosCreateWithoutEmpleadoInput, pedido_elementosUncheckedCreateWithoutEmpleadoInput> | pedido_elementosCreateWithoutEmpleadoInput[] | pedido_elementosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutEmpleadoInput | pedido_elementosCreateOrConnectWithoutEmpleadoInput[]
    createMany?: pedido_elementosCreateManyEmpleadoInputEnvelope
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
  }

  export type proceso_empleadosCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<proceso_empleadosCreateWithoutEmpleadoInput, proceso_empleadosUncheckedCreateWithoutEmpleadoInput> | proceso_empleadosCreateWithoutEmpleadoInput[] | proceso_empleadosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutEmpleadoInput | proceso_empleadosCreateOrConnectWithoutEmpleadoInput[]
    createMany?: proceso_empleadosCreateManyEmpleadoInputEnvelope
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
  }

  export type ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutEmpleadoInput, ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput> | ubicacion_empleadoCreateWithoutEmpleadoInput[] | ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput | ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: ubicacion_empleadoCreateManyEmpleadoInputEnvelope
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
  }

  export type MensajeCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<MensajeCreateWithoutRemitenteInput, MensajeUncheckedCreateWithoutRemitenteInput> | MensajeCreateWithoutRemitenteInput[] | MensajeUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutRemitenteInput | MensajeCreateOrConnectWithoutRemitenteInput[]
    createMany?: MensajeCreateManyRemitenteInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type MensajeCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<MensajeCreateWithoutDestinatarioInput, MensajeUncheckedCreateWithoutDestinatarioInput> | MensajeCreateWithoutDestinatarioInput[] | MensajeUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutDestinatarioInput | MensajeCreateOrConnectWithoutDestinatarioInput[]
    createMany?: MensajeCreateManyDestinatarioInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type TareaCreateNestedManyWithoutAsignadorInput = {
    create?: XOR<TareaCreateWithoutAsignadorInput, TareaUncheckedCreateWithoutAsignadorInput> | TareaCreateWithoutAsignadorInput[] | TareaUncheckedCreateWithoutAsignadorInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadorInput | TareaCreateOrConnectWithoutAsignadorInput[]
    createMany?: TareaCreateManyAsignadorInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type TareaCreateNestedManyWithoutAsignadoInput = {
    create?: XOR<TareaCreateWithoutAsignadoInput, TareaUncheckedCreateWithoutAsignadoInput> | TareaCreateWithoutAsignadoInput[] | TareaUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadoInput | TareaCreateOrConnectWithoutAsignadoInput[]
    createMany?: TareaCreateManyAsignadoInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<TransaccionCreateWithoutEmpleadoInput, TransaccionUncheckedCreateWithoutEmpleadoInput> | TransaccionCreateWithoutEmpleadoInput[] | TransaccionUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutEmpleadoInput | TransaccionCreateOrConnectWithoutEmpleadoInput[]
    createMany?: TransaccionCreateManyEmpleadoInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<pedido_elementosCreateWithoutEmpleadoInput, pedido_elementosUncheckedCreateWithoutEmpleadoInput> | pedido_elementosCreateWithoutEmpleadoInput[] | pedido_elementosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutEmpleadoInput | pedido_elementosCreateOrConnectWithoutEmpleadoInput[]
    createMany?: pedido_elementosCreateManyEmpleadoInputEnvelope
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
  }

  export type proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<proceso_empleadosCreateWithoutEmpleadoInput, proceso_empleadosUncheckedCreateWithoutEmpleadoInput> | proceso_empleadosCreateWithoutEmpleadoInput[] | proceso_empleadosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutEmpleadoInput | proceso_empleadosCreateOrConnectWithoutEmpleadoInput[]
    createMany?: proceso_empleadosCreateManyEmpleadoInputEnvelope
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
  }

  export type ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutEmpleadoInput, ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput> | ubicacion_empleadoCreateWithoutEmpleadoInput[] | ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput | ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput[]
    createMany?: ubicacion_empleadoCreateManyEmpleadoInputEnvelope
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
  }

  export type MensajeUncheckedCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<MensajeCreateWithoutRemitenteInput, MensajeUncheckedCreateWithoutRemitenteInput> | MensajeCreateWithoutRemitenteInput[] | MensajeUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutRemitenteInput | MensajeCreateOrConnectWithoutRemitenteInput[]
    createMany?: MensajeCreateManyRemitenteInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type MensajeUncheckedCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<MensajeCreateWithoutDestinatarioInput, MensajeUncheckedCreateWithoutDestinatarioInput> | MensajeCreateWithoutDestinatarioInput[] | MensajeUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutDestinatarioInput | MensajeCreateOrConnectWithoutDestinatarioInput[]
    createMany?: MensajeCreateManyDestinatarioInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type TareaUncheckedCreateNestedManyWithoutAsignadorInput = {
    create?: XOR<TareaCreateWithoutAsignadorInput, TareaUncheckedCreateWithoutAsignadorInput> | TareaCreateWithoutAsignadorInput[] | TareaUncheckedCreateWithoutAsignadorInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadorInput | TareaCreateOrConnectWithoutAsignadorInput[]
    createMany?: TareaCreateManyAsignadorInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type TareaUncheckedCreateNestedManyWithoutAsignadoInput = {
    create?: XOR<TareaCreateWithoutAsignadoInput, TareaUncheckedCreateWithoutAsignadoInput> | TareaCreateWithoutAsignadoInput[] | TareaUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadoInput | TareaCreateOrConnectWithoutAsignadoInput[]
    createMany?: TareaCreateManyAsignadoInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumEstadoTrabajadorFieldUpdateOperationsInput = {
    set?: $Enums.EstadoTrabajador
  }

  export type PosicionUpdateOneRequiredWithoutEmpleadoNestedInput = {
    create?: XOR<PosicionCreateWithoutEmpleadoInput, PosicionUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: PosicionCreateOrConnectWithoutEmpleadoInput
    upsert?: PosicionUpsertWithoutEmpleadoInput
    connect?: PosicionWhereUniqueInput
    update?: XOR<XOR<PosicionUpdateToOneWithWhereWithoutEmpleadoInput, PosicionUpdateWithoutEmpleadoInput>, PosicionUncheckedUpdateWithoutEmpleadoInput>
  }

  export type TransaccionUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<TransaccionCreateWithoutEmpleadoInput, TransaccionUncheckedCreateWithoutEmpleadoInput> | TransaccionCreateWithoutEmpleadoInput[] | TransaccionUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutEmpleadoInput | TransaccionCreateOrConnectWithoutEmpleadoInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutEmpleadoInput | TransaccionUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: TransaccionCreateManyEmpleadoInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutEmpleadoInput | TransaccionUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutEmpleadoInput | TransaccionUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type pedido_elementosUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<pedido_elementosCreateWithoutEmpleadoInput, pedido_elementosUncheckedCreateWithoutEmpleadoInput> | pedido_elementosCreateWithoutEmpleadoInput[] | pedido_elementosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutEmpleadoInput | pedido_elementosCreateOrConnectWithoutEmpleadoInput[]
    upsert?: pedido_elementosUpsertWithWhereUniqueWithoutEmpleadoInput | pedido_elementosUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: pedido_elementosCreateManyEmpleadoInputEnvelope
    set?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    disconnect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    delete?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    update?: pedido_elementosUpdateWithWhereUniqueWithoutEmpleadoInput | pedido_elementosUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: pedido_elementosUpdateManyWithWhereWithoutEmpleadoInput | pedido_elementosUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
  }

  export type proceso_empleadosUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<proceso_empleadosCreateWithoutEmpleadoInput, proceso_empleadosUncheckedCreateWithoutEmpleadoInput> | proceso_empleadosCreateWithoutEmpleadoInput[] | proceso_empleadosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutEmpleadoInput | proceso_empleadosCreateOrConnectWithoutEmpleadoInput[]
    upsert?: proceso_empleadosUpsertWithWhereUniqueWithoutEmpleadoInput | proceso_empleadosUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: proceso_empleadosCreateManyEmpleadoInputEnvelope
    set?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    disconnect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    delete?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    update?: proceso_empleadosUpdateWithWhereUniqueWithoutEmpleadoInput | proceso_empleadosUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: proceso_empleadosUpdateManyWithWhereWithoutEmpleadoInput | proceso_empleadosUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
  }

  export type ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutEmpleadoInput, ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput> | ubicacion_empleadoCreateWithoutEmpleadoInput[] | ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput | ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: ubicacion_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput | ubicacion_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: ubicacion_empleadoCreateManyEmpleadoInputEnvelope
    set?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    disconnect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    delete?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    update?: ubicacion_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput | ubicacion_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: ubicacion_empleadoUpdateManyWithWhereWithoutEmpleadoInput | ubicacion_empleadoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: ubicacion_empleadoScalarWhereInput | ubicacion_empleadoScalarWhereInput[]
  }

  export type MensajeUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<MensajeCreateWithoutRemitenteInput, MensajeUncheckedCreateWithoutRemitenteInput> | MensajeCreateWithoutRemitenteInput[] | MensajeUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutRemitenteInput | MensajeCreateOrConnectWithoutRemitenteInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutRemitenteInput | MensajeUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: MensajeCreateManyRemitenteInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutRemitenteInput | MensajeUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutRemitenteInput | MensajeUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type MensajeUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<MensajeCreateWithoutDestinatarioInput, MensajeUncheckedCreateWithoutDestinatarioInput> | MensajeCreateWithoutDestinatarioInput[] | MensajeUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutDestinatarioInput | MensajeCreateOrConnectWithoutDestinatarioInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutDestinatarioInput | MensajeUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: MensajeCreateManyDestinatarioInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutDestinatarioInput | MensajeUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutDestinatarioInput | MensajeUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type TareaUpdateManyWithoutAsignadorNestedInput = {
    create?: XOR<TareaCreateWithoutAsignadorInput, TareaUncheckedCreateWithoutAsignadorInput> | TareaCreateWithoutAsignadorInput[] | TareaUncheckedCreateWithoutAsignadorInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadorInput | TareaCreateOrConnectWithoutAsignadorInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutAsignadorInput | TareaUpsertWithWhereUniqueWithoutAsignadorInput[]
    createMany?: TareaCreateManyAsignadorInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutAsignadorInput | TareaUpdateWithWhereUniqueWithoutAsignadorInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutAsignadorInput | TareaUpdateManyWithWhereWithoutAsignadorInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type TareaUpdateManyWithoutAsignadoNestedInput = {
    create?: XOR<TareaCreateWithoutAsignadoInput, TareaUncheckedCreateWithoutAsignadoInput> | TareaCreateWithoutAsignadoInput[] | TareaUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadoInput | TareaCreateOrConnectWithoutAsignadoInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutAsignadoInput | TareaUpsertWithWhereUniqueWithoutAsignadoInput[]
    createMany?: TareaCreateManyAsignadoInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutAsignadoInput | TareaUpdateWithWhereUniqueWithoutAsignadoInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutAsignadoInput | TareaUpdateManyWithWhereWithoutAsignadoInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<TransaccionCreateWithoutEmpleadoInput, TransaccionUncheckedCreateWithoutEmpleadoInput> | TransaccionCreateWithoutEmpleadoInput[] | TransaccionUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutEmpleadoInput | TransaccionCreateOrConnectWithoutEmpleadoInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutEmpleadoInput | TransaccionUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: TransaccionCreateManyEmpleadoInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutEmpleadoInput | TransaccionUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutEmpleadoInput | TransaccionUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<pedido_elementosCreateWithoutEmpleadoInput, pedido_elementosUncheckedCreateWithoutEmpleadoInput> | pedido_elementosCreateWithoutEmpleadoInput[] | pedido_elementosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutEmpleadoInput | pedido_elementosCreateOrConnectWithoutEmpleadoInput[]
    upsert?: pedido_elementosUpsertWithWhereUniqueWithoutEmpleadoInput | pedido_elementosUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: pedido_elementosCreateManyEmpleadoInputEnvelope
    set?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    disconnect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    delete?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    update?: pedido_elementosUpdateWithWhereUniqueWithoutEmpleadoInput | pedido_elementosUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: pedido_elementosUpdateManyWithWhereWithoutEmpleadoInput | pedido_elementosUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
  }

  export type proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<proceso_empleadosCreateWithoutEmpleadoInput, proceso_empleadosUncheckedCreateWithoutEmpleadoInput> | proceso_empleadosCreateWithoutEmpleadoInput[] | proceso_empleadosUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutEmpleadoInput | proceso_empleadosCreateOrConnectWithoutEmpleadoInput[]
    upsert?: proceso_empleadosUpsertWithWhereUniqueWithoutEmpleadoInput | proceso_empleadosUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: proceso_empleadosCreateManyEmpleadoInputEnvelope
    set?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    disconnect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    delete?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    update?: proceso_empleadosUpdateWithWhereUniqueWithoutEmpleadoInput | proceso_empleadosUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: proceso_empleadosUpdateManyWithWhereWithoutEmpleadoInput | proceso_empleadosUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
  }

  export type ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput = {
    create?: XOR<ubicacion_empleadoCreateWithoutEmpleadoInput, ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput> | ubicacion_empleadoCreateWithoutEmpleadoInput[] | ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput[]
    connectOrCreate?: ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput | ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput[]
    upsert?: ubicacion_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput | ubicacion_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput[]
    createMany?: ubicacion_empleadoCreateManyEmpleadoInputEnvelope
    set?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    disconnect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    delete?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    connect?: ubicacion_empleadoWhereUniqueInput | ubicacion_empleadoWhereUniqueInput[]
    update?: ubicacion_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput | ubicacion_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput[]
    updateMany?: ubicacion_empleadoUpdateManyWithWhereWithoutEmpleadoInput | ubicacion_empleadoUpdateManyWithWhereWithoutEmpleadoInput[]
    deleteMany?: ubicacion_empleadoScalarWhereInput | ubicacion_empleadoScalarWhereInput[]
  }

  export type MensajeUncheckedUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<MensajeCreateWithoutRemitenteInput, MensajeUncheckedCreateWithoutRemitenteInput> | MensajeCreateWithoutRemitenteInput[] | MensajeUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutRemitenteInput | MensajeCreateOrConnectWithoutRemitenteInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutRemitenteInput | MensajeUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: MensajeCreateManyRemitenteInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutRemitenteInput | MensajeUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutRemitenteInput | MensajeUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<MensajeCreateWithoutDestinatarioInput, MensajeUncheckedCreateWithoutDestinatarioInput> | MensajeCreateWithoutDestinatarioInput[] | MensajeUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutDestinatarioInput | MensajeCreateOrConnectWithoutDestinatarioInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutDestinatarioInput | MensajeUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: MensajeCreateManyDestinatarioInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutDestinatarioInput | MensajeUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutDestinatarioInput | MensajeUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type TareaUncheckedUpdateManyWithoutAsignadorNestedInput = {
    create?: XOR<TareaCreateWithoutAsignadorInput, TareaUncheckedCreateWithoutAsignadorInput> | TareaCreateWithoutAsignadorInput[] | TareaUncheckedCreateWithoutAsignadorInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadorInput | TareaCreateOrConnectWithoutAsignadorInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutAsignadorInput | TareaUpsertWithWhereUniqueWithoutAsignadorInput[]
    createMany?: TareaCreateManyAsignadorInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutAsignadorInput | TareaUpdateWithWhereUniqueWithoutAsignadorInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutAsignadorInput | TareaUpdateManyWithWhereWithoutAsignadorInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type TareaUncheckedUpdateManyWithoutAsignadoNestedInput = {
    create?: XOR<TareaCreateWithoutAsignadoInput, TareaUncheckedCreateWithoutAsignadoInput> | TareaCreateWithoutAsignadoInput[] | TareaUncheckedCreateWithoutAsignadoInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutAsignadoInput | TareaCreateOrConnectWithoutAsignadoInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutAsignadoInput | TareaUpsertWithWhereUniqueWithoutAsignadoInput[]
    createMany?: TareaCreateManyAsignadoInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutAsignadoInput | TareaUpdateWithWhereUniqueWithoutAsignadoInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutAsignadoInput | TareaUpdateManyWithWhereWithoutAsignadoInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type EmpleadoCreateNestedOneWithoutMensajesEnviadosInput = {
    create?: XOR<EmpleadoCreateWithoutMensajesEnviadosInput, EmpleadoUncheckedCreateWithoutMensajesEnviadosInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutMensajesEnviadosInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type EmpleadoCreateNestedOneWithoutMensajesRecibidosInput = {
    create?: XOR<EmpleadoCreateWithoutMensajesRecibidosInput, EmpleadoUncheckedCreateWithoutMensajesRecibidosInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutMensajesRecibidosInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type EnumCategoriaMensajesFieldUpdateOperationsInput = {
    set?: $Enums.CategoriaMensajes
  }

  export type EnumEstadoMensajeFieldUpdateOperationsInput = {
    set?: $Enums.EstadoMensaje
  }

  export type EmpleadoUpdateOneRequiredWithoutMensajesEnviadosNestedInput = {
    create?: XOR<EmpleadoCreateWithoutMensajesEnviadosInput, EmpleadoUncheckedCreateWithoutMensajesEnviadosInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutMensajesEnviadosInput
    upsert?: EmpleadoUpsertWithoutMensajesEnviadosInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutMensajesEnviadosInput, EmpleadoUpdateWithoutMensajesEnviadosInput>, EmpleadoUncheckedUpdateWithoutMensajesEnviadosInput>
  }

  export type EmpleadoUpdateOneRequiredWithoutMensajesRecibidosNestedInput = {
    create?: XOR<EmpleadoCreateWithoutMensajesRecibidosInput, EmpleadoUncheckedCreateWithoutMensajesRecibidosInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutMensajesRecibidosInput
    upsert?: EmpleadoUpsertWithoutMensajesRecibidosInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutMensajesRecibidosInput, EmpleadoUpdateWithoutMensajesRecibidosInput>, EmpleadoUncheckedUpdateWithoutMensajesRecibidosInput>
  }

  export type PuntoCreateNestedOneWithoutProformaInput = {
    create?: XOR<PuntoCreateWithoutProformaInput, PuntoUncheckedCreateWithoutProformaInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutProformaInput
    connect?: PuntoWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutProformaInput = {
    create?: XOR<PersonaCreateWithoutProformaInput, PersonaUncheckedCreateWithoutProformaInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutProformaInput
    connect?: PersonaWhereUniqueInput
  }

  export type ObraCreateNestedOneWithoutProformaInput = {
    create?: XOR<ObraCreateWithoutProformaInput, ObraUncheckedCreateWithoutProformaInput>
    connectOrCreate?: ObraCreateOrConnectWithoutProformaInput
    connect?: ObraWhereUniqueInput
  }

  export type ProcesoCreateNestedManyWithoutProformaInput = {
    create?: XOR<ProcesoCreateWithoutProformaInput, ProcesoUncheckedCreateWithoutProformaInput> | ProcesoCreateWithoutProformaInput[] | ProcesoUncheckedCreateWithoutProformaInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutProformaInput | ProcesoCreateOrConnectWithoutProformaInput[]
    createMany?: ProcesoCreateManyProformaInputEnvelope
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
  }

  export type ObraUncheckedCreateNestedOneWithoutProformaInput = {
    create?: XOR<ObraCreateWithoutProformaInput, ObraUncheckedCreateWithoutProformaInput>
    connectOrCreate?: ObraCreateOrConnectWithoutProformaInput
    connect?: ObraWhereUniqueInput
  }

  export type ProcesoUncheckedCreateNestedManyWithoutProformaInput = {
    create?: XOR<ProcesoCreateWithoutProformaInput, ProcesoUncheckedCreateWithoutProformaInput> | ProcesoCreateWithoutProformaInput[] | ProcesoUncheckedCreateWithoutProformaInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutProformaInput | ProcesoCreateOrConnectWithoutProformaInput[]
    createMany?: ProcesoCreateManyProformaInputEnvelope
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
  }

  export type PuntoUpdateOneRequiredWithoutProformaNestedInput = {
    create?: XOR<PuntoCreateWithoutProformaInput, PuntoUncheckedCreateWithoutProformaInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutProformaInput
    upsert?: PuntoUpsertWithoutProformaInput
    connect?: PuntoWhereUniqueInput
    update?: XOR<XOR<PuntoUpdateToOneWithWhereWithoutProformaInput, PuntoUpdateWithoutProformaInput>, PuntoUncheckedUpdateWithoutProformaInput>
  }

  export type PersonaUpdateOneRequiredWithoutProformaNestedInput = {
    create?: XOR<PersonaCreateWithoutProformaInput, PersonaUncheckedCreateWithoutProformaInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutProformaInput
    upsert?: PersonaUpsertWithoutProformaInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutProformaInput, PersonaUpdateWithoutProformaInput>, PersonaUncheckedUpdateWithoutProformaInput>
  }

  export type ObraUpdateOneWithoutProformaNestedInput = {
    create?: XOR<ObraCreateWithoutProformaInput, ObraUncheckedCreateWithoutProformaInput>
    connectOrCreate?: ObraCreateOrConnectWithoutProformaInput
    upsert?: ObraUpsertWithoutProformaInput
    disconnect?: ObraWhereInput | boolean
    delete?: ObraWhereInput | boolean
    connect?: ObraWhereUniqueInput
    update?: XOR<XOR<ObraUpdateToOneWithWhereWithoutProformaInput, ObraUpdateWithoutProformaInput>, ObraUncheckedUpdateWithoutProformaInput>
  }

  export type ProcesoUpdateManyWithoutProformaNestedInput = {
    create?: XOR<ProcesoCreateWithoutProformaInput, ProcesoUncheckedCreateWithoutProformaInput> | ProcesoCreateWithoutProformaInput[] | ProcesoUncheckedCreateWithoutProformaInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutProformaInput | ProcesoCreateOrConnectWithoutProformaInput[]
    upsert?: ProcesoUpsertWithWhereUniqueWithoutProformaInput | ProcesoUpsertWithWhereUniqueWithoutProformaInput[]
    createMany?: ProcesoCreateManyProformaInputEnvelope
    set?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    disconnect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    delete?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    update?: ProcesoUpdateWithWhereUniqueWithoutProformaInput | ProcesoUpdateWithWhereUniqueWithoutProformaInput[]
    updateMany?: ProcesoUpdateManyWithWhereWithoutProformaInput | ProcesoUpdateManyWithWhereWithoutProformaInput[]
    deleteMany?: ProcesoScalarWhereInput | ProcesoScalarWhereInput[]
  }

  export type ObraUncheckedUpdateOneWithoutProformaNestedInput = {
    create?: XOR<ObraCreateWithoutProformaInput, ObraUncheckedCreateWithoutProformaInput>
    connectOrCreate?: ObraCreateOrConnectWithoutProformaInput
    upsert?: ObraUpsertWithoutProformaInput
    disconnect?: ObraWhereInput | boolean
    delete?: ObraWhereInput | boolean
    connect?: ObraWhereUniqueInput
    update?: XOR<XOR<ObraUpdateToOneWithWhereWithoutProformaInput, ObraUpdateWithoutProformaInput>, ObraUncheckedUpdateWithoutProformaInput>
  }

  export type ProcesoUncheckedUpdateManyWithoutProformaNestedInput = {
    create?: XOR<ProcesoCreateWithoutProformaInput, ProcesoUncheckedCreateWithoutProformaInput> | ProcesoCreateWithoutProformaInput[] | ProcesoUncheckedCreateWithoutProformaInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutProformaInput | ProcesoCreateOrConnectWithoutProformaInput[]
    upsert?: ProcesoUpsertWithWhereUniqueWithoutProformaInput | ProcesoUpsertWithWhereUniqueWithoutProformaInput[]
    createMany?: ProcesoCreateManyProformaInputEnvelope
    set?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    disconnect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    delete?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    update?: ProcesoUpdateWithWhereUniqueWithoutProformaInput | ProcesoUpdateWithWhereUniqueWithoutProformaInput[]
    updateMany?: ProcesoUpdateManyWithWhereWithoutProformaInput | ProcesoUpdateManyWithWhereWithoutProformaInput[]
    deleteMany?: ProcesoScalarWhereInput | ProcesoScalarWhereInput[]
  }

  export type proceso_empleadosCreateNestedManyWithoutProcesoInput = {
    create?: XOR<proceso_empleadosCreateWithoutProcesoInput, proceso_empleadosUncheckedCreateWithoutProcesoInput> | proceso_empleadosCreateWithoutProcesoInput[] | proceso_empleadosUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutProcesoInput | proceso_empleadosCreateOrConnectWithoutProcesoInput[]
    createMany?: proceso_empleadosCreateManyProcesoInputEnvelope
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
  }

  export type proceso_herramientasCreateNestedManyWithoutProcesoInput = {
    create?: XOR<proceso_herramientasCreateWithoutProcesoInput, proceso_herramientasUncheckedCreateWithoutProcesoInput> | proceso_herramientasCreateWithoutProcesoInput[] | proceso_herramientasUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutProcesoInput | proceso_herramientasCreateOrConnectWithoutProcesoInput[]
    createMany?: proceso_herramientasCreateManyProcesoInputEnvelope
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
  }

  export type proceso_inventarioCreateNestedManyWithoutProcesoInput = {
    create?: XOR<proceso_inventarioCreateWithoutProcesoInput, proceso_inventarioUncheckedCreateWithoutProcesoInput> | proceso_inventarioCreateWithoutProcesoInput[] | proceso_inventarioUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutProcesoInput | proceso_inventarioCreateOrConnectWithoutProcesoInput[]
    createMany?: proceso_inventarioCreateManyProcesoInputEnvelope
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
  }

  export type ProformaCreateNestedOneWithoutProcesosInput = {
    create?: XOR<ProformaCreateWithoutProcesosInput, ProformaUncheckedCreateWithoutProcesosInput>
    connectOrCreate?: ProformaCreateOrConnectWithoutProcesosInput
    connect?: ProformaWhereUniqueInput
  }

  export type ObraCreateNestedOneWithoutProcesoInput = {
    create?: XOR<ObraCreateWithoutProcesoInput, ObraUncheckedCreateWithoutProcesoInput>
    connectOrCreate?: ObraCreateOrConnectWithoutProcesoInput
    connect?: ObraWhereUniqueInput
  }

  export type proceso_empleadosUncheckedCreateNestedManyWithoutProcesoInput = {
    create?: XOR<proceso_empleadosCreateWithoutProcesoInput, proceso_empleadosUncheckedCreateWithoutProcesoInput> | proceso_empleadosCreateWithoutProcesoInput[] | proceso_empleadosUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutProcesoInput | proceso_empleadosCreateOrConnectWithoutProcesoInput[]
    createMany?: proceso_empleadosCreateManyProcesoInputEnvelope
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
  }

  export type proceso_herramientasUncheckedCreateNestedManyWithoutProcesoInput = {
    create?: XOR<proceso_herramientasCreateWithoutProcesoInput, proceso_herramientasUncheckedCreateWithoutProcesoInput> | proceso_herramientasCreateWithoutProcesoInput[] | proceso_herramientasUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutProcesoInput | proceso_herramientasCreateOrConnectWithoutProcesoInput[]
    createMany?: proceso_herramientasCreateManyProcesoInputEnvelope
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
  }

  export type proceso_inventarioUncheckedCreateNestedManyWithoutProcesoInput = {
    create?: XOR<proceso_inventarioCreateWithoutProcesoInput, proceso_inventarioUncheckedCreateWithoutProcesoInput> | proceso_inventarioCreateWithoutProcesoInput[] | proceso_inventarioUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutProcesoInput | proceso_inventarioCreateOrConnectWithoutProcesoInput[]
    createMany?: proceso_inventarioCreateManyProcesoInputEnvelope
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
  }

  export type proceso_empleadosUpdateManyWithoutProcesoNestedInput = {
    create?: XOR<proceso_empleadosCreateWithoutProcesoInput, proceso_empleadosUncheckedCreateWithoutProcesoInput> | proceso_empleadosCreateWithoutProcesoInput[] | proceso_empleadosUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutProcesoInput | proceso_empleadosCreateOrConnectWithoutProcesoInput[]
    upsert?: proceso_empleadosUpsertWithWhereUniqueWithoutProcesoInput | proceso_empleadosUpsertWithWhereUniqueWithoutProcesoInput[]
    createMany?: proceso_empleadosCreateManyProcesoInputEnvelope
    set?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    disconnect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    delete?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    update?: proceso_empleadosUpdateWithWhereUniqueWithoutProcesoInput | proceso_empleadosUpdateWithWhereUniqueWithoutProcesoInput[]
    updateMany?: proceso_empleadosUpdateManyWithWhereWithoutProcesoInput | proceso_empleadosUpdateManyWithWhereWithoutProcesoInput[]
    deleteMany?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
  }

  export type proceso_herramientasUpdateManyWithoutProcesoNestedInput = {
    create?: XOR<proceso_herramientasCreateWithoutProcesoInput, proceso_herramientasUncheckedCreateWithoutProcesoInput> | proceso_herramientasCreateWithoutProcesoInput[] | proceso_herramientasUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutProcesoInput | proceso_herramientasCreateOrConnectWithoutProcesoInput[]
    upsert?: proceso_herramientasUpsertWithWhereUniqueWithoutProcesoInput | proceso_herramientasUpsertWithWhereUniqueWithoutProcesoInput[]
    createMany?: proceso_herramientasCreateManyProcesoInputEnvelope
    set?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    disconnect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    delete?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    update?: proceso_herramientasUpdateWithWhereUniqueWithoutProcesoInput | proceso_herramientasUpdateWithWhereUniqueWithoutProcesoInput[]
    updateMany?: proceso_herramientasUpdateManyWithWhereWithoutProcesoInput | proceso_herramientasUpdateManyWithWhereWithoutProcesoInput[]
    deleteMany?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
  }

  export type proceso_inventarioUpdateManyWithoutProcesoNestedInput = {
    create?: XOR<proceso_inventarioCreateWithoutProcesoInput, proceso_inventarioUncheckedCreateWithoutProcesoInput> | proceso_inventarioCreateWithoutProcesoInput[] | proceso_inventarioUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutProcesoInput | proceso_inventarioCreateOrConnectWithoutProcesoInput[]
    upsert?: proceso_inventarioUpsertWithWhereUniqueWithoutProcesoInput | proceso_inventarioUpsertWithWhereUniqueWithoutProcesoInput[]
    createMany?: proceso_inventarioCreateManyProcesoInputEnvelope
    set?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    disconnect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    delete?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    update?: proceso_inventarioUpdateWithWhereUniqueWithoutProcesoInput | proceso_inventarioUpdateWithWhereUniqueWithoutProcesoInput[]
    updateMany?: proceso_inventarioUpdateManyWithWhereWithoutProcesoInput | proceso_inventarioUpdateManyWithWhereWithoutProcesoInput[]
    deleteMany?: proceso_inventarioScalarWhereInput | proceso_inventarioScalarWhereInput[]
  }

  export type ProformaUpdateOneWithoutProcesosNestedInput = {
    create?: XOR<ProformaCreateWithoutProcesosInput, ProformaUncheckedCreateWithoutProcesosInput>
    connectOrCreate?: ProformaCreateOrConnectWithoutProcesosInput
    upsert?: ProformaUpsertWithoutProcesosInput
    disconnect?: ProformaWhereInput | boolean
    delete?: ProformaWhereInput | boolean
    connect?: ProformaWhereUniqueInput
    update?: XOR<XOR<ProformaUpdateToOneWithWhereWithoutProcesosInput, ProformaUpdateWithoutProcesosInput>, ProformaUncheckedUpdateWithoutProcesosInput>
  }

  export type ObraUpdateOneWithoutProcesoNestedInput = {
    create?: XOR<ObraCreateWithoutProcesoInput, ObraUncheckedCreateWithoutProcesoInput>
    connectOrCreate?: ObraCreateOrConnectWithoutProcesoInput
    upsert?: ObraUpsertWithoutProcesoInput
    disconnect?: ObraWhereInput | boolean
    delete?: ObraWhereInput | boolean
    connect?: ObraWhereUniqueInput
    update?: XOR<XOR<ObraUpdateToOneWithWhereWithoutProcesoInput, ObraUpdateWithoutProcesoInput>, ObraUncheckedUpdateWithoutProcesoInput>
  }

  export type proceso_empleadosUncheckedUpdateManyWithoutProcesoNestedInput = {
    create?: XOR<proceso_empleadosCreateWithoutProcesoInput, proceso_empleadosUncheckedCreateWithoutProcesoInput> | proceso_empleadosCreateWithoutProcesoInput[] | proceso_empleadosUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutProcesoInput | proceso_empleadosCreateOrConnectWithoutProcesoInput[]
    upsert?: proceso_empleadosUpsertWithWhereUniqueWithoutProcesoInput | proceso_empleadosUpsertWithWhereUniqueWithoutProcesoInput[]
    createMany?: proceso_empleadosCreateManyProcesoInputEnvelope
    set?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    disconnect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    delete?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    update?: proceso_empleadosUpdateWithWhereUniqueWithoutProcesoInput | proceso_empleadosUpdateWithWhereUniqueWithoutProcesoInput[]
    updateMany?: proceso_empleadosUpdateManyWithWhereWithoutProcesoInput | proceso_empleadosUpdateManyWithWhereWithoutProcesoInput[]
    deleteMany?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
  }

  export type proceso_herramientasUncheckedUpdateManyWithoutProcesoNestedInput = {
    create?: XOR<proceso_herramientasCreateWithoutProcesoInput, proceso_herramientasUncheckedCreateWithoutProcesoInput> | proceso_herramientasCreateWithoutProcesoInput[] | proceso_herramientasUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutProcesoInput | proceso_herramientasCreateOrConnectWithoutProcesoInput[]
    upsert?: proceso_herramientasUpsertWithWhereUniqueWithoutProcesoInput | proceso_herramientasUpsertWithWhereUniqueWithoutProcesoInput[]
    createMany?: proceso_herramientasCreateManyProcesoInputEnvelope
    set?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    disconnect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    delete?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    update?: proceso_herramientasUpdateWithWhereUniqueWithoutProcesoInput | proceso_herramientasUpdateWithWhereUniqueWithoutProcesoInput[]
    updateMany?: proceso_herramientasUpdateManyWithWhereWithoutProcesoInput | proceso_herramientasUpdateManyWithWhereWithoutProcesoInput[]
    deleteMany?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
  }

  export type proceso_inventarioUncheckedUpdateManyWithoutProcesoNestedInput = {
    create?: XOR<proceso_inventarioCreateWithoutProcesoInput, proceso_inventarioUncheckedCreateWithoutProcesoInput> | proceso_inventarioCreateWithoutProcesoInput[] | proceso_inventarioUncheckedCreateWithoutProcesoInput[]
    connectOrCreate?: proceso_inventarioCreateOrConnectWithoutProcesoInput | proceso_inventarioCreateOrConnectWithoutProcesoInput[]
    upsert?: proceso_inventarioUpsertWithWhereUniqueWithoutProcesoInput | proceso_inventarioUpsertWithWhereUniqueWithoutProcesoInput[]
    createMany?: proceso_inventarioCreateManyProcesoInputEnvelope
    set?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    disconnect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    delete?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    connect?: proceso_inventarioWhereUniqueInput | proceso_inventarioWhereUniqueInput[]
    update?: proceso_inventarioUpdateWithWhereUniqueWithoutProcesoInput | proceso_inventarioUpdateWithWhereUniqueWithoutProcesoInput[]
    updateMany?: proceso_inventarioUpdateManyWithWhereWithoutProcesoInput | proceso_inventarioUpdateManyWithWhereWithoutProcesoInput[]
    deleteMany?: proceso_inventarioScalarWhereInput | proceso_inventarioScalarWhereInput[]
  }

  export type ProcesoCreateNestedOneWithoutEmpleadosInput = {
    create?: XOR<ProcesoCreateWithoutEmpleadosInput, ProcesoUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: ProcesoCreateOrConnectWithoutEmpleadosInput
    connect?: ProcesoWhereUniqueInput
  }

  export type EmpleadoCreateNestedOneWithoutProcesoInput = {
    create?: XOR<EmpleadoCreateWithoutProcesoInput, EmpleadoUncheckedCreateWithoutProcesoInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutProcesoInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type HorarioCreateNestedManyWithoutProceso_empleadosInput = {
    create?: XOR<HorarioCreateWithoutProceso_empleadosInput, HorarioUncheckedCreateWithoutProceso_empleadosInput> | HorarioCreateWithoutProceso_empleadosInput[] | HorarioUncheckedCreateWithoutProceso_empleadosInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_empleadosInput | HorarioCreateOrConnectWithoutProceso_empleadosInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
  }

  export type HorarioUncheckedCreateNestedManyWithoutProceso_empleadosInput = {
    create?: XOR<HorarioCreateWithoutProceso_empleadosInput, HorarioUncheckedCreateWithoutProceso_empleadosInput> | HorarioCreateWithoutProceso_empleadosInput[] | HorarioUncheckedCreateWithoutProceso_empleadosInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_empleadosInput | HorarioCreateOrConnectWithoutProceso_empleadosInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProcesoUpdateOneRequiredWithoutEmpleadosNestedInput = {
    create?: XOR<ProcesoCreateWithoutEmpleadosInput, ProcesoUncheckedCreateWithoutEmpleadosInput>
    connectOrCreate?: ProcesoCreateOrConnectWithoutEmpleadosInput
    upsert?: ProcesoUpsertWithoutEmpleadosInput
    connect?: ProcesoWhereUniqueInput
    update?: XOR<XOR<ProcesoUpdateToOneWithWhereWithoutEmpleadosInput, ProcesoUpdateWithoutEmpleadosInput>, ProcesoUncheckedUpdateWithoutEmpleadosInput>
  }

  export type EmpleadoUpdateOneRequiredWithoutProcesoNestedInput = {
    create?: XOR<EmpleadoCreateWithoutProcesoInput, EmpleadoUncheckedCreateWithoutProcesoInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutProcesoInput
    upsert?: EmpleadoUpsertWithoutProcesoInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutProcesoInput, EmpleadoUpdateWithoutProcesoInput>, EmpleadoUncheckedUpdateWithoutProcesoInput>
  }

  export type HorarioUpdateManyWithoutProceso_empleadosNestedInput = {
    create?: XOR<HorarioCreateWithoutProceso_empleadosInput, HorarioUncheckedCreateWithoutProceso_empleadosInput> | HorarioCreateWithoutProceso_empleadosInput[] | HorarioUncheckedCreateWithoutProceso_empleadosInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_empleadosInput | HorarioCreateOrConnectWithoutProceso_empleadosInput[]
    upsert?: HorarioUpsertWithWhereUniqueWithoutProceso_empleadosInput | HorarioUpsertWithWhereUniqueWithoutProceso_empleadosInput[]
    set?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    disconnect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    delete?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    update?: HorarioUpdateWithWhereUniqueWithoutProceso_empleadosInput | HorarioUpdateWithWhereUniqueWithoutProceso_empleadosInput[]
    updateMany?: HorarioUpdateManyWithWhereWithoutProceso_empleadosInput | HorarioUpdateManyWithWhereWithoutProceso_empleadosInput[]
    deleteMany?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
  }

  export type HorarioUncheckedUpdateManyWithoutProceso_empleadosNestedInput = {
    create?: XOR<HorarioCreateWithoutProceso_empleadosInput, HorarioUncheckedCreateWithoutProceso_empleadosInput> | HorarioCreateWithoutProceso_empleadosInput[] | HorarioUncheckedCreateWithoutProceso_empleadosInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_empleadosInput | HorarioCreateOrConnectWithoutProceso_empleadosInput[]
    upsert?: HorarioUpsertWithWhereUniqueWithoutProceso_empleadosInput | HorarioUpsertWithWhereUniqueWithoutProceso_empleadosInput[]
    set?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    disconnect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    delete?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    update?: HorarioUpdateWithWhereUniqueWithoutProceso_empleadosInput | HorarioUpdateWithWhereUniqueWithoutProceso_empleadosInput[]
    updateMany?: HorarioUpdateManyWithWhereWithoutProceso_empleadosInput | HorarioUpdateManyWithWhereWithoutProceso_empleadosInput[]
    deleteMany?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
  }

  export type ProcesoCreateNestedOneWithoutHerramientasInput = {
    create?: XOR<ProcesoCreateWithoutHerramientasInput, ProcesoUncheckedCreateWithoutHerramientasInput>
    connectOrCreate?: ProcesoCreateOrConnectWithoutHerramientasInput
    connect?: ProcesoWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutProceso_herramientasInput = {
    create?: XOR<InventarioCreateWithoutProceso_herramientasInput, InventarioUncheckedCreateWithoutProceso_herramientasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutProceso_herramientasInput
    connect?: InventarioWhereUniqueInput
  }

  export type HorarioCreateNestedManyWithoutProceso_herramientasInput = {
    create?: XOR<HorarioCreateWithoutProceso_herramientasInput, HorarioUncheckedCreateWithoutProceso_herramientasInput> | HorarioCreateWithoutProceso_herramientasInput[] | HorarioUncheckedCreateWithoutProceso_herramientasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_herramientasInput | HorarioCreateOrConnectWithoutProceso_herramientasInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
  }

  export type HorarioUncheckedCreateNestedManyWithoutProceso_herramientasInput = {
    create?: XOR<HorarioCreateWithoutProceso_herramientasInput, HorarioUncheckedCreateWithoutProceso_herramientasInput> | HorarioCreateWithoutProceso_herramientasInput[] | HorarioUncheckedCreateWithoutProceso_herramientasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_herramientasInput | HorarioCreateOrConnectWithoutProceso_herramientasInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
  }

  export type ProcesoUpdateOneRequiredWithoutHerramientasNestedInput = {
    create?: XOR<ProcesoCreateWithoutHerramientasInput, ProcesoUncheckedCreateWithoutHerramientasInput>
    connectOrCreate?: ProcesoCreateOrConnectWithoutHerramientasInput
    upsert?: ProcesoUpsertWithoutHerramientasInput
    connect?: ProcesoWhereUniqueInput
    update?: XOR<XOR<ProcesoUpdateToOneWithWhereWithoutHerramientasInput, ProcesoUpdateWithoutHerramientasInput>, ProcesoUncheckedUpdateWithoutHerramientasInput>
  }

  export type InventarioUpdateOneRequiredWithoutProceso_herramientasNestedInput = {
    create?: XOR<InventarioCreateWithoutProceso_herramientasInput, InventarioUncheckedCreateWithoutProceso_herramientasInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutProceso_herramientasInput
    upsert?: InventarioUpsertWithoutProceso_herramientasInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutProceso_herramientasInput, InventarioUpdateWithoutProceso_herramientasInput>, InventarioUncheckedUpdateWithoutProceso_herramientasInput>
  }

  export type HorarioUpdateManyWithoutProceso_herramientasNestedInput = {
    create?: XOR<HorarioCreateWithoutProceso_herramientasInput, HorarioUncheckedCreateWithoutProceso_herramientasInput> | HorarioCreateWithoutProceso_herramientasInput[] | HorarioUncheckedCreateWithoutProceso_herramientasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_herramientasInput | HorarioCreateOrConnectWithoutProceso_herramientasInput[]
    upsert?: HorarioUpsertWithWhereUniqueWithoutProceso_herramientasInput | HorarioUpsertWithWhereUniqueWithoutProceso_herramientasInput[]
    set?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    disconnect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    delete?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    update?: HorarioUpdateWithWhereUniqueWithoutProceso_herramientasInput | HorarioUpdateWithWhereUniqueWithoutProceso_herramientasInput[]
    updateMany?: HorarioUpdateManyWithWhereWithoutProceso_herramientasInput | HorarioUpdateManyWithWhereWithoutProceso_herramientasInput[]
    deleteMany?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
  }

  export type HorarioUncheckedUpdateManyWithoutProceso_herramientasNestedInput = {
    create?: XOR<HorarioCreateWithoutProceso_herramientasInput, HorarioUncheckedCreateWithoutProceso_herramientasInput> | HorarioCreateWithoutProceso_herramientasInput[] | HorarioUncheckedCreateWithoutProceso_herramientasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutProceso_herramientasInput | HorarioCreateOrConnectWithoutProceso_herramientasInput[]
    upsert?: HorarioUpsertWithWhereUniqueWithoutProceso_herramientasInput | HorarioUpsertWithWhereUniqueWithoutProceso_herramientasInput[]
    set?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    disconnect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    delete?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    update?: HorarioUpdateWithWhereUniqueWithoutProceso_herramientasInput | HorarioUpdateWithWhereUniqueWithoutProceso_herramientasInput[]
    updateMany?: HorarioUpdateManyWithWhereWithoutProceso_herramientasInput | HorarioUpdateManyWithWhereWithoutProceso_herramientasInput[]
    deleteMany?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
  }

  export type ProcesoCreateNestedOneWithoutInventarioInput = {
    create?: XOR<ProcesoCreateWithoutInventarioInput, ProcesoUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: ProcesoCreateOrConnectWithoutInventarioInput
    connect?: ProcesoWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutProceso_inventarioInput = {
    create?: XOR<InventarioCreateWithoutProceso_inventarioInput, InventarioUncheckedCreateWithoutProceso_inventarioInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutProceso_inventarioInput
    connect?: InventarioWhereUniqueInput
  }

  export type ProcesoUpdateOneRequiredWithoutInventarioNestedInput = {
    create?: XOR<ProcesoCreateWithoutInventarioInput, ProcesoUncheckedCreateWithoutInventarioInput>
    connectOrCreate?: ProcesoCreateOrConnectWithoutInventarioInput
    upsert?: ProcesoUpsertWithoutInventarioInput
    connect?: ProcesoWhereUniqueInput
    update?: XOR<XOR<ProcesoUpdateToOneWithWhereWithoutInventarioInput, ProcesoUpdateWithoutInventarioInput>, ProcesoUncheckedUpdateWithoutInventarioInput>
  }

  export type InventarioUpdateOneRequiredWithoutProceso_inventarioNestedInput = {
    create?: XOR<InventarioCreateWithoutProceso_inventarioInput, InventarioUncheckedCreateWithoutProceso_inventarioInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutProceso_inventarioInput
    upsert?: InventarioUpsertWithoutProceso_inventarioInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutProceso_inventarioInput, InventarioUpdateWithoutProceso_inventarioInput>, InventarioUncheckedUpdateWithoutProceso_inventarioInput>
  }

  export type PuntoCreateNestedOneWithoutObraInput = {
    create?: XOR<PuntoCreateWithoutObraInput, PuntoUncheckedCreateWithoutObraInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutObraInput
    connect?: PuntoWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutObraInput = {
    create?: XOR<PersonaCreateWithoutObraInput, PersonaUncheckedCreateWithoutObraInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutObraInput
    connect?: PersonaWhereUniqueInput
  }

  export type ProformaCreateNestedOneWithoutObraInput = {
    create?: XOR<ProformaCreateWithoutObraInput, ProformaUncheckedCreateWithoutObraInput>
    connectOrCreate?: ProformaCreateOrConnectWithoutObraInput
    connect?: ProformaWhereUniqueInput
  }

  export type ProcesoCreateNestedManyWithoutObraInput = {
    create?: XOR<ProcesoCreateWithoutObraInput, ProcesoUncheckedCreateWithoutObraInput> | ProcesoCreateWithoutObraInput[] | ProcesoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutObraInput | ProcesoCreateOrConnectWithoutObraInput[]
    createMany?: ProcesoCreateManyObraInputEnvelope
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
  }

  export type TransaccionCreateNestedManyWithoutObraInput = {
    create?: XOR<TransaccionCreateWithoutObraInput, TransaccionUncheckedCreateWithoutObraInput> | TransaccionCreateWithoutObraInput[] | TransaccionUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutObraInput | TransaccionCreateOrConnectWithoutObraInput[]
    createMany?: TransaccionCreateManyObraInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type PedidoCreateNestedManyWithoutObraInput = {
    create?: XOR<PedidoCreateWithoutObraInput, PedidoUncheckedCreateWithoutObraInput> | PedidoCreateWithoutObraInput[] | PedidoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutObraInput | PedidoCreateOrConnectWithoutObraInput[]
    createMany?: PedidoCreateManyObraInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type TareaCreateNestedManyWithoutObraInput = {
    create?: XOR<TareaCreateWithoutObraInput, TareaUncheckedCreateWithoutObraInput> | TareaCreateWithoutObraInput[] | TareaUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutObraInput | TareaCreateOrConnectWithoutObraInput[]
    createMany?: TareaCreateManyObraInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type ProcesoUncheckedCreateNestedManyWithoutObraInput = {
    create?: XOR<ProcesoCreateWithoutObraInput, ProcesoUncheckedCreateWithoutObraInput> | ProcesoCreateWithoutObraInput[] | ProcesoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutObraInput | ProcesoCreateOrConnectWithoutObraInput[]
    createMany?: ProcesoCreateManyObraInputEnvelope
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
  }

  export type TransaccionUncheckedCreateNestedManyWithoutObraInput = {
    create?: XOR<TransaccionCreateWithoutObraInput, TransaccionUncheckedCreateWithoutObraInput> | TransaccionCreateWithoutObraInput[] | TransaccionUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutObraInput | TransaccionCreateOrConnectWithoutObraInput[]
    createMany?: TransaccionCreateManyObraInputEnvelope
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutObraInput = {
    create?: XOR<PedidoCreateWithoutObraInput, PedidoUncheckedCreateWithoutObraInput> | PedidoCreateWithoutObraInput[] | PedidoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutObraInput | PedidoCreateOrConnectWithoutObraInput[]
    createMany?: PedidoCreateManyObraInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type TareaUncheckedCreateNestedManyWithoutObraInput = {
    create?: XOR<TareaCreateWithoutObraInput, TareaUncheckedCreateWithoutObraInput> | TareaCreateWithoutObraInput[] | TareaUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutObraInput | TareaCreateOrConnectWithoutObraInput[]
    createMany?: TareaCreateManyObraInputEnvelope
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
  }

  export type EnumEstadoObraFieldUpdateOperationsInput = {
    set?: $Enums.EstadoObra
  }

  export type PuntoUpdateOneRequiredWithoutObraNestedInput = {
    create?: XOR<PuntoCreateWithoutObraInput, PuntoUncheckedCreateWithoutObraInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutObraInput
    upsert?: PuntoUpsertWithoutObraInput
    connect?: PuntoWhereUniqueInput
    update?: XOR<XOR<PuntoUpdateToOneWithWhereWithoutObraInput, PuntoUpdateWithoutObraInput>, PuntoUncheckedUpdateWithoutObraInput>
  }

  export type PersonaUpdateOneRequiredWithoutObraNestedInput = {
    create?: XOR<PersonaCreateWithoutObraInput, PersonaUncheckedCreateWithoutObraInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutObraInput
    upsert?: PersonaUpsertWithoutObraInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutObraInput, PersonaUpdateWithoutObraInput>, PersonaUncheckedUpdateWithoutObraInput>
  }

  export type ProformaUpdateOneRequiredWithoutObraNestedInput = {
    create?: XOR<ProformaCreateWithoutObraInput, ProformaUncheckedCreateWithoutObraInput>
    connectOrCreate?: ProformaCreateOrConnectWithoutObraInput
    upsert?: ProformaUpsertWithoutObraInput
    connect?: ProformaWhereUniqueInput
    update?: XOR<XOR<ProformaUpdateToOneWithWhereWithoutObraInput, ProformaUpdateWithoutObraInput>, ProformaUncheckedUpdateWithoutObraInput>
  }

  export type ProcesoUpdateManyWithoutObraNestedInput = {
    create?: XOR<ProcesoCreateWithoutObraInput, ProcesoUncheckedCreateWithoutObraInput> | ProcesoCreateWithoutObraInput[] | ProcesoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutObraInput | ProcesoCreateOrConnectWithoutObraInput[]
    upsert?: ProcesoUpsertWithWhereUniqueWithoutObraInput | ProcesoUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: ProcesoCreateManyObraInputEnvelope
    set?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    disconnect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    delete?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    update?: ProcesoUpdateWithWhereUniqueWithoutObraInput | ProcesoUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: ProcesoUpdateManyWithWhereWithoutObraInput | ProcesoUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: ProcesoScalarWhereInput | ProcesoScalarWhereInput[]
  }

  export type TransaccionUpdateManyWithoutObraNestedInput = {
    create?: XOR<TransaccionCreateWithoutObraInput, TransaccionUncheckedCreateWithoutObraInput> | TransaccionCreateWithoutObraInput[] | TransaccionUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutObraInput | TransaccionCreateOrConnectWithoutObraInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutObraInput | TransaccionUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: TransaccionCreateManyObraInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutObraInput | TransaccionUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutObraInput | TransaccionUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type PedidoUpdateManyWithoutObraNestedInput = {
    create?: XOR<PedidoCreateWithoutObraInput, PedidoUncheckedCreateWithoutObraInput> | PedidoCreateWithoutObraInput[] | PedidoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutObraInput | PedidoCreateOrConnectWithoutObraInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutObraInput | PedidoUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: PedidoCreateManyObraInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutObraInput | PedidoUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutObraInput | PedidoUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type TareaUpdateManyWithoutObraNestedInput = {
    create?: XOR<TareaCreateWithoutObraInput, TareaUncheckedCreateWithoutObraInput> | TareaCreateWithoutObraInput[] | TareaUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutObraInput | TareaCreateOrConnectWithoutObraInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutObraInput | TareaUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: TareaCreateManyObraInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutObraInput | TareaUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutObraInput | TareaUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type ProcesoUncheckedUpdateManyWithoutObraNestedInput = {
    create?: XOR<ProcesoCreateWithoutObraInput, ProcesoUncheckedCreateWithoutObraInput> | ProcesoCreateWithoutObraInput[] | ProcesoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: ProcesoCreateOrConnectWithoutObraInput | ProcesoCreateOrConnectWithoutObraInput[]
    upsert?: ProcesoUpsertWithWhereUniqueWithoutObraInput | ProcesoUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: ProcesoCreateManyObraInputEnvelope
    set?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    disconnect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    delete?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    connect?: ProcesoWhereUniqueInput | ProcesoWhereUniqueInput[]
    update?: ProcesoUpdateWithWhereUniqueWithoutObraInput | ProcesoUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: ProcesoUpdateManyWithWhereWithoutObraInput | ProcesoUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: ProcesoScalarWhereInput | ProcesoScalarWhereInput[]
  }

  export type TransaccionUncheckedUpdateManyWithoutObraNestedInput = {
    create?: XOR<TransaccionCreateWithoutObraInput, TransaccionUncheckedCreateWithoutObraInput> | TransaccionCreateWithoutObraInput[] | TransaccionUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TransaccionCreateOrConnectWithoutObraInput | TransaccionCreateOrConnectWithoutObraInput[]
    upsert?: TransaccionUpsertWithWhereUniqueWithoutObraInput | TransaccionUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: TransaccionCreateManyObraInputEnvelope
    set?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    disconnect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    delete?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    connect?: TransaccionWhereUniqueInput | TransaccionWhereUniqueInput[]
    update?: TransaccionUpdateWithWhereUniqueWithoutObraInput | TransaccionUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: TransaccionUpdateManyWithWhereWithoutObraInput | TransaccionUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutObraNestedInput = {
    create?: XOR<PedidoCreateWithoutObraInput, PedidoUncheckedCreateWithoutObraInput> | PedidoCreateWithoutObraInput[] | PedidoUncheckedCreateWithoutObraInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutObraInput | PedidoCreateOrConnectWithoutObraInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutObraInput | PedidoUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: PedidoCreateManyObraInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutObraInput | PedidoUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutObraInput | PedidoUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type TareaUncheckedUpdateManyWithoutObraNestedInput = {
    create?: XOR<TareaCreateWithoutObraInput, TareaUncheckedCreateWithoutObraInput> | TareaCreateWithoutObraInput[] | TareaUncheckedCreateWithoutObraInput[]
    connectOrCreate?: TareaCreateOrConnectWithoutObraInput | TareaCreateOrConnectWithoutObraInput[]
    upsert?: TareaUpsertWithWhereUniqueWithoutObraInput | TareaUpsertWithWhereUniqueWithoutObraInput[]
    createMany?: TareaCreateManyObraInputEnvelope
    set?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    disconnect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    delete?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    connect?: TareaWhereUniqueInput | TareaWhereUniqueInput[]
    update?: TareaUpdateWithWhereUniqueWithoutObraInput | TareaUpdateWithWhereUniqueWithoutObraInput[]
    updateMany?: TareaUpdateManyWithWhereWithoutObraInput | TareaUpdateManyWithWhereWithoutObraInput[]
    deleteMany?: TareaScalarWhereInput | TareaScalarWhereInput[]
  }

  export type EmpleadoCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<EmpleadoCreateWithoutTransaccionInput, EmpleadoUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutTransaccionInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<PersonaCreateWithoutTransaccionInput, PersonaUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutTransaccionInput
    connect?: PersonaWhereUniqueInput
  }

  export type ObraCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<ObraCreateWithoutTransaccionInput, ObraUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: ObraCreateOrConnectWithoutTransaccionInput
    connect?: ObraWhereUniqueInput
  }

  export type transaccion_elementosCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<transaccion_elementosCreateWithoutTransaccionInput, transaccion_elementosUncheckedCreateWithoutTransaccionInput> | transaccion_elementosCreateWithoutTransaccionInput[] | transaccion_elementosUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutTransaccionInput | transaccion_elementosCreateOrConnectWithoutTransaccionInput[]
    createMany?: transaccion_elementosCreateManyTransaccionInputEnvelope
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
  }

  export type PedidoCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<PedidoCreateWithoutTransaccionInput, PedidoUncheckedCreateWithoutTransaccionInput> | PedidoCreateWithoutTransaccionInput[] | PedidoUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutTransaccionInput | PedidoCreateOrConnectWithoutTransaccionInput[]
    createMany?: PedidoCreateManyTransaccionInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type CompraCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<CompraCreateWithoutTransaccionInput, CompraUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: CompraCreateOrConnectWithoutTransaccionInput
    connect?: CompraWhereUniqueInput
  }

  export type VentaCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput
    connect?: VentaWhereUniqueInput
  }

  export type DevolucionCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<DevolucionCreateWithoutTransaccionInput, DevolucionUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: DevolucionCreateOrConnectWithoutTransaccionInput
    connect?: DevolucionWhereUniqueInput
  }

  export type transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<transaccion_elementosCreateWithoutTransaccionInput, transaccion_elementosUncheckedCreateWithoutTransaccionInput> | transaccion_elementosCreateWithoutTransaccionInput[] | transaccion_elementosUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutTransaccionInput | transaccion_elementosCreateOrConnectWithoutTransaccionInput[]
    createMany?: transaccion_elementosCreateManyTransaccionInputEnvelope
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<PedidoCreateWithoutTransaccionInput, PedidoUncheckedCreateWithoutTransaccionInput> | PedidoCreateWithoutTransaccionInput[] | PedidoUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutTransaccionInput | PedidoCreateOrConnectWithoutTransaccionInput[]
    createMany?: PedidoCreateManyTransaccionInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type CompraUncheckedCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<CompraCreateWithoutTransaccionInput, CompraUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: CompraCreateOrConnectWithoutTransaccionInput
    connect?: CompraWhereUniqueInput
  }

  export type VentaUncheckedCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput
    connect?: VentaWhereUniqueInput
  }

  export type DevolucionUncheckedCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<DevolucionCreateWithoutTransaccionInput, DevolucionUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: DevolucionCreateOrConnectWithoutTransaccionInput
    connect?: DevolucionWhereUniqueInput
  }

  export type EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput = {
    create?: XOR<EmpleadoCreateWithoutTransaccionInput, EmpleadoUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutTransaccionInput
    upsert?: EmpleadoUpsertWithoutTransaccionInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutTransaccionInput, EmpleadoUpdateWithoutTransaccionInput>, EmpleadoUncheckedUpdateWithoutTransaccionInput>
  }

  export type PersonaUpdateOneRequiredWithoutTransaccionNestedInput = {
    create?: XOR<PersonaCreateWithoutTransaccionInput, PersonaUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutTransaccionInput
    upsert?: PersonaUpsertWithoutTransaccionInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutTransaccionInput, PersonaUpdateWithoutTransaccionInput>, PersonaUncheckedUpdateWithoutTransaccionInput>
  }

  export type ObraUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<ObraCreateWithoutTransaccionInput, ObraUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: ObraCreateOrConnectWithoutTransaccionInput
    upsert?: ObraUpsertWithoutTransaccionInput
    disconnect?: ObraWhereInput | boolean
    delete?: ObraWhereInput | boolean
    connect?: ObraWhereUniqueInput
    update?: XOR<XOR<ObraUpdateToOneWithWhereWithoutTransaccionInput, ObraUpdateWithoutTransaccionInput>, ObraUncheckedUpdateWithoutTransaccionInput>
  }

  export type transaccion_elementosUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<transaccion_elementosCreateWithoutTransaccionInput, transaccion_elementosUncheckedCreateWithoutTransaccionInput> | transaccion_elementosCreateWithoutTransaccionInput[] | transaccion_elementosUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutTransaccionInput | transaccion_elementosCreateOrConnectWithoutTransaccionInput[]
    upsert?: transaccion_elementosUpsertWithWhereUniqueWithoutTransaccionInput | transaccion_elementosUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: transaccion_elementosCreateManyTransaccionInputEnvelope
    set?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    disconnect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    delete?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    update?: transaccion_elementosUpdateWithWhereUniqueWithoutTransaccionInput | transaccion_elementosUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: transaccion_elementosUpdateManyWithWhereWithoutTransaccionInput | transaccion_elementosUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: transaccion_elementosScalarWhereInput | transaccion_elementosScalarWhereInput[]
  }

  export type PedidoUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<PedidoCreateWithoutTransaccionInput, PedidoUncheckedCreateWithoutTransaccionInput> | PedidoCreateWithoutTransaccionInput[] | PedidoUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutTransaccionInput | PedidoCreateOrConnectWithoutTransaccionInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutTransaccionInput | PedidoUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: PedidoCreateManyTransaccionInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutTransaccionInput | PedidoUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutTransaccionInput | PedidoUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type CompraUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<CompraCreateWithoutTransaccionInput, CompraUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: CompraCreateOrConnectWithoutTransaccionInput
    upsert?: CompraUpsertWithoutTransaccionInput
    disconnect?: CompraWhereInput | boolean
    delete?: CompraWhereInput | boolean
    connect?: CompraWhereUniqueInput
    update?: XOR<XOR<CompraUpdateToOneWithWhereWithoutTransaccionInput, CompraUpdateWithoutTransaccionInput>, CompraUncheckedUpdateWithoutTransaccionInput>
  }

  export type VentaUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput
    upsert?: VentaUpsertWithoutTransaccionInput
    disconnect?: VentaWhereInput | boolean
    delete?: VentaWhereInput | boolean
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutTransaccionInput, VentaUpdateWithoutTransaccionInput>, VentaUncheckedUpdateWithoutTransaccionInput>
  }

  export type DevolucionUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<DevolucionCreateWithoutTransaccionInput, DevolucionUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: DevolucionCreateOrConnectWithoutTransaccionInput
    upsert?: DevolucionUpsertWithoutTransaccionInput
    disconnect?: DevolucionWhereInput | boolean
    delete?: DevolucionWhereInput | boolean
    connect?: DevolucionWhereUniqueInput
    update?: XOR<XOR<DevolucionUpdateToOneWithWhereWithoutTransaccionInput, DevolucionUpdateWithoutTransaccionInput>, DevolucionUncheckedUpdateWithoutTransaccionInput>
  }

  export type transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<transaccion_elementosCreateWithoutTransaccionInput, transaccion_elementosUncheckedCreateWithoutTransaccionInput> | transaccion_elementosCreateWithoutTransaccionInput[] | transaccion_elementosUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: transaccion_elementosCreateOrConnectWithoutTransaccionInput | transaccion_elementosCreateOrConnectWithoutTransaccionInput[]
    upsert?: transaccion_elementosUpsertWithWhereUniqueWithoutTransaccionInput | transaccion_elementosUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: transaccion_elementosCreateManyTransaccionInputEnvelope
    set?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    disconnect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    delete?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    connect?: transaccion_elementosWhereUniqueInput | transaccion_elementosWhereUniqueInput[]
    update?: transaccion_elementosUpdateWithWhereUniqueWithoutTransaccionInput | transaccion_elementosUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: transaccion_elementosUpdateManyWithWhereWithoutTransaccionInput | transaccion_elementosUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: transaccion_elementosScalarWhereInput | transaccion_elementosScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<PedidoCreateWithoutTransaccionInput, PedidoUncheckedCreateWithoutTransaccionInput> | PedidoCreateWithoutTransaccionInput[] | PedidoUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutTransaccionInput | PedidoCreateOrConnectWithoutTransaccionInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutTransaccionInput | PedidoUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: PedidoCreateManyTransaccionInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutTransaccionInput | PedidoUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutTransaccionInput | PedidoUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type CompraUncheckedUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<CompraCreateWithoutTransaccionInput, CompraUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: CompraCreateOrConnectWithoutTransaccionInput
    upsert?: CompraUpsertWithoutTransaccionInput
    disconnect?: CompraWhereInput | boolean
    delete?: CompraWhereInput | boolean
    connect?: CompraWhereUniqueInput
    update?: XOR<XOR<CompraUpdateToOneWithWhereWithoutTransaccionInput, CompraUpdateWithoutTransaccionInput>, CompraUncheckedUpdateWithoutTransaccionInput>
  }

  export type VentaUncheckedUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: VentaCreateOrConnectWithoutTransaccionInput
    upsert?: VentaUpsertWithoutTransaccionInput
    disconnect?: VentaWhereInput | boolean
    delete?: VentaWhereInput | boolean
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutTransaccionInput, VentaUpdateWithoutTransaccionInput>, VentaUncheckedUpdateWithoutTransaccionInput>
  }

  export type DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput = {
    create?: XOR<DevolucionCreateWithoutTransaccionInput, DevolucionUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: DevolucionCreateOrConnectWithoutTransaccionInput
    upsert?: DevolucionUpsertWithoutTransaccionInput
    disconnect?: DevolucionWhereInput | boolean
    delete?: DevolucionWhereInput | boolean
    connect?: DevolucionWhereUniqueInput
    update?: XOR<XOR<DevolucionUpdateToOneWithWhereWithoutTransaccionInput, DevolucionUpdateWithoutTransaccionInput>, DevolucionUncheckedUpdateWithoutTransaccionInput>
  }

  export type TransaccionCreateNestedOneWithoutElementosInput = {
    create?: XOR<TransaccionCreateWithoutElementosInput, TransaccionUncheckedCreateWithoutElementosInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutElementosInput
    connect?: TransaccionWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutTransaccionInput = {
    create?: XOR<InventarioCreateWithoutTransaccionInput, InventarioUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutTransaccionInput
    connect?: InventarioWhereUniqueInput
  }

  export type TransaccionUpdateOneRequiredWithoutElementosNestedInput = {
    create?: XOR<TransaccionCreateWithoutElementosInput, TransaccionUncheckedCreateWithoutElementosInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutElementosInput
    upsert?: TransaccionUpsertWithoutElementosInput
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutElementosInput, TransaccionUpdateWithoutElementosInput>, TransaccionUncheckedUpdateWithoutElementosInput>
  }

  export type InventarioUpdateOneRequiredWithoutTransaccionNestedInput = {
    create?: XOR<InventarioCreateWithoutTransaccionInput, InventarioUncheckedCreateWithoutTransaccionInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutTransaccionInput
    upsert?: InventarioUpsertWithoutTransaccionInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutTransaccionInput, InventarioUpdateWithoutTransaccionInput>, InventarioUncheckedUpdateWithoutTransaccionInput>
  }

  export type TransaccionCreateNestedOneWithoutCompraInput = {
    create?: XOR<TransaccionCreateWithoutCompraInput, TransaccionUncheckedCreateWithoutCompraInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutCompraInput
    connect?: TransaccionWhereUniqueInput
  }

  export type TransaccionUpdateOneRequiredWithoutCompraNestedInput = {
    create?: XOR<TransaccionCreateWithoutCompraInput, TransaccionUncheckedCreateWithoutCompraInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutCompraInput
    upsert?: TransaccionUpsertWithoutCompraInput
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutCompraInput, TransaccionUpdateWithoutCompraInput>, TransaccionUncheckedUpdateWithoutCompraInput>
  }

  export type TransaccionCreateNestedOneWithoutVentaInput = {
    create?: XOR<TransaccionCreateWithoutVentaInput, TransaccionUncheckedCreateWithoutVentaInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutVentaInput
    connect?: TransaccionWhereUniqueInput
  }

  export type TransaccionUpdateOneRequiredWithoutVentaNestedInput = {
    create?: XOR<TransaccionCreateWithoutVentaInput, TransaccionUncheckedCreateWithoutVentaInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutVentaInput
    upsert?: TransaccionUpsertWithoutVentaInput
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutVentaInput, TransaccionUpdateWithoutVentaInput>, TransaccionUncheckedUpdateWithoutVentaInput>
  }

  export type TransaccionCreateNestedOneWithoutDevolucionInput = {
    create?: XOR<TransaccionCreateWithoutDevolucionInput, TransaccionUncheckedCreateWithoutDevolucionInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutDevolucionInput
    connect?: TransaccionWhereUniqueInput
  }

  export type TransaccionUpdateOneRequiredWithoutDevolucionNestedInput = {
    create?: XOR<TransaccionCreateWithoutDevolucionInput, TransaccionUncheckedCreateWithoutDevolucionInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutDevolucionInput
    upsert?: TransaccionUpsertWithoutDevolucionInput
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutDevolucionInput, TransaccionUpdateWithoutDevolucionInput>, TransaccionUncheckedUpdateWithoutDevolucionInput>
  }

  export type DiaCreateNestedManyWithoutHorariosInput = {
    create?: XOR<DiaCreateWithoutHorariosInput, DiaUncheckedCreateWithoutHorariosInput> | DiaCreateWithoutHorariosInput[] | DiaUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: DiaCreateOrConnectWithoutHorariosInput | DiaCreateOrConnectWithoutHorariosInput[]
    connect?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
  }

  export type proceso_empleadosCreateNestedManyWithoutHorariosInput = {
    create?: XOR<proceso_empleadosCreateWithoutHorariosInput, proceso_empleadosUncheckedCreateWithoutHorariosInput> | proceso_empleadosCreateWithoutHorariosInput[] | proceso_empleadosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutHorariosInput | proceso_empleadosCreateOrConnectWithoutHorariosInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
  }

  export type proceso_herramientasCreateNestedManyWithoutHorariosInput = {
    create?: XOR<proceso_herramientasCreateWithoutHorariosInput, proceso_herramientasUncheckedCreateWithoutHorariosInput> | proceso_herramientasCreateWithoutHorariosInput[] | proceso_herramientasUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHorariosInput | proceso_herramientasCreateOrConnectWithoutHorariosInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
  }

  export type DiaUncheckedCreateNestedManyWithoutHorariosInput = {
    create?: XOR<DiaCreateWithoutHorariosInput, DiaUncheckedCreateWithoutHorariosInput> | DiaCreateWithoutHorariosInput[] | DiaUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: DiaCreateOrConnectWithoutHorariosInput | DiaCreateOrConnectWithoutHorariosInput[]
    connect?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
  }

  export type proceso_empleadosUncheckedCreateNestedManyWithoutHorariosInput = {
    create?: XOR<proceso_empleadosCreateWithoutHorariosInput, proceso_empleadosUncheckedCreateWithoutHorariosInput> | proceso_empleadosCreateWithoutHorariosInput[] | proceso_empleadosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutHorariosInput | proceso_empleadosCreateOrConnectWithoutHorariosInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
  }

  export type proceso_herramientasUncheckedCreateNestedManyWithoutHorariosInput = {
    create?: XOR<proceso_herramientasCreateWithoutHorariosInput, proceso_herramientasUncheckedCreateWithoutHorariosInput> | proceso_herramientasCreateWithoutHorariosInput[] | proceso_herramientasUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHorariosInput | proceso_herramientasCreateOrConnectWithoutHorariosInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
  }

  export type DiaUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<DiaCreateWithoutHorariosInput, DiaUncheckedCreateWithoutHorariosInput> | DiaCreateWithoutHorariosInput[] | DiaUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: DiaCreateOrConnectWithoutHorariosInput | DiaCreateOrConnectWithoutHorariosInput[]
    upsert?: DiaUpsertWithWhereUniqueWithoutHorariosInput | DiaUpsertWithWhereUniqueWithoutHorariosInput[]
    set?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    disconnect?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    delete?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    connect?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    update?: DiaUpdateWithWhereUniqueWithoutHorariosInput | DiaUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: DiaUpdateManyWithWhereWithoutHorariosInput | DiaUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: DiaScalarWhereInput | DiaScalarWhereInput[]
  }

  export type proceso_empleadosUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<proceso_empleadosCreateWithoutHorariosInput, proceso_empleadosUncheckedCreateWithoutHorariosInput> | proceso_empleadosCreateWithoutHorariosInput[] | proceso_empleadosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutHorariosInput | proceso_empleadosCreateOrConnectWithoutHorariosInput[]
    upsert?: proceso_empleadosUpsertWithWhereUniqueWithoutHorariosInput | proceso_empleadosUpsertWithWhereUniqueWithoutHorariosInput[]
    set?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    disconnect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    delete?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    update?: proceso_empleadosUpdateWithWhereUniqueWithoutHorariosInput | proceso_empleadosUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: proceso_empleadosUpdateManyWithWhereWithoutHorariosInput | proceso_empleadosUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
  }

  export type proceso_herramientasUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<proceso_herramientasCreateWithoutHorariosInput, proceso_herramientasUncheckedCreateWithoutHorariosInput> | proceso_herramientasCreateWithoutHorariosInput[] | proceso_herramientasUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHorariosInput | proceso_herramientasCreateOrConnectWithoutHorariosInput[]
    upsert?: proceso_herramientasUpsertWithWhereUniqueWithoutHorariosInput | proceso_herramientasUpsertWithWhereUniqueWithoutHorariosInput[]
    set?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    disconnect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    delete?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    update?: proceso_herramientasUpdateWithWhereUniqueWithoutHorariosInput | proceso_herramientasUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: proceso_herramientasUpdateManyWithWhereWithoutHorariosInput | proceso_herramientasUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
  }

  export type DiaUncheckedUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<DiaCreateWithoutHorariosInput, DiaUncheckedCreateWithoutHorariosInput> | DiaCreateWithoutHorariosInput[] | DiaUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: DiaCreateOrConnectWithoutHorariosInput | DiaCreateOrConnectWithoutHorariosInput[]
    upsert?: DiaUpsertWithWhereUniqueWithoutHorariosInput | DiaUpsertWithWhereUniqueWithoutHorariosInput[]
    set?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    disconnect?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    delete?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    connect?: DiaWhereUniqueInput | DiaWhereUniqueInput[]
    update?: DiaUpdateWithWhereUniqueWithoutHorariosInput | DiaUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: DiaUpdateManyWithWhereWithoutHorariosInput | DiaUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: DiaScalarWhereInput | DiaScalarWhereInput[]
  }

  export type proceso_empleadosUncheckedUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<proceso_empleadosCreateWithoutHorariosInput, proceso_empleadosUncheckedCreateWithoutHorariosInput> | proceso_empleadosCreateWithoutHorariosInput[] | proceso_empleadosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_empleadosCreateOrConnectWithoutHorariosInput | proceso_empleadosCreateOrConnectWithoutHorariosInput[]
    upsert?: proceso_empleadosUpsertWithWhereUniqueWithoutHorariosInput | proceso_empleadosUpsertWithWhereUniqueWithoutHorariosInput[]
    set?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    disconnect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    delete?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    connect?: proceso_empleadosWhereUniqueInput | proceso_empleadosWhereUniqueInput[]
    update?: proceso_empleadosUpdateWithWhereUniqueWithoutHorariosInput | proceso_empleadosUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: proceso_empleadosUpdateManyWithWhereWithoutHorariosInput | proceso_empleadosUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
  }

  export type proceso_herramientasUncheckedUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<proceso_herramientasCreateWithoutHorariosInput, proceso_herramientasUncheckedCreateWithoutHorariosInput> | proceso_herramientasCreateWithoutHorariosInput[] | proceso_herramientasUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: proceso_herramientasCreateOrConnectWithoutHorariosInput | proceso_herramientasCreateOrConnectWithoutHorariosInput[]
    upsert?: proceso_herramientasUpsertWithWhereUniqueWithoutHorariosInput | proceso_herramientasUpsertWithWhereUniqueWithoutHorariosInput[]
    set?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    disconnect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    delete?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    connect?: proceso_herramientasWhereUniqueInput | proceso_herramientasWhereUniqueInput[]
    update?: proceso_herramientasUpdateWithWhereUniqueWithoutHorariosInput | proceso_herramientasUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: proceso_herramientasUpdateManyWithWhereWithoutHorariosInput | proceso_herramientasUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
  }

  export type HorarioCreateNestedManyWithoutDiasInput = {
    create?: XOR<HorarioCreateWithoutDiasInput, HorarioUncheckedCreateWithoutDiasInput> | HorarioCreateWithoutDiasInput[] | HorarioUncheckedCreateWithoutDiasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutDiasInput | HorarioCreateOrConnectWithoutDiasInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
  }

  export type HorarioUncheckedCreateNestedManyWithoutDiasInput = {
    create?: XOR<HorarioCreateWithoutDiasInput, HorarioUncheckedCreateWithoutDiasInput> | HorarioCreateWithoutDiasInput[] | HorarioUncheckedCreateWithoutDiasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutDiasInput | HorarioCreateOrConnectWithoutDiasInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
  }

  export type EnumDiasSemanaFieldUpdateOperationsInput = {
    set?: $Enums.DiasSemana
  }

  export type HorarioUpdateManyWithoutDiasNestedInput = {
    create?: XOR<HorarioCreateWithoutDiasInput, HorarioUncheckedCreateWithoutDiasInput> | HorarioCreateWithoutDiasInput[] | HorarioUncheckedCreateWithoutDiasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutDiasInput | HorarioCreateOrConnectWithoutDiasInput[]
    upsert?: HorarioUpsertWithWhereUniqueWithoutDiasInput | HorarioUpsertWithWhereUniqueWithoutDiasInput[]
    set?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    disconnect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    delete?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    update?: HorarioUpdateWithWhereUniqueWithoutDiasInput | HorarioUpdateWithWhereUniqueWithoutDiasInput[]
    updateMany?: HorarioUpdateManyWithWhereWithoutDiasInput | HorarioUpdateManyWithWhereWithoutDiasInput[]
    deleteMany?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
  }

  export type HorarioUncheckedUpdateManyWithoutDiasNestedInput = {
    create?: XOR<HorarioCreateWithoutDiasInput, HorarioUncheckedCreateWithoutDiasInput> | HorarioCreateWithoutDiasInput[] | HorarioUncheckedCreateWithoutDiasInput[]
    connectOrCreate?: HorarioCreateOrConnectWithoutDiasInput | HorarioCreateOrConnectWithoutDiasInput[]
    upsert?: HorarioUpsertWithWhereUniqueWithoutDiasInput | HorarioUpsertWithWhereUniqueWithoutDiasInput[]
    set?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    disconnect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    delete?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    connect?: HorarioWhereUniqueInput | HorarioWhereUniqueInput[]
    update?: HorarioUpdateWithWhereUniqueWithoutDiasInput | HorarioUpdateWithWhereUniqueWithoutDiasInput[]
    updateMany?: HorarioUpdateManyWithWhereWithoutDiasInput | HorarioUpdateManyWithWhereWithoutDiasInput[]
    deleteMany?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
  }

  export type ObraCreateNestedOneWithoutPedidoInput = {
    create?: XOR<ObraCreateWithoutPedidoInput, ObraUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: ObraCreateOrConnectWithoutPedidoInput
    connect?: ObraWhereUniqueInput
  }

  export type TransaccionCreateNestedOneWithoutPedidoInput = {
    create?: XOR<TransaccionCreateWithoutPedidoInput, TransaccionUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutPedidoInput
    connect?: TransaccionWhereUniqueInput
  }

  export type pedido_elementosCreateNestedManyWithoutPedidoInput = {
    create?: XOR<pedido_elementosCreateWithoutPedidoInput, pedido_elementosUncheckedCreateWithoutPedidoInput> | pedido_elementosCreateWithoutPedidoInput[] | pedido_elementosUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutPedidoInput | pedido_elementosCreateOrConnectWithoutPedidoInput[]
    createMany?: pedido_elementosCreateManyPedidoInputEnvelope
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
  }

  export type pedido_elementosUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<pedido_elementosCreateWithoutPedidoInput, pedido_elementosUncheckedCreateWithoutPedidoInput> | pedido_elementosCreateWithoutPedidoInput[] | pedido_elementosUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutPedidoInput | pedido_elementosCreateOrConnectWithoutPedidoInput[]
    createMany?: pedido_elementosCreateManyPedidoInputEnvelope
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
  }

  export type ObraUpdateOneRequiredWithoutPedidoNestedInput = {
    create?: XOR<ObraCreateWithoutPedidoInput, ObraUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: ObraCreateOrConnectWithoutPedidoInput
    upsert?: ObraUpsertWithoutPedidoInput
    connect?: ObraWhereUniqueInput
    update?: XOR<XOR<ObraUpdateToOneWithWhereWithoutPedidoInput, ObraUpdateWithoutPedidoInput>, ObraUncheckedUpdateWithoutPedidoInput>
  }

  export type TransaccionUpdateOneRequiredWithoutPedidoNestedInput = {
    create?: XOR<TransaccionCreateWithoutPedidoInput, TransaccionUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: TransaccionCreateOrConnectWithoutPedidoInput
    upsert?: TransaccionUpsertWithoutPedidoInput
    connect?: TransaccionWhereUniqueInput
    update?: XOR<XOR<TransaccionUpdateToOneWithWhereWithoutPedidoInput, TransaccionUpdateWithoutPedidoInput>, TransaccionUncheckedUpdateWithoutPedidoInput>
  }

  export type pedido_elementosUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<pedido_elementosCreateWithoutPedidoInput, pedido_elementosUncheckedCreateWithoutPedidoInput> | pedido_elementosCreateWithoutPedidoInput[] | pedido_elementosUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutPedidoInput | pedido_elementosCreateOrConnectWithoutPedidoInput[]
    upsert?: pedido_elementosUpsertWithWhereUniqueWithoutPedidoInput | pedido_elementosUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: pedido_elementosCreateManyPedidoInputEnvelope
    set?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    disconnect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    delete?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    update?: pedido_elementosUpdateWithWhereUniqueWithoutPedidoInput | pedido_elementosUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: pedido_elementosUpdateManyWithWhereWithoutPedidoInput | pedido_elementosUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
  }

  export type pedido_elementosUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<pedido_elementosCreateWithoutPedidoInput, pedido_elementosUncheckedCreateWithoutPedidoInput> | pedido_elementosCreateWithoutPedidoInput[] | pedido_elementosUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: pedido_elementosCreateOrConnectWithoutPedidoInput | pedido_elementosCreateOrConnectWithoutPedidoInput[]
    upsert?: pedido_elementosUpsertWithWhereUniqueWithoutPedidoInput | pedido_elementosUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: pedido_elementosCreateManyPedidoInputEnvelope
    set?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    disconnect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    delete?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    connect?: pedido_elementosWhereUniqueInput | pedido_elementosWhereUniqueInput[]
    update?: pedido_elementosUpdateWithWhereUniqueWithoutPedidoInput | pedido_elementosUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: pedido_elementosUpdateManyWithWhereWithoutPedidoInput | pedido_elementosUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
  }

  export type EmpleadoCreateNestedOneWithoutTareasAsignadasInput = {
    create?: XOR<EmpleadoCreateWithoutTareasAsignadasInput, EmpleadoUncheckedCreateWithoutTareasAsignadasInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutTareasAsignadasInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type EmpleadoCreateNestedOneWithoutTareasRecibidasInput = {
    create?: XOR<EmpleadoCreateWithoutTareasRecibidasInput, EmpleadoUncheckedCreateWithoutTareasRecibidasInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutTareasRecibidasInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type UbicacionCreateNestedOneWithoutTareaInput = {
    create?: XOR<UbicacionCreateWithoutTareaInput, UbicacionUncheckedCreateWithoutTareaInput>
    connectOrCreate?: UbicacionCreateOrConnectWithoutTareaInput
    connect?: UbicacionWhereUniqueInput
  }

  export type ObraCreateNestedOneWithoutTareaInput = {
    create?: XOR<ObraCreateWithoutTareaInput, ObraUncheckedCreateWithoutTareaInput>
    connectOrCreate?: ObraCreateOrConnectWithoutTareaInput
    connect?: ObraWhereUniqueInput
  }

  export type EnumEstadoTareaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoTarea
  }

  export type EmpleadoUpdateOneRequiredWithoutTareasAsignadasNestedInput = {
    create?: XOR<EmpleadoCreateWithoutTareasAsignadasInput, EmpleadoUncheckedCreateWithoutTareasAsignadasInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutTareasAsignadasInput
    upsert?: EmpleadoUpsertWithoutTareasAsignadasInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutTareasAsignadasInput, EmpleadoUpdateWithoutTareasAsignadasInput>, EmpleadoUncheckedUpdateWithoutTareasAsignadasInput>
  }

  export type EmpleadoUpdateOneWithoutTareasRecibidasNestedInput = {
    create?: XOR<EmpleadoCreateWithoutTareasRecibidasInput, EmpleadoUncheckedCreateWithoutTareasRecibidasInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutTareasRecibidasInput
    upsert?: EmpleadoUpsertWithoutTareasRecibidasInput
    disconnect?: EmpleadoWhereInput | boolean
    delete?: EmpleadoWhereInput | boolean
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutTareasRecibidasInput, EmpleadoUpdateWithoutTareasRecibidasInput>, EmpleadoUncheckedUpdateWithoutTareasRecibidasInput>
  }

  export type UbicacionUpdateOneWithoutTareaNestedInput = {
    create?: XOR<UbicacionCreateWithoutTareaInput, UbicacionUncheckedCreateWithoutTareaInput>
    connectOrCreate?: UbicacionCreateOrConnectWithoutTareaInput
    upsert?: UbicacionUpsertWithoutTareaInput
    disconnect?: UbicacionWhereInput | boolean
    delete?: UbicacionWhereInput | boolean
    connect?: UbicacionWhereUniqueInput
    update?: XOR<XOR<UbicacionUpdateToOneWithWhereWithoutTareaInput, UbicacionUpdateWithoutTareaInput>, UbicacionUncheckedUpdateWithoutTareaInput>
  }

  export type ObraUpdateOneWithoutTareaNestedInput = {
    create?: XOR<ObraCreateWithoutTareaInput, ObraUncheckedCreateWithoutTareaInput>
    connectOrCreate?: ObraCreateOrConnectWithoutTareaInput
    upsert?: ObraUpsertWithoutTareaInput
    disconnect?: ObraWhereInput | boolean
    delete?: ObraWhereInput | boolean
    connect?: ObraWhereUniqueInput
    update?: XOR<XOR<ObraUpdateToOneWithWhereWithoutTareaInput, ObraUpdateWithoutTareaInput>, ObraUncheckedUpdateWithoutTareaInput>
  }

  export type PedidoCreateNestedOneWithoutElementoInput = {
    create?: XOR<PedidoCreateWithoutElementoInput, PedidoUncheckedCreateWithoutElementoInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutElementoInput
    connect?: PedidoWhereUniqueInput
  }

  export type InventarioCreateNestedOneWithoutPedidoInput = {
    create?: XOR<InventarioCreateWithoutPedidoInput, InventarioUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutPedidoInput
    connect?: InventarioWhereUniqueInput
  }

  export type EmpleadoCreateNestedOneWithoutPedidoInput = {
    create?: XOR<EmpleadoCreateWithoutPedidoInput, EmpleadoUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutPedidoInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type EnumEstadoPedidoFieldUpdateOperationsInput = {
    set?: $Enums.EstadoPedido
  }

  export type PedidoUpdateOneRequiredWithoutElementoNestedInput = {
    create?: XOR<PedidoCreateWithoutElementoInput, PedidoUncheckedCreateWithoutElementoInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutElementoInput
    upsert?: PedidoUpsertWithoutElementoInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutElementoInput, PedidoUpdateWithoutElementoInput>, PedidoUncheckedUpdateWithoutElementoInput>
  }

  export type InventarioUpdateOneRequiredWithoutPedidoNestedInput = {
    create?: XOR<InventarioCreateWithoutPedidoInput, InventarioUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: InventarioCreateOrConnectWithoutPedidoInput
    upsert?: InventarioUpsertWithoutPedidoInput
    connect?: InventarioWhereUniqueInput
    update?: XOR<XOR<InventarioUpdateToOneWithWhereWithoutPedidoInput, InventarioUpdateWithoutPedidoInput>, InventarioUncheckedUpdateWithoutPedidoInput>
  }

  export type EmpleadoUpdateOneRequiredWithoutPedidoNestedInput = {
    create?: XOR<EmpleadoCreateWithoutPedidoInput, EmpleadoUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutPedidoInput
    upsert?: EmpleadoUpsertWithoutPedidoInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutPedidoInput, EmpleadoUpdateWithoutPedidoInput>, EmpleadoUncheckedUpdateWithoutPedidoInput>
  }

  export type PuntoCreateNestedOneWithoutEmpleadoInput = {
    create?: XOR<PuntoCreateWithoutEmpleadoInput, PuntoUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutEmpleadoInput
    connect?: PuntoWhereUniqueInput
  }

  export type EmpleadoCreateNestedOneWithoutUbicacionInput = {
    create?: XOR<EmpleadoCreateWithoutUbicacionInput, EmpleadoUncheckedCreateWithoutUbicacionInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutUbicacionInput
    connect?: EmpleadoWhereUniqueInput
  }

  export type PuntoUpdateOneRequiredWithoutEmpleadoNestedInput = {
    create?: XOR<PuntoCreateWithoutEmpleadoInput, PuntoUncheckedCreateWithoutEmpleadoInput>
    connectOrCreate?: PuntoCreateOrConnectWithoutEmpleadoInput
    upsert?: PuntoUpsertWithoutEmpleadoInput
    connect?: PuntoWhereUniqueInput
    update?: XOR<XOR<PuntoUpdateToOneWithWhereWithoutEmpleadoInput, PuntoUpdateWithoutEmpleadoInput>, PuntoUncheckedUpdateWithoutEmpleadoInput>
  }

  export type EmpleadoUpdateOneRequiredWithoutUbicacionNestedInput = {
    create?: XOR<EmpleadoCreateWithoutUbicacionInput, EmpleadoUncheckedCreateWithoutUbicacionInput>
    connectOrCreate?: EmpleadoCreateOrConnectWithoutUbicacionInput
    upsert?: EmpleadoUpsertWithoutUbicacionInput
    connect?: EmpleadoWhereUniqueInput
    update?: XOR<XOR<EmpleadoUpdateToOneWithWhereWithoutUbicacionInput, EmpleadoUpdateWithoutUbicacionInput>, EmpleadoUncheckedUpdateWithoutUbicacionInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumEstadoEliminadoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEliminado | EnumEstadoEliminadoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEliminadoFilter<$PrismaModel> | $Enums.EstadoEliminado
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumEstadoEliminadoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEliminado | EnumEstadoEliminadoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEliminado[] | ListEnumEstadoEliminadoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEliminadoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoEliminado
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoEliminadoFilter<$PrismaModel>
    _max?: NestedEnumEstadoEliminadoFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumCategoriasInventarioFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasInventario | EnumCategoriasInventarioFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasInventarioFilter<$PrismaModel> | $Enums.CategoriasInventario
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumCategoriasInventarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasInventario | EnumCategoriasInventarioFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasInventario[] | ListEnumCategoriasInventarioFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasInventarioWithAggregatesFilter<$PrismaModel> | $Enums.CategoriasInventario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriasInventarioFilter<$PrismaModel>
    _max?: NestedEnumCategoriasInventarioFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumEstadoHerramientasNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoHerramientas | EnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoHerramientasNullableFilter<$PrismaModel> | $Enums.EstadoHerramientas | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoHerramientasNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoHerramientas | EnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoHerramientas[] | ListEnumEstadoHerramientasFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoHerramientasNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoHerramientas | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoHerramientasNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoHerramientasNullableFilter<$PrismaModel>
  }

  export type NestedEnumCategoriasPermisoFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasPermiso | EnumCategoriasPermisoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasPermisoFilter<$PrismaModel> | $Enums.CategoriasPermiso
  }

  export type NestedEnumCategoriasPermisoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriasPermiso | EnumCategoriasPermisoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriasPermiso[] | ListEnumCategoriasPermisoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriasPermisoWithAggregatesFilter<$PrismaModel> | $Enums.CategoriasPermiso
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriasPermisoFilter<$PrismaModel>
    _max?: NestedEnumCategoriasPermisoFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumEstadoTrabajadorFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTrabajador | EnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTrabajadorFilter<$PrismaModel> | $Enums.EstadoTrabajador
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoTrabajadorWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTrabajador | EnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTrabajador[] | ListEnumEstadoTrabajadorFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTrabajadorWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTrabajador
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTrabajadorFilter<$PrismaModel>
    _max?: NestedEnumEstadoTrabajadorFilter<$PrismaModel>
  }

  export type NestedEnumCategoriaMensajesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaMensajes | EnumCategoriaMensajesFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaMensajesFilter<$PrismaModel> | $Enums.CategoriaMensajes
  }

  export type NestedEnumEstadoMensajeFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMensaje | EnumEstadoMensajeFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMensajeFilter<$PrismaModel> | $Enums.EstadoMensaje
  }

  export type NestedEnumCategoriaMensajesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaMensajes | EnumCategoriaMensajesFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaMensajes[] | ListEnumCategoriaMensajesFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaMensajesWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaMensajes
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaMensajesFilter<$PrismaModel>
    _max?: NestedEnumCategoriaMensajesFilter<$PrismaModel>
  }

  export type NestedEnumEstadoMensajeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMensaje | EnumEstadoMensajeFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMensaje[] | ListEnumEstadoMensajeFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMensajeWithAggregatesFilter<$PrismaModel> | $Enums.EstadoMensaje
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoMensajeFilter<$PrismaModel>
    _max?: NestedEnumEstadoMensajeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumEstadoObraFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoObra | EnumEstadoObraFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoObraFilter<$PrismaModel> | $Enums.EstadoObra
  }

  export type NestedEnumEstadoObraWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoObra | EnumEstadoObraFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoObra[] | ListEnumEstadoObraFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoObraWithAggregatesFilter<$PrismaModel> | $Enums.EstadoObra
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoObraFilter<$PrismaModel>
    _max?: NestedEnumEstadoObraFilter<$PrismaModel>
  }

  export type NestedEnumDiasSemanaFilter<$PrismaModel = never> = {
    equals?: $Enums.DiasSemana | EnumDiasSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    notIn?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    not?: NestedEnumDiasSemanaFilter<$PrismaModel> | $Enums.DiasSemana
  }

  export type NestedEnumDiasSemanaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DiasSemana | EnumDiasSemanaFieldRefInput<$PrismaModel>
    in?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    notIn?: $Enums.DiasSemana[] | ListEnumDiasSemanaFieldRefInput<$PrismaModel>
    not?: NestedEnumDiasSemanaWithAggregatesFilter<$PrismaModel> | $Enums.DiasSemana
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiasSemanaFilter<$PrismaModel>
    _max?: NestedEnumDiasSemanaFilter<$PrismaModel>
  }

  export type NestedEnumEstadoTareaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaFilter<$PrismaModel> | $Enums.EstadoTarea
  }

  export type NestedEnumEstadoTareaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTarea
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTareaFilter<$PrismaModel>
    _max?: NestedEnumEstadoTareaFilter<$PrismaModel>
  }

  export type NestedEnumEstadoPedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedido | EnumEstadoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoFilter<$PrismaModel> | $Enums.EstadoPedido
  }

  export type NestedEnumEstadoPedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPedido | EnumEstadoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPedido[] | ListEnumEstadoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPedidoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPedidoFilter<$PrismaModel>
    _max?: NestedEnumEstadoPedidoFilter<$PrismaModel>
  }

  export type UbicacionCreateWithoutPuntoInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioCreateNestedManyWithoutUbicacionInput
    tarea?: TareaCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUncheckedCreateWithoutPuntoInput = {
    id?: number
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutUbicacionInput
    tarea?: TareaUncheckedCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionCreateOrConnectWithoutPuntoInput = {
    where: UbicacionWhereUniqueInput
    create: XOR<UbicacionCreateWithoutPuntoInput, UbicacionUncheckedCreateWithoutPuntoInput>
  }

  export type UbicacionCreateManyPuntoInputEnvelope = {
    data: UbicacionCreateManyPuntoInput | UbicacionCreateManyPuntoInput[]
    skipDuplicates?: boolean
  }

  export type ProformaCreateWithoutPuntoInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    cliente: PersonaCreateNestedOneWithoutProformaInput
    obra?: ObraCreateNestedOneWithoutProformaInput
    procesos?: ProcesoCreateNestedManyWithoutProformaInput
  }

  export type ProformaUncheckedCreateWithoutPuntoInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_cliente: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra?: ObraUncheckedCreateNestedOneWithoutProformaInput
    procesos?: ProcesoUncheckedCreateNestedManyWithoutProformaInput
  }

  export type ProformaCreateOrConnectWithoutPuntoInput = {
    where: ProformaWhereUniqueInput
    create: XOR<ProformaCreateWithoutPuntoInput, ProformaUncheckedCreateWithoutPuntoInput>
  }

  export type ProformaCreateManyPuntoInputEnvelope = {
    data: ProformaCreateManyPuntoInput | ProformaCreateManyPuntoInput[]
    skipDuplicates?: boolean
  }

  export type ObraCreateWithoutPuntoInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    cliente: PersonaCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutPuntoInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutPuntoInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutPuntoInput, ObraUncheckedCreateWithoutPuntoInput>
  }

  export type ObraCreateManyPuntoInputEnvelope = {
    data: ObraCreateManyPuntoInput | ObraCreateManyPuntoInput[]
    skipDuplicates?: boolean
  }

  export type ubicacion_empleadoCreateWithoutPuntoInput = {
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    empleado: EmpleadoCreateNestedOneWithoutUbicacionInput
  }

  export type ubicacion_empleadoUncheckedCreateWithoutPuntoInput = {
    id?: number
    id_empleado: number
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoCreateOrConnectWithoutPuntoInput = {
    where: ubicacion_empleadoWhereUniqueInput
    create: XOR<ubicacion_empleadoCreateWithoutPuntoInput, ubicacion_empleadoUncheckedCreateWithoutPuntoInput>
  }

  export type ubicacion_empleadoCreateManyPuntoInputEnvelope = {
    data: ubicacion_empleadoCreateManyPuntoInput | ubicacion_empleadoCreateManyPuntoInput[]
    skipDuplicates?: boolean
  }

  export type UbicacionUpsertWithWhereUniqueWithoutPuntoInput = {
    where: UbicacionWhereUniqueInput
    update: XOR<UbicacionUpdateWithoutPuntoInput, UbicacionUncheckedUpdateWithoutPuntoInput>
    create: XOR<UbicacionCreateWithoutPuntoInput, UbicacionUncheckedCreateWithoutPuntoInput>
  }

  export type UbicacionUpdateWithWhereUniqueWithoutPuntoInput = {
    where: UbicacionWhereUniqueInput
    data: XOR<UbicacionUpdateWithoutPuntoInput, UbicacionUncheckedUpdateWithoutPuntoInput>
  }

  export type UbicacionUpdateManyWithWhereWithoutPuntoInput = {
    where: UbicacionScalarWhereInput
    data: XOR<UbicacionUpdateManyMutationInput, UbicacionUncheckedUpdateManyWithoutPuntoInput>
  }

  export type UbicacionScalarWhereInput = {
    AND?: UbicacionScalarWhereInput | UbicacionScalarWhereInput[]
    OR?: UbicacionScalarWhereInput[]
    NOT?: UbicacionScalarWhereInput | UbicacionScalarWhereInput[]
    id?: IntFilter<"Ubicacion"> | number
    nombre?: StringFilter<"Ubicacion"> | string
    descripcion?: StringFilter<"Ubicacion"> | string
    id_punto?: IntFilter<"Ubicacion"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Ubicacion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Ubicacion"> | number
    updatedBy?: IntNullableFilter<"Ubicacion"> | number | null
    deletedBy?: IntNullableFilter<"Ubicacion"> | number | null
    createdDate?: DateTimeFilter<"Ubicacion"> | Date | string
    updatedDate?: DateTimeFilter<"Ubicacion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Ubicacion"> | Date | string | null
  }

  export type ProformaUpsertWithWhereUniqueWithoutPuntoInput = {
    where: ProformaWhereUniqueInput
    update: XOR<ProformaUpdateWithoutPuntoInput, ProformaUncheckedUpdateWithoutPuntoInput>
    create: XOR<ProformaCreateWithoutPuntoInput, ProformaUncheckedCreateWithoutPuntoInput>
  }

  export type ProformaUpdateWithWhereUniqueWithoutPuntoInput = {
    where: ProformaWhereUniqueInput
    data: XOR<ProformaUpdateWithoutPuntoInput, ProformaUncheckedUpdateWithoutPuntoInput>
  }

  export type ProformaUpdateManyWithWhereWithoutPuntoInput = {
    where: ProformaScalarWhereInput
    data: XOR<ProformaUpdateManyMutationInput, ProformaUncheckedUpdateManyWithoutPuntoInput>
  }

  export type ProformaScalarWhereInput = {
    AND?: ProformaScalarWhereInput | ProformaScalarWhereInput[]
    OR?: ProformaScalarWhereInput[]
    NOT?: ProformaScalarWhereInput | ProformaScalarWhereInput[]
    id?: IntFilter<"Proforma"> | number
    nombre?: StringFilter<"Proforma"> | string
    tiempo_esperado?: DateTimeFilter<"Proforma"> | Date | string
    porcentaje_venta?: DecimalFilter<"Proforma"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntFilter<"Proforma"> | number
    id_cliente?: IntFilter<"Proforma"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Proforma"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Proforma"> | number
    updatedBy?: IntNullableFilter<"Proforma"> | number | null
    deletedBy?: IntNullableFilter<"Proforma"> | number | null
    createdDate?: DateTimeFilter<"Proforma"> | Date | string
    updatedDate?: DateTimeFilter<"Proforma"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Proforma"> | Date | string | null
  }

  export type ObraUpsertWithWhereUniqueWithoutPuntoInput = {
    where: ObraWhereUniqueInput
    update: XOR<ObraUpdateWithoutPuntoInput, ObraUncheckedUpdateWithoutPuntoInput>
    create: XOR<ObraCreateWithoutPuntoInput, ObraUncheckedCreateWithoutPuntoInput>
  }

  export type ObraUpdateWithWhereUniqueWithoutPuntoInput = {
    where: ObraWhereUniqueInput
    data: XOR<ObraUpdateWithoutPuntoInput, ObraUncheckedUpdateWithoutPuntoInput>
  }

  export type ObraUpdateManyWithWhereWithoutPuntoInput = {
    where: ObraScalarWhereInput
    data: XOR<ObraUpdateManyMutationInput, ObraUncheckedUpdateManyWithoutPuntoInput>
  }

  export type ObraScalarWhereInput = {
    AND?: ObraScalarWhereInput | ObraScalarWhereInput[]
    OR?: ObraScalarWhereInput[]
    NOT?: ObraScalarWhereInput | ObraScalarWhereInput[]
    id?: IntFilter<"Obra"> | number
    nombre?: StringFilter<"Obra"> | string
    tiempo_esperado?: DateTimeFilter<"Obra"> | Date | string
    porcentaje_venta?: DecimalFilter<"Obra"> | Decimal | DecimalJsLike | number | string
    id_punto?: IntFilter<"Obra"> | number
    id_cliente?: IntFilter<"Obra"> | number
    id_proforma?: IntFilter<"Obra"> | number
    estado?: EnumEstadoObraFilter<"Obra"> | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFilter<"Obra"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Obra"> | number
    updatedBy?: IntNullableFilter<"Obra"> | number | null
    deletedBy?: IntNullableFilter<"Obra"> | number | null
    createdDate?: DateTimeFilter<"Obra"> | Date | string
    updatedDate?: DateTimeFilter<"Obra"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Obra"> | Date | string | null
  }

  export type ubicacion_empleadoUpsertWithWhereUniqueWithoutPuntoInput = {
    where: ubicacion_empleadoWhereUniqueInput
    update: XOR<ubicacion_empleadoUpdateWithoutPuntoInput, ubicacion_empleadoUncheckedUpdateWithoutPuntoInput>
    create: XOR<ubicacion_empleadoCreateWithoutPuntoInput, ubicacion_empleadoUncheckedCreateWithoutPuntoInput>
  }

  export type ubicacion_empleadoUpdateWithWhereUniqueWithoutPuntoInput = {
    where: ubicacion_empleadoWhereUniqueInput
    data: XOR<ubicacion_empleadoUpdateWithoutPuntoInput, ubicacion_empleadoUncheckedUpdateWithoutPuntoInput>
  }

  export type ubicacion_empleadoUpdateManyWithWhereWithoutPuntoInput = {
    where: ubicacion_empleadoScalarWhereInput
    data: XOR<ubicacion_empleadoUpdateManyMutationInput, ubicacion_empleadoUncheckedUpdateManyWithoutPuntoInput>
  }

  export type ubicacion_empleadoScalarWhereInput = {
    AND?: ubicacion_empleadoScalarWhereInput | ubicacion_empleadoScalarWhereInput[]
    OR?: ubicacion_empleadoScalarWhereInput[]
    NOT?: ubicacion_empleadoScalarWhereInput | ubicacion_empleadoScalarWhereInput[]
    id?: IntFilter<"ubicacion_empleado"> | number
    id_punto?: IntFilter<"ubicacion_empleado"> | number
    id_empleado?: IntFilter<"ubicacion_empleado"> | number
    estado?: EnumEstadoTrabajadorFilter<"ubicacion_empleado"> | $Enums.EstadoTrabajador
    fecha?: DateTimeFilter<"ubicacion_empleado"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"ubicacion_empleado"> | $Enums.EstadoEliminado
  }

  export type PuntoCreateWithoutUbicacionInput = {
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proforma?: ProformaCreateNestedManyWithoutPuntoInput
    obra?: ObraCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoCreateNestedManyWithoutPuntoInput
  }

  export type PuntoUncheckedCreateWithoutUbicacionInput = {
    id?: number
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proforma?: ProformaUncheckedCreateNestedManyWithoutPuntoInput
    obra?: ObraUncheckedCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoUncheckedCreateNestedManyWithoutPuntoInput
  }

  export type PuntoCreateOrConnectWithoutUbicacionInput = {
    where: PuntoWhereUniqueInput
    create: XOR<PuntoCreateWithoutUbicacionInput, PuntoUncheckedCreateWithoutUbicacionInput>
  }

  export type InventarioCreateWithoutUbicacionInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateWithoutUbicacionInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioCreateOrConnectWithoutUbicacionInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutUbicacionInput, InventarioUncheckedCreateWithoutUbicacionInput>
  }

  export type InventarioCreateManyUbicacionInputEnvelope = {
    data: InventarioCreateManyUbicacionInput | InventarioCreateManyUbicacionInput[]
    skipDuplicates?: boolean
  }

  export type TareaCreateWithoutUbicacionInput = {
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    asignador: EmpleadoCreateNestedOneWithoutTareasAsignadasInput
    asignado?: EmpleadoCreateNestedOneWithoutTareasRecibidasInput
    obra?: ObraCreateNestedOneWithoutTareaInput
  }

  export type TareaUncheckedCreateWithoutUbicacionInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_asignado?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateOrConnectWithoutUbicacionInput = {
    where: TareaWhereUniqueInput
    create: XOR<TareaCreateWithoutUbicacionInput, TareaUncheckedCreateWithoutUbicacionInput>
  }

  export type TareaCreateManyUbicacionInputEnvelope = {
    data: TareaCreateManyUbicacionInput | TareaCreateManyUbicacionInput[]
    skipDuplicates?: boolean
  }

  export type PuntoUpsertWithoutUbicacionInput = {
    update: XOR<PuntoUpdateWithoutUbicacionInput, PuntoUncheckedUpdateWithoutUbicacionInput>
    create: XOR<PuntoCreateWithoutUbicacionInput, PuntoUncheckedCreateWithoutUbicacionInput>
    where?: PuntoWhereInput
  }

  export type PuntoUpdateToOneWithWhereWithoutUbicacionInput = {
    where?: PuntoWhereInput
    data: XOR<PuntoUpdateWithoutUbicacionInput, PuntoUncheckedUpdateWithoutUbicacionInput>
  }

  export type PuntoUpdateWithoutUbicacionInput = {
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proforma?: ProformaUpdateManyWithoutPuntoNestedInput
    obra?: ObraUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUpdateManyWithoutPuntoNestedInput
  }

  export type PuntoUncheckedUpdateWithoutUbicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proforma?: ProformaUncheckedUpdateManyWithoutPuntoNestedInput
    obra?: ObraUncheckedUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUncheckedUpdateManyWithoutPuntoNestedInput
  }

  export type InventarioUpsertWithWhereUniqueWithoutUbicacionInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutUbicacionInput, InventarioUncheckedUpdateWithoutUbicacionInput>
    create: XOR<InventarioCreateWithoutUbicacionInput, InventarioUncheckedCreateWithoutUbicacionInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutUbicacionInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutUbicacionInput, InventarioUncheckedUpdateWithoutUbicacionInput>
  }

  export type InventarioUpdateManyWithWhereWithoutUbicacionInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutUbicacionInput>
  }

  export type InventarioScalarWhereInput = {
    AND?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
    OR?: InventarioScalarWhereInput[]
    NOT?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
    id?: IntFilter<"Inventario"> | number
    precio?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFilter<"Inventario"> | Decimal | DecimalJsLike | number | string
    cantidad?: FloatNullableFilter<"Inventario"> | number | null
    id_categoria?: IntFilter<"Inventario"> | number
    id_ubicacion?: IntFilter<"Inventario"> | number
    id_proveedor?: IntFilter<"Inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Inventario"> | $Enums.EstadoEliminado
    estado?: EnumEstadoHerramientasNullableFilter<"Inventario"> | $Enums.EstadoHerramientas | null
    createdBy?: IntFilter<"Inventario"> | number
    updatedBy?: IntNullableFilter<"Inventario"> | number | null
    deletedBy?: IntNullableFilter<"Inventario"> | number | null
    createdDate?: DateTimeFilter<"Inventario"> | Date | string
    updatedDate?: DateTimeFilter<"Inventario"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Inventario"> | Date | string | null
  }

  export type TareaUpsertWithWhereUniqueWithoutUbicacionInput = {
    where: TareaWhereUniqueInput
    update: XOR<TareaUpdateWithoutUbicacionInput, TareaUncheckedUpdateWithoutUbicacionInput>
    create: XOR<TareaCreateWithoutUbicacionInput, TareaUncheckedCreateWithoutUbicacionInput>
  }

  export type TareaUpdateWithWhereUniqueWithoutUbicacionInput = {
    where: TareaWhereUniqueInput
    data: XOR<TareaUpdateWithoutUbicacionInput, TareaUncheckedUpdateWithoutUbicacionInput>
  }

  export type TareaUpdateManyWithWhereWithoutUbicacionInput = {
    where: TareaScalarWhereInput
    data: XOR<TareaUpdateManyMutationInput, TareaUncheckedUpdateManyWithoutUbicacionInput>
  }

  export type TareaScalarWhereInput = {
    AND?: TareaScalarWhereInput | TareaScalarWhereInput[]
    OR?: TareaScalarWhereInput[]
    NOT?: TareaScalarWhereInput | TareaScalarWhereInput[]
    id?: IntFilter<"Tarea"> | number
    nombre?: StringFilter<"Tarea"> | string
    descripcion?: StringFilter<"Tarea"> | string
    estado?: EnumEstadoTareaFilter<"Tarea"> | $Enums.EstadoTarea
    id_asignador?: IntFilter<"Tarea"> | number
    id_asignado?: IntNullableFilter<"Tarea"> | number | null
    id_ubicacion?: IntNullableFilter<"Tarea"> | number | null
    id_obra?: IntNullableFilter<"Tarea"> | number | null
    fecha_final?: DateTimeFilter<"Tarea"> | Date | string
    fecha_inicio?: DateTimeFilter<"Tarea"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Tarea"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Tarea"> | number
    updatedBy?: IntNullableFilter<"Tarea"> | number | null
    deletedBy?: IntNullableFilter<"Tarea"> | number | null
    createdDate?: DateTimeFilter<"Tarea"> | Date | string
    updatedDate?: DateTimeFilter<"Tarea"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Tarea"> | Date | string | null
  }

  export type InventarioCreateWithoutCategoriaInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateWithoutCategoriaInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioCreateOrConnectWithoutCategoriaInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput>
  }

  export type InventarioCreateManyCategoriaInputEnvelope = {
    data: InventarioCreateManyCategoriaInput | InventarioCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type InventarioUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutCategoriaInput, InventarioUncheckedUpdateWithoutCategoriaInput>
    create: XOR<InventarioCreateWithoutCategoriaInput, InventarioUncheckedCreateWithoutCategoriaInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutCategoriaInput, InventarioUncheckedUpdateWithoutCategoriaInput>
  }

  export type InventarioUpdateManyWithWhereWithoutCategoriaInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type InventarioCreateWithoutProveedorInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateWithoutProveedorInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioCreateOrConnectWithoutProveedorInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutProveedorInput, InventarioUncheckedCreateWithoutProveedorInput>
  }

  export type InventarioCreateManyProveedorInputEnvelope = {
    data: InventarioCreateManyProveedorInput | InventarioCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type ProformaCreateWithoutClienteInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutProformaInput
    obra?: ObraCreateNestedOneWithoutProformaInput
    procesos?: ProcesoCreateNestedManyWithoutProformaInput
  }

  export type ProformaUncheckedCreateWithoutClienteInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra?: ObraUncheckedCreateNestedOneWithoutProformaInput
    procesos?: ProcesoUncheckedCreateNestedManyWithoutProformaInput
  }

  export type ProformaCreateOrConnectWithoutClienteInput = {
    where: ProformaWhereUniqueInput
    create: XOR<ProformaCreateWithoutClienteInput, ProformaUncheckedCreateWithoutClienteInput>
  }

  export type ProformaCreateManyClienteInputEnvelope = {
    data: ProformaCreateManyClienteInput | ProformaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ObraCreateWithoutClienteInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutClienteInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutClienteInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutClienteInput, ObraUncheckedCreateWithoutClienteInput>
  }

  export type ObraCreateManyClienteInputEnvelope = {
    data: ObraCreateManyClienteInput | ObraCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionCreateWithoutPersonaInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutPersonaInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutPersonaInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutPersonaInput, TransaccionUncheckedCreateWithoutPersonaInput>
  }

  export type TransaccionCreateManyPersonaInputEnvelope = {
    data: TransaccionCreateManyPersonaInput | TransaccionCreateManyPersonaInput[]
    skipDuplicates?: boolean
  }

  export type InventarioUpsertWithWhereUniqueWithoutProveedorInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutProveedorInput, InventarioUncheckedUpdateWithoutProveedorInput>
    create: XOR<InventarioCreateWithoutProveedorInput, InventarioUncheckedCreateWithoutProveedorInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutProveedorInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutProveedorInput, InventarioUncheckedUpdateWithoutProveedorInput>
  }

  export type InventarioUpdateManyWithWhereWithoutProveedorInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutProveedorInput>
  }

  export type ProformaUpsertWithWhereUniqueWithoutClienteInput = {
    where: ProformaWhereUniqueInput
    update: XOR<ProformaUpdateWithoutClienteInput, ProformaUncheckedUpdateWithoutClienteInput>
    create: XOR<ProformaCreateWithoutClienteInput, ProformaUncheckedCreateWithoutClienteInput>
  }

  export type ProformaUpdateWithWhereUniqueWithoutClienteInput = {
    where: ProformaWhereUniqueInput
    data: XOR<ProformaUpdateWithoutClienteInput, ProformaUncheckedUpdateWithoutClienteInput>
  }

  export type ProformaUpdateManyWithWhereWithoutClienteInput = {
    where: ProformaScalarWhereInput
    data: XOR<ProformaUpdateManyMutationInput, ProformaUncheckedUpdateManyWithoutClienteInput>
  }

  export type ObraUpsertWithWhereUniqueWithoutClienteInput = {
    where: ObraWhereUniqueInput
    update: XOR<ObraUpdateWithoutClienteInput, ObraUncheckedUpdateWithoutClienteInput>
    create: XOR<ObraCreateWithoutClienteInput, ObraUncheckedCreateWithoutClienteInput>
  }

  export type ObraUpdateWithWhereUniqueWithoutClienteInput = {
    where: ObraWhereUniqueInput
    data: XOR<ObraUpdateWithoutClienteInput, ObraUncheckedUpdateWithoutClienteInput>
  }

  export type ObraUpdateManyWithWhereWithoutClienteInput = {
    where: ObraScalarWhereInput
    data: XOR<ObraUpdateManyMutationInput, ObraUncheckedUpdateManyWithoutClienteInput>
  }

  export type TransaccionUpsertWithWhereUniqueWithoutPersonaInput = {
    where: TransaccionWhereUniqueInput
    update: XOR<TransaccionUpdateWithoutPersonaInput, TransaccionUncheckedUpdateWithoutPersonaInput>
    create: XOR<TransaccionCreateWithoutPersonaInput, TransaccionUncheckedCreateWithoutPersonaInput>
  }

  export type TransaccionUpdateWithWhereUniqueWithoutPersonaInput = {
    where: TransaccionWhereUniqueInput
    data: XOR<TransaccionUpdateWithoutPersonaInput, TransaccionUncheckedUpdateWithoutPersonaInput>
  }

  export type TransaccionUpdateManyWithWhereWithoutPersonaInput = {
    where: TransaccionScalarWhereInput
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyWithoutPersonaInput>
  }

  export type TransaccionScalarWhereInput = {
    AND?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
    OR?: TransaccionScalarWhereInput[]
    NOT?: TransaccionScalarWhereInput | TransaccionScalarWhereInput[]
    id?: IntFilter<"Transaccion"> | number
    fecha?: DateTimeFilter<"Transaccion"> | Date | string
    id_empleado?: IntFilter<"Transaccion"> | number
    id_persona?: IntFilter<"Transaccion"> | number
    id_obra?: IntNullableFilter<"Transaccion"> | number | null
    id_compra?: IntNullableFilter<"Transaccion"> | number | null
    id_venta?: IntNullableFilter<"Transaccion"> | number | null
    id_devolucion?: IntNullableFilter<"Transaccion"> | number | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Transaccion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Transaccion"> | number
    updatedBy?: IntNullableFilter<"Transaccion"> | number | null
    deletedBy?: IntNullableFilter<"Transaccion"> | number | null
    createdDate?: DateTimeFilter<"Transaccion"> | Date | string
    updatedDate?: DateTimeFilter<"Transaccion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Transaccion"> | Date | string | null
  }

  export type CategoriaCreateWithoutInventarioInput = {
    nombre: string
    codigo: string
    descripcion: string
    tipo: $Enums.CategoriasInventario
    tipo_unidad: string
    venta: boolean
    tiempo?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type CategoriaUncheckedCreateWithoutInventarioInput = {
    id?: number
    nombre: string
    codigo: string
    descripcion: string
    tipo: $Enums.CategoriasInventario
    tipo_unidad: string
    venta: boolean
    tiempo?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type CategoriaCreateOrConnectWithoutInventarioInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutInventarioInput, CategoriaUncheckedCreateWithoutInventarioInput>
  }

  export type UbicacionCreateWithoutInventarioInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutUbicacionInput
    tarea?: TareaCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUncheckedCreateWithoutInventarioInput = {
    id?: number
    nombre: string
    descripcion: string
    id_punto: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    tarea?: TareaUncheckedCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionCreateOrConnectWithoutInventarioInput = {
    where: UbicacionWhereUniqueInput
    create: XOR<UbicacionCreateWithoutInventarioInput, UbicacionUncheckedCreateWithoutInventarioInput>
  }

  export type PersonaCreateWithoutInventarioInput = {
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proforma?: ProformaCreateNestedManyWithoutClienteInput
    obra?: ObraCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionCreateNestedManyWithoutPersonaInput
  }

  export type PersonaUncheckedCreateWithoutInventarioInput = {
    id?: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proforma?: ProformaUncheckedCreateNestedManyWithoutClienteInput
    obra?: ObraUncheckedCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutPersonaInput
  }

  export type PersonaCreateOrConnectWithoutInventarioInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutInventarioInput, PersonaUncheckedCreateWithoutInventarioInput>
  }

  export type transaccion_elementosCreateWithoutElementoInput = {
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
    transaccion: TransaccionCreateNestedOneWithoutElementosInput
  }

  export type transaccion_elementosUncheckedCreateWithoutElementoInput = {
    id?: number
    id_transaccion: number
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type transaccion_elementosCreateOrConnectWithoutElementoInput = {
    where: transaccion_elementosWhereUniqueInput
    create: XOR<transaccion_elementosCreateWithoutElementoInput, transaccion_elementosUncheckedCreateWithoutElementoInput>
  }

  export type transaccion_elementosCreateManyElementoInputEnvelope = {
    data: transaccion_elementosCreateManyElementoInput | transaccion_elementosCreateManyElementoInput[]
    skipDuplicates?: boolean
  }

  export type pedido_elementosCreateWithoutElementoInput = {
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
    pedido: PedidoCreateNestedOneWithoutElementoInput
    empleado: EmpleadoCreateNestedOneWithoutPedidoInput
  }

  export type pedido_elementosUncheckedCreateWithoutElementoInput = {
    id_pedido: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosCreateOrConnectWithoutElementoInput = {
    where: pedido_elementosWhereUniqueInput
    create: XOR<pedido_elementosCreateWithoutElementoInput, pedido_elementosUncheckedCreateWithoutElementoInput>
  }

  export type pedido_elementosCreateManyElementoInputEnvelope = {
    data: pedido_elementosCreateManyElementoInput | pedido_elementosCreateManyElementoInput[]
    skipDuplicates?: boolean
  }

  export type proceso_herramientasCreateWithoutHerramientaInput = {
    horas: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutHerramientasInput
    horarios?: HorarioCreateNestedManyWithoutProceso_herramientasInput
  }

  export type proceso_herramientasUncheckedCreateWithoutHerramientaInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutProceso_herramientasInput
  }

  export type proceso_herramientasCreateOrConnectWithoutHerramientaInput = {
    where: proceso_herramientasWhereUniqueInput
    create: XOR<proceso_herramientasCreateWithoutHerramientaInput, proceso_herramientasUncheckedCreateWithoutHerramientaInput>
  }

  export type proceso_herramientasCreateManyHerramientaInputEnvelope = {
    data: proceso_herramientasCreateManyHerramientaInput | proceso_herramientasCreateManyHerramientaInput[]
    skipDuplicates?: boolean
  }

  export type proceso_inventarioCreateWithoutElementoInput = {
    cantidad: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutInventarioInput
  }

  export type proceso_inventarioUncheckedCreateWithoutElementoInput = {
    id?: number
    cantidad: number
    descuento: number
    precio: number
    id_proceso: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_inventarioCreateOrConnectWithoutElementoInput = {
    where: proceso_inventarioWhereUniqueInput
    create: XOR<proceso_inventarioCreateWithoutElementoInput, proceso_inventarioUncheckedCreateWithoutElementoInput>
  }

  export type proceso_inventarioCreateManyElementoInputEnvelope = {
    data: proceso_inventarioCreateManyElementoInput | proceso_inventarioCreateManyElementoInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaUpsertWithoutInventarioInput = {
    update: XOR<CategoriaUpdateWithoutInventarioInput, CategoriaUncheckedUpdateWithoutInventarioInput>
    create: XOR<CategoriaCreateWithoutInventarioInput, CategoriaUncheckedCreateWithoutInventarioInput>
    where?: CategoriaWhereInput
  }

  export type CategoriaUpdateToOneWithWhereWithoutInventarioInput = {
    where?: CategoriaWhereInput
    data: XOR<CategoriaUpdateWithoutInventarioInput, CategoriaUncheckedUpdateWithoutInventarioInput>
  }

  export type CategoriaUpdateWithoutInventarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    tipo?: EnumCategoriasInventarioFieldUpdateOperationsInput | $Enums.CategoriasInventario
    tipo_unidad?: StringFieldUpdateOperationsInput | string
    venta?: BoolFieldUpdateOperationsInput | boolean
    tiempo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoriaUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    tipo?: EnumCategoriasInventarioFieldUpdateOperationsInput | $Enums.CategoriasInventario
    tipo_unidad?: StringFieldUpdateOperationsInput | string
    venta?: BoolFieldUpdateOperationsInput | boolean
    tiempo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UbicacionUpsertWithoutInventarioInput = {
    update: XOR<UbicacionUpdateWithoutInventarioInput, UbicacionUncheckedUpdateWithoutInventarioInput>
    create: XOR<UbicacionCreateWithoutInventarioInput, UbicacionUncheckedCreateWithoutInventarioInput>
    where?: UbicacionWhereInput
  }

  export type UbicacionUpdateToOneWithWhereWithoutInventarioInput = {
    where?: UbicacionWhereInput
    data: XOR<UbicacionUpdateWithoutInventarioInput, UbicacionUncheckedUpdateWithoutInventarioInput>
  }

  export type UbicacionUpdateWithoutInventarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutUbicacionNestedInput
    tarea?: TareaUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_punto?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tarea?: TareaUncheckedUpdateManyWithoutUbicacionNestedInput
  }

  export type PersonaUpsertWithoutInventarioInput = {
    update: XOR<PersonaUpdateWithoutInventarioInput, PersonaUncheckedUpdateWithoutInventarioInput>
    create: XOR<PersonaCreateWithoutInventarioInput, PersonaUncheckedCreateWithoutInventarioInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutInventarioInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutInventarioInput, PersonaUncheckedUpdateWithoutInventarioInput>
  }

  export type PersonaUpdateWithoutInventarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proforma?: ProformaUpdateManyWithoutClienteNestedInput
    obra?: ObraUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUpdateManyWithoutPersonaNestedInput
  }

  export type PersonaUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proforma?: ProformaUncheckedUpdateManyWithoutClienteNestedInput
    obra?: ObraUncheckedUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutPersonaNestedInput
  }

  export type transaccion_elementosUpsertWithWhereUniqueWithoutElementoInput = {
    where: transaccion_elementosWhereUniqueInput
    update: XOR<transaccion_elementosUpdateWithoutElementoInput, transaccion_elementosUncheckedUpdateWithoutElementoInput>
    create: XOR<transaccion_elementosCreateWithoutElementoInput, transaccion_elementosUncheckedCreateWithoutElementoInput>
  }

  export type transaccion_elementosUpdateWithWhereUniqueWithoutElementoInput = {
    where: transaccion_elementosWhereUniqueInput
    data: XOR<transaccion_elementosUpdateWithoutElementoInput, transaccion_elementosUncheckedUpdateWithoutElementoInput>
  }

  export type transaccion_elementosUpdateManyWithWhereWithoutElementoInput = {
    where: transaccion_elementosScalarWhereInput
    data: XOR<transaccion_elementosUpdateManyMutationInput, transaccion_elementosUncheckedUpdateManyWithoutElementoInput>
  }

  export type transaccion_elementosScalarWhereInput = {
    AND?: transaccion_elementosScalarWhereInput | transaccion_elementosScalarWhereInput[]
    OR?: transaccion_elementosScalarWhereInput[]
    NOT?: transaccion_elementosScalarWhereInput | transaccion_elementosScalarWhereInput[]
    id?: IntFilter<"transaccion_elementos"> | number
    id_transaccion?: IntFilter<"transaccion_elementos"> | number
    id_elementos?: IntFilter<"transaccion_elementos"> | number
    cantidad?: FloatFilter<"transaccion_elementos"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"transaccion_elementos"> | $Enums.EstadoEliminado
  }

  export type pedido_elementosUpsertWithWhereUniqueWithoutElementoInput = {
    where: pedido_elementosWhereUniqueInput
    update: XOR<pedido_elementosUpdateWithoutElementoInput, pedido_elementosUncheckedUpdateWithoutElementoInput>
    create: XOR<pedido_elementosCreateWithoutElementoInput, pedido_elementosUncheckedCreateWithoutElementoInput>
  }

  export type pedido_elementosUpdateWithWhereUniqueWithoutElementoInput = {
    where: pedido_elementosWhereUniqueInput
    data: XOR<pedido_elementosUpdateWithoutElementoInput, pedido_elementosUncheckedUpdateWithoutElementoInput>
  }

  export type pedido_elementosUpdateManyWithWhereWithoutElementoInput = {
    where: pedido_elementosScalarWhereInput
    data: XOR<pedido_elementosUpdateManyMutationInput, pedido_elementosUncheckedUpdateManyWithoutElementoInput>
  }

  export type pedido_elementosScalarWhereInput = {
    AND?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
    OR?: pedido_elementosScalarWhereInput[]
    NOT?: pedido_elementosScalarWhereInput | pedido_elementosScalarWhereInput[]
    id_pedido?: IntFilter<"pedido_elementos"> | number
    id_elemento?: IntFilter<"pedido_elementos"> | number
    id_empleado?: IntFilter<"pedido_elementos"> | number
    estado?: EnumEstadoPedidoFilter<"pedido_elementos"> | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFilter<"pedido_elementos"> | $Enums.EstadoEliminado
  }

  export type proceso_herramientasUpsertWithWhereUniqueWithoutHerramientaInput = {
    where: proceso_herramientasWhereUniqueInput
    update: XOR<proceso_herramientasUpdateWithoutHerramientaInput, proceso_herramientasUncheckedUpdateWithoutHerramientaInput>
    create: XOR<proceso_herramientasCreateWithoutHerramientaInput, proceso_herramientasUncheckedCreateWithoutHerramientaInput>
  }

  export type proceso_herramientasUpdateWithWhereUniqueWithoutHerramientaInput = {
    where: proceso_herramientasWhereUniqueInput
    data: XOR<proceso_herramientasUpdateWithoutHerramientaInput, proceso_herramientasUncheckedUpdateWithoutHerramientaInput>
  }

  export type proceso_herramientasUpdateManyWithWhereWithoutHerramientaInput = {
    where: proceso_herramientasScalarWhereInput
    data: XOR<proceso_herramientasUpdateManyMutationInput, proceso_herramientasUncheckedUpdateManyWithoutHerramientaInput>
  }

  export type proceso_herramientasScalarWhereInput = {
    AND?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
    OR?: proceso_herramientasScalarWhereInput[]
    NOT?: proceso_herramientasScalarWhereInput | proceso_herramientasScalarWhereInput[]
    id?: IntFilter<"proceso_herramientas"> | number
    horas?: IntFilter<"proceso_herramientas"> | number
    descuento?: FloatFilter<"proceso_herramientas"> | number
    precio?: FloatFilter<"proceso_herramientas"> | number
    id_proceso?: IntFilter<"proceso_herramientas"> | number
    id_herramienta?: IntFilter<"proceso_herramientas"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_herramientas"> | $Enums.EstadoEliminado
  }

  export type proceso_inventarioUpsertWithWhereUniqueWithoutElementoInput = {
    where: proceso_inventarioWhereUniqueInput
    update: XOR<proceso_inventarioUpdateWithoutElementoInput, proceso_inventarioUncheckedUpdateWithoutElementoInput>
    create: XOR<proceso_inventarioCreateWithoutElementoInput, proceso_inventarioUncheckedCreateWithoutElementoInput>
  }

  export type proceso_inventarioUpdateWithWhereUniqueWithoutElementoInput = {
    where: proceso_inventarioWhereUniqueInput
    data: XOR<proceso_inventarioUpdateWithoutElementoInput, proceso_inventarioUncheckedUpdateWithoutElementoInput>
  }

  export type proceso_inventarioUpdateManyWithWhereWithoutElementoInput = {
    where: proceso_inventarioScalarWhereInput
    data: XOR<proceso_inventarioUpdateManyMutationInput, proceso_inventarioUncheckedUpdateManyWithoutElementoInput>
  }

  export type proceso_inventarioScalarWhereInput = {
    AND?: proceso_inventarioScalarWhereInput | proceso_inventarioScalarWhereInput[]
    OR?: proceso_inventarioScalarWhereInput[]
    NOT?: proceso_inventarioScalarWhereInput | proceso_inventarioScalarWhereInput[]
    id?: IntFilter<"proceso_inventario"> | number
    cantidad?: FloatFilter<"proceso_inventario"> | number
    descuento?: FloatFilter<"proceso_inventario"> | number
    precio?: FloatFilter<"proceso_inventario"> | number
    id_proceso?: IntFilter<"proceso_inventario"> | number
    id_elemento?: IntFilter<"proceso_inventario"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_inventario"> | $Enums.EstadoEliminado
  }

  export type PosicionCreateWithoutPermisosInput = {
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado?: EmpleadoCreateNestedManyWithoutPosicionInput
  }

  export type PosicionUncheckedCreateWithoutPermisosInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado?: EmpleadoUncheckedCreateNestedManyWithoutPosicionInput
  }

  export type PosicionCreateOrConnectWithoutPermisosInput = {
    where: PosicionWhereUniqueInput
    create: XOR<PosicionCreateWithoutPermisosInput, PosicionUncheckedCreateWithoutPermisosInput>
  }

  export type PosicionUpsertWithWhereUniqueWithoutPermisosInput = {
    where: PosicionWhereUniqueInput
    update: XOR<PosicionUpdateWithoutPermisosInput, PosicionUncheckedUpdateWithoutPermisosInput>
    create: XOR<PosicionCreateWithoutPermisosInput, PosicionUncheckedCreateWithoutPermisosInput>
  }

  export type PosicionUpdateWithWhereUniqueWithoutPermisosInput = {
    where: PosicionWhereUniqueInput
    data: XOR<PosicionUpdateWithoutPermisosInput, PosicionUncheckedUpdateWithoutPermisosInput>
  }

  export type PosicionUpdateManyWithWhereWithoutPermisosInput = {
    where: PosicionScalarWhereInput
    data: XOR<PosicionUpdateManyMutationInput, PosicionUncheckedUpdateManyWithoutPermisosInput>
  }

  export type PosicionScalarWhereInput = {
    AND?: PosicionScalarWhereInput | PosicionScalarWhereInput[]
    OR?: PosicionScalarWhereInput[]
    NOT?: PosicionScalarWhereInput | PosicionScalarWhereInput[]
    id?: IntFilter<"Posicion"> | number
    nombre?: StringFilter<"Posicion"> | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Posicion"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Posicion"> | number
    updatedBy?: IntNullableFilter<"Posicion"> | number | null
    deletedBy?: IntNullableFilter<"Posicion"> | number | null
    createdDate?: DateTimeFilter<"Posicion"> | Date | string
    updatedDate?: DateTimeFilter<"Posicion"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Posicion"> | Date | string | null
  }

  export type PermisoCreateWithoutPosicionesInput = {
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    categoria: $Enums.CategoriasPermiso
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PermisoUncheckedCreateWithoutPosicionesInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    categoria: $Enums.CategoriasPermiso
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PermisoCreateOrConnectWithoutPosicionesInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutPosicionesInput, PermisoUncheckedCreateWithoutPosicionesInput>
  }

  export type EmpleadoCreateWithoutPosicionInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutPosicionInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutPosicionInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutPosicionInput, EmpleadoUncheckedCreateWithoutPosicionInput>
  }

  export type EmpleadoCreateManyPosicionInputEnvelope = {
    data: EmpleadoCreateManyPosicionInput | EmpleadoCreateManyPosicionInput[]
    skipDuplicates?: boolean
  }

  export type PermisoUpsertWithWhereUniqueWithoutPosicionesInput = {
    where: PermisoWhereUniqueInput
    update: XOR<PermisoUpdateWithoutPosicionesInput, PermisoUncheckedUpdateWithoutPosicionesInput>
    create: XOR<PermisoCreateWithoutPosicionesInput, PermisoUncheckedCreateWithoutPosicionesInput>
  }

  export type PermisoUpdateWithWhereUniqueWithoutPosicionesInput = {
    where: PermisoWhereUniqueInput
    data: XOR<PermisoUpdateWithoutPosicionesInput, PermisoUncheckedUpdateWithoutPosicionesInput>
  }

  export type PermisoUpdateManyWithWhereWithoutPosicionesInput = {
    where: PermisoScalarWhereInput
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyWithoutPosicionesInput>
  }

  export type PermisoScalarWhereInput = {
    AND?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
    OR?: PermisoScalarWhereInput[]
    NOT?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
    id?: IntFilter<"Permiso"> | number
    nombre?: StringFilter<"Permiso"> | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Permiso"> | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFilter<"Permiso"> | $Enums.CategoriasPermiso
    createdBy?: IntFilter<"Permiso"> | number
    updatedBy?: IntNullableFilter<"Permiso"> | number | null
    deletedBy?: IntNullableFilter<"Permiso"> | number | null
    createdDate?: DateTimeFilter<"Permiso"> | Date | string
    updatedDate?: DateTimeFilter<"Permiso"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Permiso"> | Date | string | null
  }

  export type EmpleadoUpsertWithWhereUniqueWithoutPosicionInput = {
    where: EmpleadoWhereUniqueInput
    update: XOR<EmpleadoUpdateWithoutPosicionInput, EmpleadoUncheckedUpdateWithoutPosicionInput>
    create: XOR<EmpleadoCreateWithoutPosicionInput, EmpleadoUncheckedCreateWithoutPosicionInput>
  }

  export type EmpleadoUpdateWithWhereUniqueWithoutPosicionInput = {
    where: EmpleadoWhereUniqueInput
    data: XOR<EmpleadoUpdateWithoutPosicionInput, EmpleadoUncheckedUpdateWithoutPosicionInput>
  }

  export type EmpleadoUpdateManyWithWhereWithoutPosicionInput = {
    where: EmpleadoScalarWhereInput
    data: XOR<EmpleadoUpdateManyMutationInput, EmpleadoUncheckedUpdateManyWithoutPosicionInput>
  }

  export type EmpleadoScalarWhereInput = {
    AND?: EmpleadoScalarWhereInput | EmpleadoScalarWhereInput[]
    OR?: EmpleadoScalarWhereInput[]
    NOT?: EmpleadoScalarWhereInput | EmpleadoScalarWhereInput[]
    id?: IntFilter<"Empleado"> | number
    nombre?: StringFilter<"Empleado"> | string
    cedula?: StringFilter<"Empleado"> | string
    mail?: StringFilter<"Empleado"> | string
    telefono?: StringFilter<"Empleado"> | string
    sueldo?: DecimalFilter<"Empleado"> | Decimal | DecimalJsLike | number | string
    password?: StringFilter<"Empleado"> | string
    latActual?: DecimalNullableFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    lngActual?: DecimalNullableFilter<"Empleado"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFilter<"Empleado"> | Date | string
    id_posicion?: IntFilter<"Empleado"> | number
    estado?: EnumEstadoTrabajadorFilter<"Empleado"> | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFilter<"Empleado"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Empleado"> | number
    updatedBy?: IntNullableFilter<"Empleado"> | number | null
    deletedBy?: IntNullableFilter<"Empleado"> | number | null
    createdDate?: DateTimeFilter<"Empleado"> | Date | string
    updatedDate?: DateTimeFilter<"Empleado"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Empleado"> | Date | string | null
  }

  export type PosicionCreateWithoutEmpleadoInput = {
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    permisos?: PermisoCreateNestedManyWithoutPosicionesInput
  }

  export type PosicionUncheckedCreateWithoutEmpleadoInput = {
    id?: number
    nombre: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    permisos?: PermisoUncheckedCreateNestedManyWithoutPosicionesInput
  }

  export type PosicionCreateOrConnectWithoutEmpleadoInput = {
    where: PosicionWhereUniqueInput
    create: XOR<PosicionCreateWithoutEmpleadoInput, PosicionUncheckedCreateWithoutEmpleadoInput>
  }

  export type TransaccionCreateWithoutEmpleadoInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutEmpleadoInput = {
    id?: number
    fecha?: Date | string
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutEmpleadoInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutEmpleadoInput, TransaccionUncheckedCreateWithoutEmpleadoInput>
  }

  export type TransaccionCreateManyEmpleadoInputEnvelope = {
    data: TransaccionCreateManyEmpleadoInput | TransaccionCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type pedido_elementosCreateWithoutEmpleadoInput = {
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
    pedido: PedidoCreateNestedOneWithoutElementoInput
    elemento: InventarioCreateNestedOneWithoutPedidoInput
  }

  export type pedido_elementosUncheckedCreateWithoutEmpleadoInput = {
    id_pedido: number
    id_elemento: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosCreateOrConnectWithoutEmpleadoInput = {
    where: pedido_elementosWhereUniqueInput
    create: XOR<pedido_elementosCreateWithoutEmpleadoInput, pedido_elementosUncheckedCreateWithoutEmpleadoInput>
  }

  export type pedido_elementosCreateManyEmpleadoInputEnvelope = {
    data: pedido_elementosCreateManyEmpleadoInput | pedido_elementosCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type proceso_empleadosCreateWithoutEmpleadoInput = {
    horas: number
    sueldo: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutEmpleadosInput
    horarios?: HorarioCreateNestedManyWithoutProceso_empleadosInput
  }

  export type proceso_empleadosUncheckedCreateWithoutEmpleadoInput = {
    id?: number
    horas: number
    sueldo: number
    id_proceso: number
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutProceso_empleadosInput
  }

  export type proceso_empleadosCreateOrConnectWithoutEmpleadoInput = {
    where: proceso_empleadosWhereUniqueInput
    create: XOR<proceso_empleadosCreateWithoutEmpleadoInput, proceso_empleadosUncheckedCreateWithoutEmpleadoInput>
  }

  export type proceso_empleadosCreateManyEmpleadoInputEnvelope = {
    data: proceso_empleadosCreateManyEmpleadoInput | proceso_empleadosCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type ubicacion_empleadoCreateWithoutEmpleadoInput = {
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    punto: PuntoCreateNestedOneWithoutEmpleadoInput
  }

  export type ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput = {
    id?: number
    id_punto: number
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoCreateOrConnectWithoutEmpleadoInput = {
    where: ubicacion_empleadoWhereUniqueInput
    create: XOR<ubicacion_empleadoCreateWithoutEmpleadoInput, ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput>
  }

  export type ubicacion_empleadoCreateManyEmpleadoInputEnvelope = {
    data: ubicacion_empleadoCreateManyEmpleadoInput | ubicacion_empleadoCreateManyEmpleadoInput[]
    skipDuplicates?: boolean
  }

  export type MensajeCreateWithoutRemitenteInput = {
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    destinatario?: EmpleadoCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajeUncheckedCreateWithoutRemitenteInput = {
    id?: number
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    id_destinario?: number
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type MensajeCreateOrConnectWithoutRemitenteInput = {
    where: MensajeWhereUniqueInput
    create: XOR<MensajeCreateWithoutRemitenteInput, MensajeUncheckedCreateWithoutRemitenteInput>
  }

  export type MensajeCreateManyRemitenteInputEnvelope = {
    data: MensajeCreateManyRemitenteInput | MensajeCreateManyRemitenteInput[]
    skipDuplicates?: boolean
  }

  export type MensajeCreateWithoutDestinatarioInput = {
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    remitente?: EmpleadoCreateNestedOneWithoutMensajesEnviadosInput
  }

  export type MensajeUncheckedCreateWithoutDestinatarioInput = {
    id?: number
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    id_remitente?: number
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type MensajeCreateOrConnectWithoutDestinatarioInput = {
    where: MensajeWhereUniqueInput
    create: XOR<MensajeCreateWithoutDestinatarioInput, MensajeUncheckedCreateWithoutDestinatarioInput>
  }

  export type MensajeCreateManyDestinatarioInputEnvelope = {
    data: MensajeCreateManyDestinatarioInput | MensajeCreateManyDestinatarioInput[]
    skipDuplicates?: boolean
  }

  export type TareaCreateWithoutAsignadorInput = {
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    asignado?: EmpleadoCreateNestedOneWithoutTareasRecibidasInput
    ubicacion?: UbicacionCreateNestedOneWithoutTareaInput
    obra?: ObraCreateNestedOneWithoutTareaInput
  }

  export type TareaUncheckedCreateWithoutAsignadorInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignado?: number | null
    id_ubicacion?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateOrConnectWithoutAsignadorInput = {
    where: TareaWhereUniqueInput
    create: XOR<TareaCreateWithoutAsignadorInput, TareaUncheckedCreateWithoutAsignadorInput>
  }

  export type TareaCreateManyAsignadorInputEnvelope = {
    data: TareaCreateManyAsignadorInput | TareaCreateManyAsignadorInput[]
    skipDuplicates?: boolean
  }

  export type TareaCreateWithoutAsignadoInput = {
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    asignador: EmpleadoCreateNestedOneWithoutTareasAsignadasInput
    ubicacion?: UbicacionCreateNestedOneWithoutTareaInput
    obra?: ObraCreateNestedOneWithoutTareaInput
  }

  export type TareaUncheckedCreateWithoutAsignadoInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_ubicacion?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateOrConnectWithoutAsignadoInput = {
    where: TareaWhereUniqueInput
    create: XOR<TareaCreateWithoutAsignadoInput, TareaUncheckedCreateWithoutAsignadoInput>
  }

  export type TareaCreateManyAsignadoInputEnvelope = {
    data: TareaCreateManyAsignadoInput | TareaCreateManyAsignadoInput[]
    skipDuplicates?: boolean
  }

  export type PosicionUpsertWithoutEmpleadoInput = {
    update: XOR<PosicionUpdateWithoutEmpleadoInput, PosicionUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<PosicionCreateWithoutEmpleadoInput, PosicionUncheckedCreateWithoutEmpleadoInput>
    where?: PosicionWhereInput
  }

  export type PosicionUpdateToOneWithWhereWithoutEmpleadoInput = {
    where?: PosicionWhereInput
    data: XOR<PosicionUpdateWithoutEmpleadoInput, PosicionUncheckedUpdateWithoutEmpleadoInput>
  }

  export type PosicionUpdateWithoutEmpleadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisos?: PermisoUpdateManyWithoutPosicionesNestedInput
  }

  export type PosicionUncheckedUpdateWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permisos?: PermisoUncheckedUpdateManyWithoutPosicionesNestedInput
  }

  export type TransaccionUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: TransaccionWhereUniqueInput
    update: XOR<TransaccionUpdateWithoutEmpleadoInput, TransaccionUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<TransaccionCreateWithoutEmpleadoInput, TransaccionUncheckedCreateWithoutEmpleadoInput>
  }

  export type TransaccionUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: TransaccionWhereUniqueInput
    data: XOR<TransaccionUpdateWithoutEmpleadoInput, TransaccionUncheckedUpdateWithoutEmpleadoInput>
  }

  export type TransaccionUpdateManyWithWhereWithoutEmpleadoInput = {
    where: TransaccionScalarWhereInput
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type pedido_elementosUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: pedido_elementosWhereUniqueInput
    update: XOR<pedido_elementosUpdateWithoutEmpleadoInput, pedido_elementosUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<pedido_elementosCreateWithoutEmpleadoInput, pedido_elementosUncheckedCreateWithoutEmpleadoInput>
  }

  export type pedido_elementosUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: pedido_elementosWhereUniqueInput
    data: XOR<pedido_elementosUpdateWithoutEmpleadoInput, pedido_elementosUncheckedUpdateWithoutEmpleadoInput>
  }

  export type pedido_elementosUpdateManyWithWhereWithoutEmpleadoInput = {
    where: pedido_elementosScalarWhereInput
    data: XOR<pedido_elementosUpdateManyMutationInput, pedido_elementosUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type proceso_empleadosUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: proceso_empleadosWhereUniqueInput
    update: XOR<proceso_empleadosUpdateWithoutEmpleadoInput, proceso_empleadosUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<proceso_empleadosCreateWithoutEmpleadoInput, proceso_empleadosUncheckedCreateWithoutEmpleadoInput>
  }

  export type proceso_empleadosUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: proceso_empleadosWhereUniqueInput
    data: XOR<proceso_empleadosUpdateWithoutEmpleadoInput, proceso_empleadosUncheckedUpdateWithoutEmpleadoInput>
  }

  export type proceso_empleadosUpdateManyWithWhereWithoutEmpleadoInput = {
    where: proceso_empleadosScalarWhereInput
    data: XOR<proceso_empleadosUpdateManyMutationInput, proceso_empleadosUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type proceso_empleadosScalarWhereInput = {
    AND?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
    OR?: proceso_empleadosScalarWhereInput[]
    NOT?: proceso_empleadosScalarWhereInput | proceso_empleadosScalarWhereInput[]
    id?: IntFilter<"proceso_empleados"> | number
    horas?: IntFilter<"proceso_empleados"> | number
    sueldo?: FloatFilter<"proceso_empleados"> | number
    id_proceso?: IntFilter<"proceso_empleados"> | number
    id_empleado?: IntFilter<"proceso_empleados"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"proceso_empleados"> | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUpsertWithWhereUniqueWithoutEmpleadoInput = {
    where: ubicacion_empleadoWhereUniqueInput
    update: XOR<ubicacion_empleadoUpdateWithoutEmpleadoInput, ubicacion_empleadoUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<ubicacion_empleadoCreateWithoutEmpleadoInput, ubicacion_empleadoUncheckedCreateWithoutEmpleadoInput>
  }

  export type ubicacion_empleadoUpdateWithWhereUniqueWithoutEmpleadoInput = {
    where: ubicacion_empleadoWhereUniqueInput
    data: XOR<ubicacion_empleadoUpdateWithoutEmpleadoInput, ubicacion_empleadoUncheckedUpdateWithoutEmpleadoInput>
  }

  export type ubicacion_empleadoUpdateManyWithWhereWithoutEmpleadoInput = {
    where: ubicacion_empleadoScalarWhereInput
    data: XOR<ubicacion_empleadoUpdateManyMutationInput, ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoInput>
  }

  export type MensajeUpsertWithWhereUniqueWithoutRemitenteInput = {
    where: MensajeWhereUniqueInput
    update: XOR<MensajeUpdateWithoutRemitenteInput, MensajeUncheckedUpdateWithoutRemitenteInput>
    create: XOR<MensajeCreateWithoutRemitenteInput, MensajeUncheckedCreateWithoutRemitenteInput>
  }

  export type MensajeUpdateWithWhereUniqueWithoutRemitenteInput = {
    where: MensajeWhereUniqueInput
    data: XOR<MensajeUpdateWithoutRemitenteInput, MensajeUncheckedUpdateWithoutRemitenteInput>
  }

  export type MensajeUpdateManyWithWhereWithoutRemitenteInput = {
    where: MensajeScalarWhereInput
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyWithoutRemitenteInput>
  }

  export type MensajeScalarWhereInput = {
    AND?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
    OR?: MensajeScalarWhereInput[]
    NOT?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
    id?: IntFilter<"Mensaje"> | number
    texto?: StringFilter<"Mensaje"> | string
    titulo?: StringFilter<"Mensaje"> | string
    fecha?: DateTimeFilter<"Mensaje"> | Date | string
    tipo?: EnumCategoriaMensajesFilter<"Mensaje"> | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFilter<"Mensaje"> | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFilter<"Mensaje"> | $Enums.EstadoMensaje
    id_remitente?: IntFilter<"Mensaje"> | number
    id_destinario?: IntFilter<"Mensaje"> | number
    createdBy?: IntFilter<"Mensaje"> | number
    updatedBy?: IntNullableFilter<"Mensaje"> | number | null
    deletedBy?: IntNullableFilter<"Mensaje"> | number | null
    createdDate?: DateTimeFilter<"Mensaje"> | Date | string
    updatedDate?: DateTimeFilter<"Mensaje"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Mensaje"> | Date | string | null
  }

  export type MensajeUpsertWithWhereUniqueWithoutDestinatarioInput = {
    where: MensajeWhereUniqueInput
    update: XOR<MensajeUpdateWithoutDestinatarioInput, MensajeUncheckedUpdateWithoutDestinatarioInput>
    create: XOR<MensajeCreateWithoutDestinatarioInput, MensajeUncheckedCreateWithoutDestinatarioInput>
  }

  export type MensajeUpdateWithWhereUniqueWithoutDestinatarioInput = {
    where: MensajeWhereUniqueInput
    data: XOR<MensajeUpdateWithoutDestinatarioInput, MensajeUncheckedUpdateWithoutDestinatarioInput>
  }

  export type MensajeUpdateManyWithWhereWithoutDestinatarioInput = {
    where: MensajeScalarWhereInput
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyWithoutDestinatarioInput>
  }

  export type TareaUpsertWithWhereUniqueWithoutAsignadorInput = {
    where: TareaWhereUniqueInput
    update: XOR<TareaUpdateWithoutAsignadorInput, TareaUncheckedUpdateWithoutAsignadorInput>
    create: XOR<TareaCreateWithoutAsignadorInput, TareaUncheckedCreateWithoutAsignadorInput>
  }

  export type TareaUpdateWithWhereUniqueWithoutAsignadorInput = {
    where: TareaWhereUniqueInput
    data: XOR<TareaUpdateWithoutAsignadorInput, TareaUncheckedUpdateWithoutAsignadorInput>
  }

  export type TareaUpdateManyWithWhereWithoutAsignadorInput = {
    where: TareaScalarWhereInput
    data: XOR<TareaUpdateManyMutationInput, TareaUncheckedUpdateManyWithoutAsignadorInput>
  }

  export type TareaUpsertWithWhereUniqueWithoutAsignadoInput = {
    where: TareaWhereUniqueInput
    update: XOR<TareaUpdateWithoutAsignadoInput, TareaUncheckedUpdateWithoutAsignadoInput>
    create: XOR<TareaCreateWithoutAsignadoInput, TareaUncheckedCreateWithoutAsignadoInput>
  }

  export type TareaUpdateWithWhereUniqueWithoutAsignadoInput = {
    where: TareaWhereUniqueInput
    data: XOR<TareaUpdateWithoutAsignadoInput, TareaUncheckedUpdateWithoutAsignadoInput>
  }

  export type TareaUpdateManyWithWhereWithoutAsignadoInput = {
    where: TareaScalarWhereInput
    data: XOR<TareaUpdateManyMutationInput, TareaUncheckedUpdateManyWithoutAsignadoInput>
  }

  export type EmpleadoCreateWithoutMensajesEnviadosInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutMensajesEnviadosInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutMensajesEnviadosInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutMensajesEnviadosInput, EmpleadoUncheckedCreateWithoutMensajesEnviadosInput>
  }

  export type EmpleadoCreateWithoutMensajesRecibidosInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutMensajesRecibidosInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutMensajesRecibidosInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutMensajesRecibidosInput, EmpleadoUncheckedCreateWithoutMensajesRecibidosInput>
  }

  export type EmpleadoUpsertWithoutMensajesEnviadosInput = {
    update: XOR<EmpleadoUpdateWithoutMensajesEnviadosInput, EmpleadoUncheckedUpdateWithoutMensajesEnviadosInput>
    create: XOR<EmpleadoCreateWithoutMensajesEnviadosInput, EmpleadoUncheckedCreateWithoutMensajesEnviadosInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutMensajesEnviadosInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutMensajesEnviadosInput, EmpleadoUncheckedUpdateWithoutMensajesEnviadosInput>
  }

  export type EmpleadoUpdateWithoutMensajesEnviadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutMensajesEnviadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUpsertWithoutMensajesRecibidosInput = {
    update: XOR<EmpleadoUpdateWithoutMensajesRecibidosInput, EmpleadoUncheckedUpdateWithoutMensajesRecibidosInput>
    create: XOR<EmpleadoCreateWithoutMensajesRecibidosInput, EmpleadoUncheckedCreateWithoutMensajesRecibidosInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutMensajesRecibidosInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutMensajesRecibidosInput, EmpleadoUncheckedUpdateWithoutMensajesRecibidosInput>
  }

  export type EmpleadoUpdateWithoutMensajesRecibidosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutMensajesRecibidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type PuntoCreateWithoutProformaInput = {
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionCreateNestedManyWithoutPuntoInput
    obra?: ObraCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoCreateNestedManyWithoutPuntoInput
  }

  export type PuntoUncheckedCreateWithoutProformaInput = {
    id?: number
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionUncheckedCreateNestedManyWithoutPuntoInput
    obra?: ObraUncheckedCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoUncheckedCreateNestedManyWithoutPuntoInput
  }

  export type PuntoCreateOrConnectWithoutProformaInput = {
    where: PuntoWhereUniqueInput
    create: XOR<PuntoCreateWithoutProformaInput, PuntoUncheckedCreateWithoutProformaInput>
  }

  export type PersonaCreateWithoutProformaInput = {
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioCreateNestedManyWithoutProveedorInput
    obra?: ObraCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionCreateNestedManyWithoutPersonaInput
  }

  export type PersonaUncheckedCreateWithoutProformaInput = {
    id?: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutProveedorInput
    obra?: ObraUncheckedCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutPersonaInput
  }

  export type PersonaCreateOrConnectWithoutProformaInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutProformaInput, PersonaUncheckedCreateWithoutProformaInput>
  }

  export type ObraCreateWithoutProformaInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    cliente: PersonaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutProformaInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutProformaInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutProformaInput, ObraUncheckedCreateWithoutProformaInput>
  }

  export type ProcesoCreateWithoutProformaInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioCreateNestedManyWithoutProcesoInput
    obra?: ObraCreateNestedOneWithoutProcesoInput
  }

  export type ProcesoUncheckedCreateWithoutProformaInput = {
    id?: number
    nombre: string
    descripcion: string
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutProcesoInput
  }

  export type ProcesoCreateOrConnectWithoutProformaInput = {
    where: ProcesoWhereUniqueInput
    create: XOR<ProcesoCreateWithoutProformaInput, ProcesoUncheckedCreateWithoutProformaInput>
  }

  export type ProcesoCreateManyProformaInputEnvelope = {
    data: ProcesoCreateManyProformaInput | ProcesoCreateManyProformaInput[]
    skipDuplicates?: boolean
  }

  export type PuntoUpsertWithoutProformaInput = {
    update: XOR<PuntoUpdateWithoutProformaInput, PuntoUncheckedUpdateWithoutProformaInput>
    create: XOR<PuntoCreateWithoutProformaInput, PuntoUncheckedCreateWithoutProformaInput>
    where?: PuntoWhereInput
  }

  export type PuntoUpdateToOneWithWhereWithoutProformaInput = {
    where?: PuntoWhereInput
    data: XOR<PuntoUpdateWithoutProformaInput, PuntoUncheckedUpdateWithoutProformaInput>
  }

  export type PuntoUpdateWithoutProformaInput = {
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUpdateManyWithoutPuntoNestedInput
    obra?: ObraUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUpdateManyWithoutPuntoNestedInput
  }

  export type PuntoUncheckedUpdateWithoutProformaInput = {
    id?: IntFieldUpdateOperationsInput | number
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUncheckedUpdateManyWithoutPuntoNestedInput
    obra?: ObraUncheckedUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUncheckedUpdateManyWithoutPuntoNestedInput
  }

  export type PersonaUpsertWithoutProformaInput = {
    update: XOR<PersonaUpdateWithoutProformaInput, PersonaUncheckedUpdateWithoutProformaInput>
    create: XOR<PersonaCreateWithoutProformaInput, PersonaUncheckedCreateWithoutProformaInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutProformaInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutProformaInput, PersonaUncheckedUpdateWithoutProformaInput>
  }

  export type PersonaUpdateWithoutProformaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUpdateManyWithoutProveedorNestedInput
    obra?: ObraUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUpdateManyWithoutPersonaNestedInput
  }

  export type PersonaUncheckedUpdateWithoutProformaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutProveedorNestedInput
    obra?: ObraUncheckedUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutPersonaNestedInput
  }

  export type ObraUpsertWithoutProformaInput = {
    update: XOR<ObraUpdateWithoutProformaInput, ObraUncheckedUpdateWithoutProformaInput>
    create: XOR<ObraCreateWithoutProformaInput, ObraUncheckedCreateWithoutProformaInput>
    where?: ObraWhereInput
  }

  export type ObraUpdateToOneWithWhereWithoutProformaInput = {
    where?: ObraWhereInput
    data: XOR<ObraUpdateWithoutProformaInput, ObraUncheckedUpdateWithoutProformaInput>
  }

  export type ObraUpdateWithoutProformaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutProformaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type ProcesoUpsertWithWhereUniqueWithoutProformaInput = {
    where: ProcesoWhereUniqueInput
    update: XOR<ProcesoUpdateWithoutProformaInput, ProcesoUncheckedUpdateWithoutProformaInput>
    create: XOR<ProcesoCreateWithoutProformaInput, ProcesoUncheckedCreateWithoutProformaInput>
  }

  export type ProcesoUpdateWithWhereUniqueWithoutProformaInput = {
    where: ProcesoWhereUniqueInput
    data: XOR<ProcesoUpdateWithoutProformaInput, ProcesoUncheckedUpdateWithoutProformaInput>
  }

  export type ProcesoUpdateManyWithWhereWithoutProformaInput = {
    where: ProcesoScalarWhereInput
    data: XOR<ProcesoUpdateManyMutationInput, ProcesoUncheckedUpdateManyWithoutProformaInput>
  }

  export type ProcesoScalarWhereInput = {
    AND?: ProcesoScalarWhereInput | ProcesoScalarWhereInput[]
    OR?: ProcesoScalarWhereInput[]
    NOT?: ProcesoScalarWhereInput | ProcesoScalarWhereInput[]
    id?: IntFilter<"Proceso"> | number
    nombre?: StringFilter<"Proceso"> | string
    descripcion?: StringFilter<"Proceso"> | string
    id_proforma?: IntNullableFilter<"Proceso"> | number | null
    id_obra?: IntNullableFilter<"Proceso"> | number | null
    estadoEliminado?: EnumEstadoEliminadoFilter<"Proceso"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Proceso"> | number
    updatedBy?: IntNullableFilter<"Proceso"> | number | null
    deletedBy?: IntNullableFilter<"Proceso"> | number | null
    createdDate?: DateTimeFilter<"Proceso"> | Date | string
    updatedDate?: DateTimeFilter<"Proceso"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Proceso"> | Date | string | null
  }

  export type proceso_empleadosCreateWithoutProcesoInput = {
    horas: number
    sueldo: number
    estadoEliminado?: $Enums.EstadoEliminado
    empleado: EmpleadoCreateNestedOneWithoutProcesoInput
    horarios?: HorarioCreateNestedManyWithoutProceso_empleadosInput
  }

  export type proceso_empleadosUncheckedCreateWithoutProcesoInput = {
    id?: number
    horas: number
    sueldo: number
    id_empleado: number
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutProceso_empleadosInput
  }

  export type proceso_empleadosCreateOrConnectWithoutProcesoInput = {
    where: proceso_empleadosWhereUniqueInput
    create: XOR<proceso_empleadosCreateWithoutProcesoInput, proceso_empleadosUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_empleadosCreateManyProcesoInputEnvelope = {
    data: proceso_empleadosCreateManyProcesoInput | proceso_empleadosCreateManyProcesoInput[]
    skipDuplicates?: boolean
  }

  export type proceso_herramientasCreateWithoutProcesoInput = {
    horas: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    herramienta: InventarioCreateNestedOneWithoutProceso_herramientasInput
    horarios?: HorarioCreateNestedManyWithoutProceso_herramientasInput
  }

  export type proceso_herramientasUncheckedCreateWithoutProcesoInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_herramienta: number
    estadoEliminado?: $Enums.EstadoEliminado
    horarios?: HorarioUncheckedCreateNestedManyWithoutProceso_herramientasInput
  }

  export type proceso_herramientasCreateOrConnectWithoutProcesoInput = {
    where: proceso_herramientasWhereUniqueInput
    create: XOR<proceso_herramientasCreateWithoutProcesoInput, proceso_herramientasUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_herramientasCreateManyProcesoInputEnvelope = {
    data: proceso_herramientasCreateManyProcesoInput | proceso_herramientasCreateManyProcesoInput[]
    skipDuplicates?: boolean
  }

  export type proceso_inventarioCreateWithoutProcesoInput = {
    cantidad: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    elemento: InventarioCreateNestedOneWithoutProceso_inventarioInput
  }

  export type proceso_inventarioUncheckedCreateWithoutProcesoInput = {
    id?: number
    cantidad: number
    descuento: number
    precio: number
    id_elemento: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_inventarioCreateOrConnectWithoutProcesoInput = {
    where: proceso_inventarioWhereUniqueInput
    create: XOR<proceso_inventarioCreateWithoutProcesoInput, proceso_inventarioUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_inventarioCreateManyProcesoInputEnvelope = {
    data: proceso_inventarioCreateManyProcesoInput | proceso_inventarioCreateManyProcesoInput[]
    skipDuplicates?: boolean
  }

  export type ProformaCreateWithoutProcesosInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutProformaInput
    cliente: PersonaCreateNestedOneWithoutProformaInput
    obra?: ObraCreateNestedOneWithoutProformaInput
  }

  export type ProformaUncheckedCreateWithoutProcesosInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra?: ObraUncheckedCreateNestedOneWithoutProformaInput
  }

  export type ProformaCreateOrConnectWithoutProcesosInput = {
    where: ProformaWhereUniqueInput
    create: XOR<ProformaCreateWithoutProcesosInput, ProformaUncheckedCreateWithoutProcesosInput>
  }

  export type ObraCreateWithoutProcesoInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    cliente: PersonaCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutProcesoInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutProcesoInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutProcesoInput, ObraUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_empleadosUpsertWithWhereUniqueWithoutProcesoInput = {
    where: proceso_empleadosWhereUniqueInput
    update: XOR<proceso_empleadosUpdateWithoutProcesoInput, proceso_empleadosUncheckedUpdateWithoutProcesoInput>
    create: XOR<proceso_empleadosCreateWithoutProcesoInput, proceso_empleadosUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_empleadosUpdateWithWhereUniqueWithoutProcesoInput = {
    where: proceso_empleadosWhereUniqueInput
    data: XOR<proceso_empleadosUpdateWithoutProcesoInput, proceso_empleadosUncheckedUpdateWithoutProcesoInput>
  }

  export type proceso_empleadosUpdateManyWithWhereWithoutProcesoInput = {
    where: proceso_empleadosScalarWhereInput
    data: XOR<proceso_empleadosUpdateManyMutationInput, proceso_empleadosUncheckedUpdateManyWithoutProcesoInput>
  }

  export type proceso_herramientasUpsertWithWhereUniqueWithoutProcesoInput = {
    where: proceso_herramientasWhereUniqueInput
    update: XOR<proceso_herramientasUpdateWithoutProcesoInput, proceso_herramientasUncheckedUpdateWithoutProcesoInput>
    create: XOR<proceso_herramientasCreateWithoutProcesoInput, proceso_herramientasUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_herramientasUpdateWithWhereUniqueWithoutProcesoInput = {
    where: proceso_herramientasWhereUniqueInput
    data: XOR<proceso_herramientasUpdateWithoutProcesoInput, proceso_herramientasUncheckedUpdateWithoutProcesoInput>
  }

  export type proceso_herramientasUpdateManyWithWhereWithoutProcesoInput = {
    where: proceso_herramientasScalarWhereInput
    data: XOR<proceso_herramientasUpdateManyMutationInput, proceso_herramientasUncheckedUpdateManyWithoutProcesoInput>
  }

  export type proceso_inventarioUpsertWithWhereUniqueWithoutProcesoInput = {
    where: proceso_inventarioWhereUniqueInput
    update: XOR<proceso_inventarioUpdateWithoutProcesoInput, proceso_inventarioUncheckedUpdateWithoutProcesoInput>
    create: XOR<proceso_inventarioCreateWithoutProcesoInput, proceso_inventarioUncheckedCreateWithoutProcesoInput>
  }

  export type proceso_inventarioUpdateWithWhereUniqueWithoutProcesoInput = {
    where: proceso_inventarioWhereUniqueInput
    data: XOR<proceso_inventarioUpdateWithoutProcesoInput, proceso_inventarioUncheckedUpdateWithoutProcesoInput>
  }

  export type proceso_inventarioUpdateManyWithWhereWithoutProcesoInput = {
    where: proceso_inventarioScalarWhereInput
    data: XOR<proceso_inventarioUpdateManyMutationInput, proceso_inventarioUncheckedUpdateManyWithoutProcesoInput>
  }

  export type ProformaUpsertWithoutProcesosInput = {
    update: XOR<ProformaUpdateWithoutProcesosInput, ProformaUncheckedUpdateWithoutProcesosInput>
    create: XOR<ProformaCreateWithoutProcesosInput, ProformaUncheckedCreateWithoutProcesosInput>
    where?: ProformaWhereInput
  }

  export type ProformaUpdateToOneWithWhereWithoutProcesosInput = {
    where?: ProformaWhereInput
    data: XOR<ProformaUpdateWithoutProcesosInput, ProformaUncheckedUpdateWithoutProcesosInput>
  }

  export type ProformaUpdateWithoutProcesosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutProformaNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutProformaNestedInput
    obra?: ObraUpdateOneWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateWithoutProcesosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUncheckedUpdateOneWithoutProformaNestedInput
  }

  export type ObraUpsertWithoutProcesoInput = {
    update: XOR<ObraUpdateWithoutProcesoInput, ObraUncheckedUpdateWithoutProcesoInput>
    create: XOR<ObraCreateWithoutProcesoInput, ObraUncheckedCreateWithoutProcesoInput>
    where?: ObraWhereInput
  }

  export type ObraUpdateToOneWithWhereWithoutProcesoInput = {
    where?: ObraWhereInput
    data: XOR<ObraUpdateWithoutProcesoInput, ObraUncheckedUpdateWithoutProcesoInput>
  }

  export type ObraUpdateWithoutProcesoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type ProcesoCreateWithoutEmpleadosInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    herramientas?: proceso_herramientasCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioCreateNestedManyWithoutProcesoInput
    proforma?: ProformaCreateNestedOneWithoutProcesosInput
    obra?: ObraCreateNestedOneWithoutProcesoInput
  }

  export type ProcesoUncheckedCreateWithoutEmpleadosInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutProcesoInput
  }

  export type ProcesoCreateOrConnectWithoutEmpleadosInput = {
    where: ProcesoWhereUniqueInput
    create: XOR<ProcesoCreateWithoutEmpleadosInput, ProcesoUncheckedCreateWithoutEmpleadosInput>
  }

  export type EmpleadoCreateWithoutProcesoInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutProcesoInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutProcesoInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutProcesoInput, EmpleadoUncheckedCreateWithoutProcesoInput>
  }

  export type HorarioCreateWithoutProceso_empleadosInput = {
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    dias?: DiaCreateNestedManyWithoutHorariosInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHorariosInput
  }

  export type HorarioUncheckedCreateWithoutProceso_empleadosInput = {
    id?: number
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    dias?: DiaUncheckedCreateNestedManyWithoutHorariosInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type HorarioCreateOrConnectWithoutProceso_empleadosInput = {
    where: HorarioWhereUniqueInput
    create: XOR<HorarioCreateWithoutProceso_empleadosInput, HorarioUncheckedCreateWithoutProceso_empleadosInput>
  }

  export type ProcesoUpsertWithoutEmpleadosInput = {
    update: XOR<ProcesoUpdateWithoutEmpleadosInput, ProcesoUncheckedUpdateWithoutEmpleadosInput>
    create: XOR<ProcesoCreateWithoutEmpleadosInput, ProcesoUncheckedCreateWithoutEmpleadosInput>
    where?: ProcesoWhereInput
  }

  export type ProcesoUpdateToOneWithWhereWithoutEmpleadosInput = {
    where?: ProcesoWhereInput
    data: XOR<ProcesoUpdateWithoutEmpleadosInput, ProcesoUncheckedUpdateWithoutEmpleadosInput>
  }

  export type ProcesoUpdateWithoutEmpleadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    herramientas?: proceso_herramientasUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUpdateManyWithoutProcesoNestedInput
    proforma?: ProformaUpdateOneWithoutProcesosNestedInput
    obra?: ObraUpdateOneWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateWithoutEmpleadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    herramientas?: proceso_herramientasUncheckedUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUncheckedUpdateManyWithoutProcesoNestedInput
  }

  export type EmpleadoUpsertWithoutProcesoInput = {
    update: XOR<EmpleadoUpdateWithoutProcesoInput, EmpleadoUncheckedUpdateWithoutProcesoInput>
    create: XOR<EmpleadoCreateWithoutProcesoInput, EmpleadoUncheckedCreateWithoutProcesoInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutProcesoInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutProcesoInput, EmpleadoUncheckedUpdateWithoutProcesoInput>
  }

  export type EmpleadoUpdateWithoutProcesoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type HorarioUpsertWithWhereUniqueWithoutProceso_empleadosInput = {
    where: HorarioWhereUniqueInput
    update: XOR<HorarioUpdateWithoutProceso_empleadosInput, HorarioUncheckedUpdateWithoutProceso_empleadosInput>
    create: XOR<HorarioCreateWithoutProceso_empleadosInput, HorarioUncheckedCreateWithoutProceso_empleadosInput>
  }

  export type HorarioUpdateWithWhereUniqueWithoutProceso_empleadosInput = {
    where: HorarioWhereUniqueInput
    data: XOR<HorarioUpdateWithoutProceso_empleadosInput, HorarioUncheckedUpdateWithoutProceso_empleadosInput>
  }

  export type HorarioUpdateManyWithWhereWithoutProceso_empleadosInput = {
    where: HorarioScalarWhereInput
    data: XOR<HorarioUpdateManyMutationInput, HorarioUncheckedUpdateManyWithoutProceso_empleadosInput>
  }

  export type HorarioScalarWhereInput = {
    AND?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
    OR?: HorarioScalarWhereInput[]
    NOT?: HorarioScalarWhereInput | HorarioScalarWhereInput[]
    id?: IntFilter<"Horario"> | number
    hora_inicio?: DateTimeFilter<"Horario"> | Date | string
    hora_final?: DateTimeFilter<"Horario"> | Date | string
    estadoEliminado?: EnumEstadoEliminadoFilter<"Horario"> | $Enums.EstadoEliminado
  }

  export type ProcesoCreateWithoutHerramientasInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioCreateNestedManyWithoutProcesoInput
    proforma?: ProformaCreateNestedOneWithoutProcesosInput
    obra?: ObraCreateNestedOneWithoutProcesoInput
  }

  export type ProcesoUncheckedCreateWithoutHerramientasInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutProcesoInput
  }

  export type ProcesoCreateOrConnectWithoutHerramientasInput = {
    where: ProcesoWhereUniqueInput
    create: XOR<ProcesoCreateWithoutHerramientasInput, ProcesoUncheckedCreateWithoutHerramientasInput>
  }

  export type InventarioCreateWithoutProceso_herramientasInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateWithoutProceso_herramientasInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioCreateOrConnectWithoutProceso_herramientasInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutProceso_herramientasInput, InventarioUncheckedCreateWithoutProceso_herramientasInput>
  }

  export type HorarioCreateWithoutProceso_herramientasInput = {
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    dias?: DiaCreateNestedManyWithoutHorariosInput
    proceso_empleados?: proceso_empleadosCreateNestedManyWithoutHorariosInput
  }

  export type HorarioUncheckedCreateWithoutProceso_herramientasInput = {
    id?: number
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    dias?: DiaUncheckedCreateNestedManyWithoutHorariosInput
    proceso_empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type HorarioCreateOrConnectWithoutProceso_herramientasInput = {
    where: HorarioWhereUniqueInput
    create: XOR<HorarioCreateWithoutProceso_herramientasInput, HorarioUncheckedCreateWithoutProceso_herramientasInput>
  }

  export type ProcesoUpsertWithoutHerramientasInput = {
    update: XOR<ProcesoUpdateWithoutHerramientasInput, ProcesoUncheckedUpdateWithoutHerramientasInput>
    create: XOR<ProcesoCreateWithoutHerramientasInput, ProcesoUncheckedCreateWithoutHerramientasInput>
    where?: ProcesoWhereInput
  }

  export type ProcesoUpdateToOneWithWhereWithoutHerramientasInput = {
    where?: ProcesoWhereInput
    data: XOR<ProcesoUpdateWithoutHerramientasInput, ProcesoUncheckedUpdateWithoutHerramientasInput>
  }

  export type ProcesoUpdateWithoutHerramientasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUpdateManyWithoutProcesoNestedInput
    proforma?: ProformaUpdateOneWithoutProcesosNestedInput
    obra?: ObraUpdateOneWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateWithoutHerramientasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUncheckedUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUncheckedUpdateManyWithoutProcesoNestedInput
  }

  export type InventarioUpsertWithoutProceso_herramientasInput = {
    update: XOR<InventarioUpdateWithoutProceso_herramientasInput, InventarioUncheckedUpdateWithoutProceso_herramientasInput>
    create: XOR<InventarioCreateWithoutProceso_herramientasInput, InventarioUncheckedCreateWithoutProceso_herramientasInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutProceso_herramientasInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutProceso_herramientasInput, InventarioUncheckedUpdateWithoutProceso_herramientasInput>
  }

  export type InventarioUpdateWithoutProceso_herramientasInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateWithoutProceso_herramientasInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type HorarioUpsertWithWhereUniqueWithoutProceso_herramientasInput = {
    where: HorarioWhereUniqueInput
    update: XOR<HorarioUpdateWithoutProceso_herramientasInput, HorarioUncheckedUpdateWithoutProceso_herramientasInput>
    create: XOR<HorarioCreateWithoutProceso_herramientasInput, HorarioUncheckedCreateWithoutProceso_herramientasInput>
  }

  export type HorarioUpdateWithWhereUniqueWithoutProceso_herramientasInput = {
    where: HorarioWhereUniqueInput
    data: XOR<HorarioUpdateWithoutProceso_herramientasInput, HorarioUncheckedUpdateWithoutProceso_herramientasInput>
  }

  export type HorarioUpdateManyWithWhereWithoutProceso_herramientasInput = {
    where: HorarioScalarWhereInput
    data: XOR<HorarioUpdateManyMutationInput, HorarioUncheckedUpdateManyWithoutProceso_herramientasInput>
  }

  export type ProcesoCreateWithoutInventarioInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasCreateNestedManyWithoutProcesoInput
    proforma?: ProformaCreateNestedOneWithoutProcesosInput
    obra?: ObraCreateNestedOneWithoutProcesoInput
  }

  export type ProcesoUncheckedCreateWithoutInventarioInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutProcesoInput
  }

  export type ProcesoCreateOrConnectWithoutInventarioInput = {
    where: ProcesoWhereUniqueInput
    create: XOR<ProcesoCreateWithoutInventarioInput, ProcesoUncheckedCreateWithoutInventarioInput>
  }

  export type InventarioCreateWithoutProceso_inventarioInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
  }

  export type InventarioUncheckedCreateWithoutProceso_inventarioInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
  }

  export type InventarioCreateOrConnectWithoutProceso_inventarioInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutProceso_inventarioInput, InventarioUncheckedCreateWithoutProceso_inventarioInput>
  }

  export type ProcesoUpsertWithoutInventarioInput = {
    update: XOR<ProcesoUpdateWithoutInventarioInput, ProcesoUncheckedUpdateWithoutInventarioInput>
    create: XOR<ProcesoCreateWithoutInventarioInput, ProcesoUncheckedCreateWithoutInventarioInput>
    where?: ProcesoWhereInput
  }

  export type ProcesoUpdateToOneWithWhereWithoutInventarioInput = {
    where?: ProcesoWhereInput
    data: XOR<ProcesoUpdateWithoutInventarioInput, ProcesoUncheckedUpdateWithoutInventarioInput>
  }

  export type ProcesoUpdateWithoutInventarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUpdateManyWithoutProcesoNestedInput
    proforma?: ProformaUpdateOneWithoutProcesosNestedInput
    obra?: ObraUpdateOneWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateWithoutInventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUncheckedUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUncheckedUpdateManyWithoutProcesoNestedInput
  }

  export type InventarioUpsertWithoutProceso_inventarioInput = {
    update: XOR<InventarioUpdateWithoutProceso_inventarioInput, InventarioUncheckedUpdateWithoutProceso_inventarioInput>
    create: XOR<InventarioCreateWithoutProceso_inventarioInput, InventarioUncheckedCreateWithoutProceso_inventarioInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutProceso_inventarioInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutProceso_inventarioInput, InventarioUncheckedUpdateWithoutProceso_inventarioInput>
  }

  export type InventarioUpdateWithoutProceso_inventarioInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
  }

  export type InventarioUncheckedUpdateWithoutProceso_inventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
  }

  export type PuntoCreateWithoutObraInput = {
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionCreateNestedManyWithoutPuntoInput
    proforma?: ProformaCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoCreateNestedManyWithoutPuntoInput
  }

  export type PuntoUncheckedCreateWithoutObraInput = {
    id?: number
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionUncheckedCreateNestedManyWithoutPuntoInput
    proforma?: ProformaUncheckedCreateNestedManyWithoutPuntoInput
    empleado?: ubicacion_empleadoUncheckedCreateNestedManyWithoutPuntoInput
  }

  export type PuntoCreateOrConnectWithoutObraInput = {
    where: PuntoWhereUniqueInput
    create: XOR<PuntoCreateWithoutObraInput, PuntoUncheckedCreateWithoutObraInput>
  }

  export type PersonaCreateWithoutObraInput = {
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioCreateNestedManyWithoutProveedorInput
    proforma?: ProformaCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionCreateNestedManyWithoutPersonaInput
  }

  export type PersonaUncheckedCreateWithoutObraInput = {
    id?: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutProveedorInput
    proforma?: ProformaUncheckedCreateNestedManyWithoutClienteInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutPersonaInput
  }

  export type PersonaCreateOrConnectWithoutObraInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutObraInput, PersonaUncheckedCreateWithoutObraInput>
  }

  export type ProformaCreateWithoutObraInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutProformaInput
    cliente: PersonaCreateNestedOneWithoutProformaInput
    procesos?: ProcesoCreateNestedManyWithoutProformaInput
  }

  export type ProformaUncheckedCreateWithoutObraInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    procesos?: ProcesoUncheckedCreateNestedManyWithoutProformaInput
  }

  export type ProformaCreateOrConnectWithoutObraInput = {
    where: ProformaWhereUniqueInput
    create: XOR<ProformaCreateWithoutObraInput, ProformaUncheckedCreateWithoutObraInput>
  }

  export type ProcesoCreateWithoutObraInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioCreateNestedManyWithoutProcesoInput
    proforma?: ProformaCreateNestedOneWithoutProcesosInput
  }

  export type ProcesoUncheckedCreateWithoutObraInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutProcesoInput
    herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutProcesoInput
    inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutProcesoInput
  }

  export type ProcesoCreateOrConnectWithoutObraInput = {
    where: ProcesoWhereUniqueInput
    create: XOR<ProcesoCreateWithoutObraInput, ProcesoUncheckedCreateWithoutObraInput>
  }

  export type ProcesoCreateManyObraInputEnvelope = {
    data: ProcesoCreateManyObraInput | ProcesoCreateManyObraInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionCreateWithoutObraInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutObraInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutObraInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutObraInput, TransaccionUncheckedCreateWithoutObraInput>
  }

  export type TransaccionCreateManyObraInputEnvelope = {
    data: TransaccionCreateManyObraInput | TransaccionCreateManyObraInput[]
    skipDuplicates?: boolean
  }

  export type PedidoCreateWithoutObraInput = {
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion: TransaccionCreateNestedOneWithoutPedidoInput
    elemento?: pedido_elementosCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutObraInput = {
    id?: number
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elemento?: pedido_elementosUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutObraInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutObraInput, PedidoUncheckedCreateWithoutObraInput>
  }

  export type PedidoCreateManyObraInputEnvelope = {
    data: PedidoCreateManyObraInput | PedidoCreateManyObraInput[]
    skipDuplicates?: boolean
  }

  export type TareaCreateWithoutObraInput = {
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    asignador: EmpleadoCreateNestedOneWithoutTareasAsignadasInput
    asignado?: EmpleadoCreateNestedOneWithoutTareasRecibidasInput
    ubicacion?: UbicacionCreateNestedOneWithoutTareaInput
  }

  export type TareaUncheckedCreateWithoutObraInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_asignado?: number | null
    id_ubicacion?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateOrConnectWithoutObraInput = {
    where: TareaWhereUniqueInput
    create: XOR<TareaCreateWithoutObraInput, TareaUncheckedCreateWithoutObraInput>
  }

  export type TareaCreateManyObraInputEnvelope = {
    data: TareaCreateManyObraInput | TareaCreateManyObraInput[]
    skipDuplicates?: boolean
  }

  export type PuntoUpsertWithoutObraInput = {
    update: XOR<PuntoUpdateWithoutObraInput, PuntoUncheckedUpdateWithoutObraInput>
    create: XOR<PuntoCreateWithoutObraInput, PuntoUncheckedCreateWithoutObraInput>
    where?: PuntoWhereInput
  }

  export type PuntoUpdateToOneWithWhereWithoutObraInput = {
    where?: PuntoWhereInput
    data: XOR<PuntoUpdateWithoutObraInput, PuntoUncheckedUpdateWithoutObraInput>
  }

  export type PuntoUpdateWithoutObraInput = {
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUpdateManyWithoutPuntoNestedInput
    proforma?: ProformaUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUpdateManyWithoutPuntoNestedInput
  }

  export type PuntoUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUncheckedUpdateManyWithoutPuntoNestedInput
    proforma?: ProformaUncheckedUpdateManyWithoutPuntoNestedInput
    empleado?: ubicacion_empleadoUncheckedUpdateManyWithoutPuntoNestedInput
  }

  export type PersonaUpsertWithoutObraInput = {
    update: XOR<PersonaUpdateWithoutObraInput, PersonaUncheckedUpdateWithoutObraInput>
    create: XOR<PersonaCreateWithoutObraInput, PersonaUncheckedCreateWithoutObraInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutObraInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutObraInput, PersonaUncheckedUpdateWithoutObraInput>
  }

  export type PersonaUpdateWithoutObraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUpdateManyWithoutProveedorNestedInput
    proforma?: ProformaUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUpdateManyWithoutPersonaNestedInput
  }

  export type PersonaUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutProveedorNestedInput
    proforma?: ProformaUncheckedUpdateManyWithoutClienteNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutPersonaNestedInput
  }

  export type ProformaUpsertWithoutObraInput = {
    update: XOR<ProformaUpdateWithoutObraInput, ProformaUncheckedUpdateWithoutObraInput>
    create: XOR<ProformaCreateWithoutObraInput, ProformaUncheckedCreateWithoutObraInput>
    where?: ProformaWhereInput
  }

  export type ProformaUpdateToOneWithWhereWithoutObraInput = {
    where?: ProformaWhereInput
    data: XOR<ProformaUpdateWithoutObraInput, ProformaUncheckedUpdateWithoutObraInput>
  }

  export type ProformaUpdateWithoutObraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutProformaNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutProformaNestedInput
    procesos?: ProcesoUpdateManyWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    procesos?: ProcesoUncheckedUpdateManyWithoutProformaNestedInput
  }

  export type ProcesoUpsertWithWhereUniqueWithoutObraInput = {
    where: ProcesoWhereUniqueInput
    update: XOR<ProcesoUpdateWithoutObraInput, ProcesoUncheckedUpdateWithoutObraInput>
    create: XOR<ProcesoCreateWithoutObraInput, ProcesoUncheckedCreateWithoutObraInput>
  }

  export type ProcesoUpdateWithWhereUniqueWithoutObraInput = {
    where: ProcesoWhereUniqueInput
    data: XOR<ProcesoUpdateWithoutObraInput, ProcesoUncheckedUpdateWithoutObraInput>
  }

  export type ProcesoUpdateManyWithWhereWithoutObraInput = {
    where: ProcesoScalarWhereInput
    data: XOR<ProcesoUpdateManyMutationInput, ProcesoUncheckedUpdateManyWithoutObraInput>
  }

  export type TransaccionUpsertWithWhereUniqueWithoutObraInput = {
    where: TransaccionWhereUniqueInput
    update: XOR<TransaccionUpdateWithoutObraInput, TransaccionUncheckedUpdateWithoutObraInput>
    create: XOR<TransaccionCreateWithoutObraInput, TransaccionUncheckedCreateWithoutObraInput>
  }

  export type TransaccionUpdateWithWhereUniqueWithoutObraInput = {
    where: TransaccionWhereUniqueInput
    data: XOR<TransaccionUpdateWithoutObraInput, TransaccionUncheckedUpdateWithoutObraInput>
  }

  export type TransaccionUpdateManyWithWhereWithoutObraInput = {
    where: TransaccionScalarWhereInput
    data: XOR<TransaccionUpdateManyMutationInput, TransaccionUncheckedUpdateManyWithoutObraInput>
  }

  export type PedidoUpsertWithWhereUniqueWithoutObraInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutObraInput, PedidoUncheckedUpdateWithoutObraInput>
    create: XOR<PedidoCreateWithoutObraInput, PedidoUncheckedCreateWithoutObraInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutObraInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutObraInput, PedidoUncheckedUpdateWithoutObraInput>
  }

  export type PedidoUpdateManyWithWhereWithoutObraInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutObraInput>
  }

  export type PedidoScalarWhereInput = {
    AND?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    OR?: PedidoScalarWhereInput[]
    NOT?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    id?: IntFilter<"Pedido"> | number
    id_obra?: IntFilter<"Pedido"> | number
    id_transaccion?: IntFilter<"Pedido"> | number
    estadoEliminado?: EnumEstadoEliminadoFilter<"Pedido"> | $Enums.EstadoEliminado
    createdBy?: IntFilter<"Pedido"> | number
    updatedBy?: IntNullableFilter<"Pedido"> | number | null
    deletedBy?: IntNullableFilter<"Pedido"> | number | null
    createdDate?: DateTimeFilter<"Pedido"> | Date | string
    updatedDate?: DateTimeFilter<"Pedido"> | Date | string
    deletedDate?: DateTimeNullableFilter<"Pedido"> | Date | string | null
  }

  export type TareaUpsertWithWhereUniqueWithoutObraInput = {
    where: TareaWhereUniqueInput
    update: XOR<TareaUpdateWithoutObraInput, TareaUncheckedUpdateWithoutObraInput>
    create: XOR<TareaCreateWithoutObraInput, TareaUncheckedCreateWithoutObraInput>
  }

  export type TareaUpdateWithWhereUniqueWithoutObraInput = {
    where: TareaWhereUniqueInput
    data: XOR<TareaUpdateWithoutObraInput, TareaUncheckedUpdateWithoutObraInput>
  }

  export type TareaUpdateManyWithWhereWithoutObraInput = {
    where: TareaScalarWhereInput
    data: XOR<TareaUpdateManyMutationInput, TareaUncheckedUpdateManyWithoutObraInput>
  }

  export type EmpleadoCreateWithoutTransaccionInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutTransaccionInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutTransaccionInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutTransaccionInput, EmpleadoUncheckedCreateWithoutTransaccionInput>
  }

  export type PersonaCreateWithoutTransaccionInput = {
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioCreateNestedManyWithoutProveedorInput
    proforma?: ProformaCreateNestedManyWithoutClienteInput
    obra?: ObraCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutTransaccionInput = {
    id?: number
    nombre: string
    ruc: string
    mail: string
    telefono: string
    proveedor: boolean
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutProveedorInput
    proforma?: ProformaUncheckedCreateNestedManyWithoutClienteInput
    obra?: ObraUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutTransaccionInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutTransaccionInput, PersonaUncheckedCreateWithoutTransaccionInput>
  }

  export type ObraCreateWithoutTransaccionInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    cliente: PersonaCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutTransaccionInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutTransaccionInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutTransaccionInput, ObraUncheckedCreateWithoutTransaccionInput>
  }

  export type transaccion_elementosCreateWithoutTransaccionInput = {
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
    elemento: InventarioCreateNestedOneWithoutTransaccionInput
  }

  export type transaccion_elementosUncheckedCreateWithoutTransaccionInput = {
    id?: number
    id_elementos: number
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type transaccion_elementosCreateOrConnectWithoutTransaccionInput = {
    where: transaccion_elementosWhereUniqueInput
    create: XOR<transaccion_elementosCreateWithoutTransaccionInput, transaccion_elementosUncheckedCreateWithoutTransaccionInput>
  }

  export type transaccion_elementosCreateManyTransaccionInputEnvelope = {
    data: transaccion_elementosCreateManyTransaccionInput | transaccion_elementosCreateManyTransaccionInput[]
    skipDuplicates?: boolean
  }

  export type PedidoCreateWithoutTransaccionInput = {
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra: ObraCreateNestedOneWithoutPedidoInput
    elemento?: pedido_elementosCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutTransaccionInput = {
    id?: number
    id_obra: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elemento?: pedido_elementosUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutTransaccionInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutTransaccionInput, PedidoUncheckedCreateWithoutTransaccionInput>
  }

  export type PedidoCreateManyTransaccionInputEnvelope = {
    data: PedidoCreateManyTransaccionInput | PedidoCreateManyTransaccionInput[]
    skipDuplicates?: boolean
  }

  export type CompraCreateWithoutTransaccionInput = {
    fechaCredito?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type CompraUncheckedCreateWithoutTransaccionInput = {
    id?: number
    fechaCredito?: Date | string | null
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type CompraCreateOrConnectWithoutTransaccionInput = {
    where: CompraWhereUniqueInput
    create: XOR<CompraCreateWithoutTransaccionInput, CompraUncheckedCreateWithoutTransaccionInput>
  }

  export type VentaCreateWithoutTransaccionInput = {
    codigo: string
    porcentaje: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type VentaUncheckedCreateWithoutTransaccionInput = {
    id?: number
    codigo: string
    porcentaje: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type VentaCreateOrConnectWithoutTransaccionInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
  }

  export type DevolucionCreateWithoutTransaccionInput = {
    codigo: string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DevolucionUncheckedCreateWithoutTransaccionInput = {
    id?: number
    codigo: string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DevolucionCreateOrConnectWithoutTransaccionInput = {
    where: DevolucionWhereUniqueInput
    create: XOR<DevolucionCreateWithoutTransaccionInput, DevolucionUncheckedCreateWithoutTransaccionInput>
  }

  export type EmpleadoUpsertWithoutTransaccionInput = {
    update: XOR<EmpleadoUpdateWithoutTransaccionInput, EmpleadoUncheckedUpdateWithoutTransaccionInput>
    create: XOR<EmpleadoCreateWithoutTransaccionInput, EmpleadoUncheckedCreateWithoutTransaccionInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutTransaccionInput, EmpleadoUncheckedUpdateWithoutTransaccionInput>
  }

  export type EmpleadoUpdateWithoutTransaccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type PersonaUpsertWithoutTransaccionInput = {
    update: XOR<PersonaUpdateWithoutTransaccionInput, PersonaUncheckedUpdateWithoutTransaccionInput>
    create: XOR<PersonaCreateWithoutTransaccionInput, PersonaUncheckedCreateWithoutTransaccionInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutTransaccionInput, PersonaUncheckedUpdateWithoutTransaccionInput>
  }

  export type PersonaUpdateWithoutTransaccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUpdateManyWithoutProveedorNestedInput
    proforma?: ProformaUpdateManyWithoutClienteNestedInput
    obra?: ObraUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ruc?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    proveedor?: BoolFieldUpdateOperationsInput | boolean
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutProveedorNestedInput
    proforma?: ProformaUncheckedUpdateManyWithoutClienteNestedInput
    obra?: ObraUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ObraUpsertWithoutTransaccionInput = {
    update: XOR<ObraUpdateWithoutTransaccionInput, ObraUncheckedUpdateWithoutTransaccionInput>
    create: XOR<ObraCreateWithoutTransaccionInput, ObraUncheckedCreateWithoutTransaccionInput>
    where?: ObraWhereInput
  }

  export type ObraUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: ObraWhereInput
    data: XOR<ObraUpdateWithoutTransaccionInput, ObraUncheckedUpdateWithoutTransaccionInput>
  }

  export type ObraUpdateWithoutTransaccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type transaccion_elementosUpsertWithWhereUniqueWithoutTransaccionInput = {
    where: transaccion_elementosWhereUniqueInput
    update: XOR<transaccion_elementosUpdateWithoutTransaccionInput, transaccion_elementosUncheckedUpdateWithoutTransaccionInput>
    create: XOR<transaccion_elementosCreateWithoutTransaccionInput, transaccion_elementosUncheckedCreateWithoutTransaccionInput>
  }

  export type transaccion_elementosUpdateWithWhereUniqueWithoutTransaccionInput = {
    where: transaccion_elementosWhereUniqueInput
    data: XOR<transaccion_elementosUpdateWithoutTransaccionInput, transaccion_elementosUncheckedUpdateWithoutTransaccionInput>
  }

  export type transaccion_elementosUpdateManyWithWhereWithoutTransaccionInput = {
    where: transaccion_elementosScalarWhereInput
    data: XOR<transaccion_elementosUpdateManyMutationInput, transaccion_elementosUncheckedUpdateManyWithoutTransaccionInput>
  }

  export type PedidoUpsertWithWhereUniqueWithoutTransaccionInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutTransaccionInput, PedidoUncheckedUpdateWithoutTransaccionInput>
    create: XOR<PedidoCreateWithoutTransaccionInput, PedidoUncheckedCreateWithoutTransaccionInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutTransaccionInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutTransaccionInput, PedidoUncheckedUpdateWithoutTransaccionInput>
  }

  export type PedidoUpdateManyWithWhereWithoutTransaccionInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutTransaccionInput>
  }

  export type CompraUpsertWithoutTransaccionInput = {
    update: XOR<CompraUpdateWithoutTransaccionInput, CompraUncheckedUpdateWithoutTransaccionInput>
    create: XOR<CompraCreateWithoutTransaccionInput, CompraUncheckedCreateWithoutTransaccionInput>
    where?: CompraWhereInput
  }

  export type CompraUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: CompraWhereInput
    data: XOR<CompraUpdateWithoutTransaccionInput, CompraUncheckedUpdateWithoutTransaccionInput>
  }

  export type CompraUpdateWithoutTransaccionInput = {
    fechaCredito?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type CompraUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaCredito?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type VentaUpsertWithoutTransaccionInput = {
    update: XOR<VentaUpdateWithoutTransaccionInput, VentaUncheckedUpdateWithoutTransaccionInput>
    create: XOR<VentaCreateWithoutTransaccionInput, VentaUncheckedCreateWithoutTransaccionInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutTransaccionInput, VentaUncheckedUpdateWithoutTransaccionInput>
  }

  export type VentaUpdateWithoutTransaccionInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type VentaUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DevolucionUpsertWithoutTransaccionInput = {
    update: XOR<DevolucionUpdateWithoutTransaccionInput, DevolucionUncheckedUpdateWithoutTransaccionInput>
    create: XOR<DevolucionCreateWithoutTransaccionInput, DevolucionUncheckedCreateWithoutTransaccionInput>
    where?: DevolucionWhereInput
  }

  export type DevolucionUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: DevolucionWhereInput
    data: XOR<DevolucionUpdateWithoutTransaccionInput, DevolucionUncheckedUpdateWithoutTransaccionInput>
  }

  export type DevolucionUpdateWithoutTransaccionInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DevolucionUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type TransaccionCreateWithoutElementosInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutElementosInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutElementosInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutElementosInput, TransaccionUncheckedCreateWithoutElementosInput>
  }

  export type InventarioCreateWithoutTransaccionInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    pedido?: pedido_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateWithoutTransaccionInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioCreateOrConnectWithoutTransaccionInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutTransaccionInput, InventarioUncheckedCreateWithoutTransaccionInput>
  }

  export type TransaccionUpsertWithoutElementosInput = {
    update: XOR<TransaccionUpdateWithoutElementosInput, TransaccionUncheckedUpdateWithoutElementosInput>
    create: XOR<TransaccionCreateWithoutElementosInput, TransaccionUncheckedCreateWithoutElementosInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutElementosInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutElementosInput, TransaccionUncheckedUpdateWithoutElementosInput>
  }

  export type TransaccionUpdateWithoutElementosInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutElementosInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type InventarioUpsertWithoutTransaccionInput = {
    update: XOR<InventarioUpdateWithoutTransaccionInput, InventarioUncheckedUpdateWithoutTransaccionInput>
    create: XOR<InventarioCreateWithoutTransaccionInput, InventarioUncheckedCreateWithoutTransaccionInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutTransaccionInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutTransaccionInput, InventarioUncheckedUpdateWithoutTransaccionInput>
  }

  export type InventarioUpdateWithoutTransaccionInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type TransaccionCreateWithoutCompraInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutCompraInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutCompraInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutCompraInput, TransaccionUncheckedCreateWithoutCompraInput>
  }

  export type TransaccionUpsertWithoutCompraInput = {
    update: XOR<TransaccionUpdateWithoutCompraInput, TransaccionUncheckedUpdateWithoutCompraInput>
    create: XOR<TransaccionCreateWithoutCompraInput, TransaccionUncheckedCreateWithoutCompraInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutCompraInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutCompraInput, TransaccionUncheckedUpdateWithoutCompraInput>
  }

  export type TransaccionUpdateWithoutCompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionCreateWithoutVentaInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutVentaInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutVentaInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutVentaInput, TransaccionUncheckedCreateWithoutVentaInput>
  }

  export type TransaccionUpsertWithoutVentaInput = {
    update: XOR<TransaccionUpdateWithoutVentaInput, TransaccionUncheckedUpdateWithoutVentaInput>
    create: XOR<TransaccionCreateWithoutVentaInput, TransaccionUncheckedCreateWithoutVentaInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutVentaInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutVentaInput, TransaccionUncheckedUpdateWithoutVentaInput>
  }

  export type TransaccionUpdateWithoutVentaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionCreateWithoutDevolucionInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutDevolucionInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutDevolucionInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutDevolucionInput, TransaccionUncheckedCreateWithoutDevolucionInput>
  }

  export type TransaccionUpsertWithoutDevolucionInput = {
    update: XOR<TransaccionUpdateWithoutDevolucionInput, TransaccionUncheckedUpdateWithoutDevolucionInput>
    create: XOR<TransaccionCreateWithoutDevolucionInput, TransaccionUncheckedCreateWithoutDevolucionInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutDevolucionInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutDevolucionInput, TransaccionUncheckedUpdateWithoutDevolucionInput>
  }

  export type TransaccionUpdateWithoutDevolucionInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutDevolucionInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type DiaCreateWithoutHorariosInput = {
    nombre: $Enums.DiasSemana
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DiaUncheckedCreateWithoutHorariosInput = {
    id?: number
    nombre: $Enums.DiasSemana
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type DiaCreateOrConnectWithoutHorariosInput = {
    where: DiaWhereUniqueInput
    create: XOR<DiaCreateWithoutHorariosInput, DiaUncheckedCreateWithoutHorariosInput>
  }

  export type proceso_empleadosCreateWithoutHorariosInput = {
    horas: number
    sueldo: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutEmpleadosInput
    empleado: EmpleadoCreateNestedOneWithoutProcesoInput
  }

  export type proceso_empleadosUncheckedCreateWithoutHorariosInput = {
    id?: number
    horas: number
    sueldo: number
    id_proceso: number
    id_empleado: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_empleadosCreateOrConnectWithoutHorariosInput = {
    where: proceso_empleadosWhereUniqueInput
    create: XOR<proceso_empleadosCreateWithoutHorariosInput, proceso_empleadosUncheckedCreateWithoutHorariosInput>
  }

  export type proceso_herramientasCreateWithoutHorariosInput = {
    horas: number
    descuento: number
    precio: number
    estadoEliminado?: $Enums.EstadoEliminado
    proceso: ProcesoCreateNestedOneWithoutHerramientasInput
    herramienta: InventarioCreateNestedOneWithoutProceso_herramientasInput
  }

  export type proceso_herramientasUncheckedCreateWithoutHorariosInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    id_herramienta: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_herramientasCreateOrConnectWithoutHorariosInput = {
    where: proceso_herramientasWhereUniqueInput
    create: XOR<proceso_herramientasCreateWithoutHorariosInput, proceso_herramientasUncheckedCreateWithoutHorariosInput>
  }

  export type DiaUpsertWithWhereUniqueWithoutHorariosInput = {
    where: DiaWhereUniqueInput
    update: XOR<DiaUpdateWithoutHorariosInput, DiaUncheckedUpdateWithoutHorariosInput>
    create: XOR<DiaCreateWithoutHorariosInput, DiaUncheckedCreateWithoutHorariosInput>
  }

  export type DiaUpdateWithWhereUniqueWithoutHorariosInput = {
    where: DiaWhereUniqueInput
    data: XOR<DiaUpdateWithoutHorariosInput, DiaUncheckedUpdateWithoutHorariosInput>
  }

  export type DiaUpdateManyWithWhereWithoutHorariosInput = {
    where: DiaScalarWhereInput
    data: XOR<DiaUpdateManyMutationInput, DiaUncheckedUpdateManyWithoutHorariosInput>
  }

  export type DiaScalarWhereInput = {
    AND?: DiaScalarWhereInput | DiaScalarWhereInput[]
    OR?: DiaScalarWhereInput[]
    NOT?: DiaScalarWhereInput | DiaScalarWhereInput[]
    id?: IntFilter<"Dia"> | number
    nombre?: EnumDiasSemanaFilter<"Dia"> | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFilter<"Dia"> | $Enums.EstadoEliminado
  }

  export type proceso_empleadosUpsertWithWhereUniqueWithoutHorariosInput = {
    where: proceso_empleadosWhereUniqueInput
    update: XOR<proceso_empleadosUpdateWithoutHorariosInput, proceso_empleadosUncheckedUpdateWithoutHorariosInput>
    create: XOR<proceso_empleadosCreateWithoutHorariosInput, proceso_empleadosUncheckedCreateWithoutHorariosInput>
  }

  export type proceso_empleadosUpdateWithWhereUniqueWithoutHorariosInput = {
    where: proceso_empleadosWhereUniqueInput
    data: XOR<proceso_empleadosUpdateWithoutHorariosInput, proceso_empleadosUncheckedUpdateWithoutHorariosInput>
  }

  export type proceso_empleadosUpdateManyWithWhereWithoutHorariosInput = {
    where: proceso_empleadosScalarWhereInput
    data: XOR<proceso_empleadosUpdateManyMutationInput, proceso_empleadosUncheckedUpdateManyWithoutHorariosInput>
  }

  export type proceso_herramientasUpsertWithWhereUniqueWithoutHorariosInput = {
    where: proceso_herramientasWhereUniqueInput
    update: XOR<proceso_herramientasUpdateWithoutHorariosInput, proceso_herramientasUncheckedUpdateWithoutHorariosInput>
    create: XOR<proceso_herramientasCreateWithoutHorariosInput, proceso_herramientasUncheckedCreateWithoutHorariosInput>
  }

  export type proceso_herramientasUpdateWithWhereUniqueWithoutHorariosInput = {
    where: proceso_herramientasWhereUniqueInput
    data: XOR<proceso_herramientasUpdateWithoutHorariosInput, proceso_herramientasUncheckedUpdateWithoutHorariosInput>
  }

  export type proceso_herramientasUpdateManyWithWhereWithoutHorariosInput = {
    where: proceso_herramientasScalarWhereInput
    data: XOR<proceso_herramientasUpdateManyMutationInput, proceso_herramientasUncheckedUpdateManyWithoutHorariosInput>
  }

  export type HorarioCreateWithoutDiasInput = {
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    proceso_empleados?: proceso_empleadosCreateNestedManyWithoutHorariosInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHorariosInput
  }

  export type HorarioUncheckedCreateWithoutDiasInput = {
    id?: number
    hora_inicio: Date | string
    hora_final: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    proceso_empleados?: proceso_empleadosUncheckedCreateNestedManyWithoutHorariosInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type HorarioCreateOrConnectWithoutDiasInput = {
    where: HorarioWhereUniqueInput
    create: XOR<HorarioCreateWithoutDiasInput, HorarioUncheckedCreateWithoutDiasInput>
  }

  export type HorarioUpsertWithWhereUniqueWithoutDiasInput = {
    where: HorarioWhereUniqueInput
    update: XOR<HorarioUpdateWithoutDiasInput, HorarioUncheckedUpdateWithoutDiasInput>
    create: XOR<HorarioCreateWithoutDiasInput, HorarioUncheckedCreateWithoutDiasInput>
  }

  export type HorarioUpdateWithWhereUniqueWithoutDiasInput = {
    where: HorarioWhereUniqueInput
    data: XOR<HorarioUpdateWithoutDiasInput, HorarioUncheckedUpdateWithoutDiasInput>
  }

  export type HorarioUpdateManyWithWhereWithoutDiasInput = {
    where: HorarioScalarWhereInput
    data: XOR<HorarioUpdateManyMutationInput, HorarioUncheckedUpdateManyWithoutDiasInput>
  }

  export type ObraCreateWithoutPedidoInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    cliente: PersonaCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    tarea?: TareaCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutPedidoInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    tarea?: TareaUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutPedidoInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutPedidoInput, ObraUncheckedCreateWithoutPedidoInput>
  }

  export type TransaccionCreateWithoutPedidoInput = {
    fecha?: Date | string
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    empleado: EmpleadoCreateNestedOneWithoutTransaccionInput
    persona: PersonaCreateNestedOneWithoutTransaccionInput
    obra?: ObraCreateNestedOneWithoutTransaccionInput
    elementos?: transaccion_elementosCreateNestedManyWithoutTransaccionInput
    compra?: CompraCreateNestedOneWithoutTransaccionInput
    venta?: VentaCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionUncheckedCreateWithoutPedidoInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    elementos?: transaccion_elementosUncheckedCreateNestedManyWithoutTransaccionInput
    compra?: CompraUncheckedCreateNestedOneWithoutTransaccionInput
    venta?: VentaUncheckedCreateNestedOneWithoutTransaccionInput
    devolucion?: DevolucionUncheckedCreateNestedOneWithoutTransaccionInput
  }

  export type TransaccionCreateOrConnectWithoutPedidoInput = {
    where: TransaccionWhereUniqueInput
    create: XOR<TransaccionCreateWithoutPedidoInput, TransaccionUncheckedCreateWithoutPedidoInput>
  }

  export type pedido_elementosCreateWithoutPedidoInput = {
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
    elemento: InventarioCreateNestedOneWithoutPedidoInput
    empleado: EmpleadoCreateNestedOneWithoutPedidoInput
  }

  export type pedido_elementosUncheckedCreateWithoutPedidoInput = {
    id_elemento: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosCreateOrConnectWithoutPedidoInput = {
    where: pedido_elementosWhereUniqueInput
    create: XOR<pedido_elementosCreateWithoutPedidoInput, pedido_elementosUncheckedCreateWithoutPedidoInput>
  }

  export type pedido_elementosCreateManyPedidoInputEnvelope = {
    data: pedido_elementosCreateManyPedidoInput | pedido_elementosCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type ObraUpsertWithoutPedidoInput = {
    update: XOR<ObraUpdateWithoutPedidoInput, ObraUncheckedUpdateWithoutPedidoInput>
    create: XOR<ObraCreateWithoutPedidoInput, ObraUncheckedCreateWithoutPedidoInput>
    where?: ObraWhereInput
  }

  export type ObraUpdateToOneWithWhereWithoutPedidoInput = {
    where?: ObraWhereInput
    data: XOR<ObraUpdateWithoutPedidoInput, ObraUncheckedUpdateWithoutPedidoInput>
  }

  export type ObraUpdateWithoutPedidoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type TransaccionUpsertWithoutPedidoInput = {
    update: XOR<TransaccionUpdateWithoutPedidoInput, TransaccionUncheckedUpdateWithoutPedidoInput>
    create: XOR<TransaccionCreateWithoutPedidoInput, TransaccionUncheckedCreateWithoutPedidoInput>
    where?: TransaccionWhereInput
  }

  export type TransaccionUpdateToOneWithWhereWithoutPedidoInput = {
    where?: TransaccionWhereInput
    data: XOR<TransaccionUpdateWithoutPedidoInput, TransaccionUncheckedUpdateWithoutPedidoInput>
  }

  export type TransaccionUpdateWithoutPedidoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type pedido_elementosUpsertWithWhereUniqueWithoutPedidoInput = {
    where: pedido_elementosWhereUniqueInput
    update: XOR<pedido_elementosUpdateWithoutPedidoInput, pedido_elementosUncheckedUpdateWithoutPedidoInput>
    create: XOR<pedido_elementosCreateWithoutPedidoInput, pedido_elementosUncheckedCreateWithoutPedidoInput>
  }

  export type pedido_elementosUpdateWithWhereUniqueWithoutPedidoInput = {
    where: pedido_elementosWhereUniqueInput
    data: XOR<pedido_elementosUpdateWithoutPedidoInput, pedido_elementosUncheckedUpdateWithoutPedidoInput>
  }

  export type pedido_elementosUpdateManyWithWhereWithoutPedidoInput = {
    where: pedido_elementosScalarWhereInput
    data: XOR<pedido_elementosUpdateManyMutationInput, pedido_elementosUncheckedUpdateManyWithoutPedidoInput>
  }

  export type EmpleadoCreateWithoutTareasAsignadasInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutTareasAsignadasInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutTareasAsignadasInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutTareasAsignadasInput, EmpleadoUncheckedCreateWithoutTareasAsignadasInput>
  }

  export type EmpleadoCreateWithoutTareasRecibidasInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
  }

  export type EmpleadoUncheckedCreateWithoutTareasRecibidasInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
  }

  export type EmpleadoCreateOrConnectWithoutTareasRecibidasInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutTareasRecibidasInput, EmpleadoUncheckedCreateWithoutTareasRecibidasInput>
  }

  export type UbicacionCreateWithoutTareaInput = {
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutUbicacionInput
    inventario?: InventarioCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUncheckedCreateWithoutTareaInput = {
    id?: number
    nombre: string
    descripcion: string
    id_punto: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    inventario?: InventarioUncheckedCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionCreateOrConnectWithoutTareaInput = {
    where: UbicacionWhereUniqueInput
    create: XOR<UbicacionCreateWithoutTareaInput, UbicacionUncheckedCreateWithoutTareaInput>
  }

  export type ObraCreateWithoutTareaInput = {
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    punto: PuntoCreateNestedOneWithoutObraInput
    cliente: PersonaCreateNestedOneWithoutObraInput
    proforma: ProformaCreateNestedOneWithoutObraInput
    proceso?: ProcesoCreateNestedManyWithoutObraInput
    transaccion?: TransaccionCreateNestedManyWithoutObraInput
    pedido?: PedidoCreateNestedManyWithoutObraInput
  }

  export type ObraUncheckedCreateWithoutTareaInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    proceso?: ProcesoUncheckedCreateNestedManyWithoutObraInput
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutObraInput
    pedido?: PedidoUncheckedCreateNestedManyWithoutObraInput
  }

  export type ObraCreateOrConnectWithoutTareaInput = {
    where: ObraWhereUniqueInput
    create: XOR<ObraCreateWithoutTareaInput, ObraUncheckedCreateWithoutTareaInput>
  }

  export type EmpleadoUpsertWithoutTareasAsignadasInput = {
    update: XOR<EmpleadoUpdateWithoutTareasAsignadasInput, EmpleadoUncheckedUpdateWithoutTareasAsignadasInput>
    create: XOR<EmpleadoCreateWithoutTareasAsignadasInput, EmpleadoUncheckedCreateWithoutTareasAsignadasInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutTareasAsignadasInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutTareasAsignadasInput, EmpleadoUncheckedUpdateWithoutTareasAsignadasInput>
  }

  export type EmpleadoUpdateWithoutTareasAsignadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutTareasAsignadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUpsertWithoutTareasRecibidasInput = {
    update: XOR<EmpleadoUpdateWithoutTareasRecibidasInput, EmpleadoUncheckedUpdateWithoutTareasRecibidasInput>
    create: XOR<EmpleadoCreateWithoutTareasRecibidasInput, EmpleadoUncheckedCreateWithoutTareasRecibidasInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutTareasRecibidasInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutTareasRecibidasInput, EmpleadoUncheckedUpdateWithoutTareasRecibidasInput>
  }

  export type EmpleadoUpdateWithoutTareasRecibidasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutTareasRecibidasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
  }

  export type UbicacionUpsertWithoutTareaInput = {
    update: XOR<UbicacionUpdateWithoutTareaInput, UbicacionUncheckedUpdateWithoutTareaInput>
    create: XOR<UbicacionCreateWithoutTareaInput, UbicacionUncheckedCreateWithoutTareaInput>
    where?: UbicacionWhereInput
  }

  export type UbicacionUpdateToOneWithWhereWithoutTareaInput = {
    where?: UbicacionWhereInput
    data: XOR<UbicacionUpdateWithoutTareaInput, UbicacionUncheckedUpdateWithoutTareaInput>
  }

  export type UbicacionUpdateWithoutTareaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutUbicacionNestedInput
    inventario?: InventarioUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionUncheckedUpdateWithoutTareaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_punto?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutUbicacionNestedInput
  }

  export type ObraUpsertWithoutTareaInput = {
    update: XOR<ObraUpdateWithoutTareaInput, ObraUncheckedUpdateWithoutTareaInput>
    create: XOR<ObraCreateWithoutTareaInput, ObraUncheckedCreateWithoutTareaInput>
    where?: ObraWhereInput
  }

  export type ObraUpdateToOneWithWhereWithoutTareaInput = {
    where?: ObraWhereInput
    data: XOR<ObraUpdateWithoutTareaInput, ObraUncheckedUpdateWithoutTareaInput>
  }

  export type ObraUpdateWithoutTareaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutTareaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
  }

  export type PedidoCreateWithoutElementoInput = {
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    obra: ObraCreateNestedOneWithoutPedidoInput
    transaccion: TransaccionCreateNestedOneWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutElementoInput = {
    id?: number
    id_obra: number
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PedidoCreateOrConnectWithoutElementoInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutElementoInput, PedidoUncheckedCreateWithoutElementoInput>
  }

  export type InventarioCreateWithoutPedidoInput = {
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    categoria: CategoriaCreateNestedOneWithoutInventarioInput
    ubicacion: UbicacionCreateNestedOneWithoutInventarioInput
    proveedor: PersonaCreateNestedOneWithoutInventarioInput
    transaccion?: transaccion_elementosCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioCreateNestedManyWithoutElementoInput
  }

  export type InventarioUncheckedCreateWithoutPedidoInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: transaccion_elementosUncheckedCreateNestedManyWithoutElementoInput
    proceso_herramientas?: proceso_herramientasUncheckedCreateNestedManyWithoutHerramientaInput
    proceso_inventario?: proceso_inventarioUncheckedCreateNestedManyWithoutElementoInput
  }

  export type InventarioCreateOrConnectWithoutPedidoInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutPedidoInput, InventarioUncheckedCreateWithoutPedidoInput>
  }

  export type EmpleadoCreateWithoutPedidoInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutPedidoInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    ubicacion?: ubicacion_empleadoUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutPedidoInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutPedidoInput, EmpleadoUncheckedCreateWithoutPedidoInput>
  }

  export type PedidoUpsertWithoutElementoInput = {
    update: XOR<PedidoUpdateWithoutElementoInput, PedidoUncheckedUpdateWithoutElementoInput>
    create: XOR<PedidoCreateWithoutElementoInput, PedidoUncheckedCreateWithoutElementoInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutElementoInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutElementoInput, PedidoUncheckedUpdateWithoutElementoInput>
  }

  export type PedidoUpdateWithoutElementoInput = {
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUpdateOneRequiredWithoutPedidoNestedInput
    transaccion?: TransaccionUpdateOneRequiredWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutElementoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_obra?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InventarioUpsertWithoutPedidoInput = {
    update: XOR<InventarioUpdateWithoutPedidoInput, InventarioUncheckedUpdateWithoutPedidoInput>
    create: XOR<InventarioCreateWithoutPedidoInput, InventarioUncheckedCreateWithoutPedidoInput>
    where?: InventarioWhereInput
  }

  export type InventarioUpdateToOneWithWhereWithoutPedidoInput = {
    where?: InventarioWhereInput
    data: XOR<InventarioUpdateWithoutPedidoInput, InventarioUncheckedUpdateWithoutPedidoInput>
  }

  export type InventarioUpdateWithoutPedidoInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type EmpleadoUpsertWithoutPedidoInput = {
    update: XOR<EmpleadoUpdateWithoutPedidoInput, EmpleadoUncheckedUpdateWithoutPedidoInput>
    create: XOR<EmpleadoCreateWithoutPedidoInput, EmpleadoUncheckedCreateWithoutPedidoInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutPedidoInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutPedidoInput, EmpleadoUncheckedUpdateWithoutPedidoInput>
  }

  export type EmpleadoUpdateWithoutPedidoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type PuntoCreateWithoutEmpleadoInput = {
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionCreateNestedManyWithoutPuntoInput
    proforma?: ProformaCreateNestedManyWithoutPuntoInput
    obra?: ObraCreateNestedManyWithoutPuntoInput
  }

  export type PuntoUncheckedCreateWithoutEmpleadoInput = {
    id?: number
    lat: Decimal | DecimalJsLike | number | string
    lng: Decimal | DecimalJsLike | number | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    ubicacion?: UbicacionUncheckedCreateNestedManyWithoutPuntoInput
    proforma?: ProformaUncheckedCreateNestedManyWithoutPuntoInput
    obra?: ObraUncheckedCreateNestedManyWithoutPuntoInput
  }

  export type PuntoCreateOrConnectWithoutEmpleadoInput = {
    where: PuntoWhereUniqueInput
    create: XOR<PuntoCreateWithoutEmpleadoInput, PuntoUncheckedCreateWithoutEmpleadoInput>
  }

  export type EmpleadoCreateWithoutUbicacionInput = {
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    posicion: PosicionCreateNestedOneWithoutEmpleadoInput
    transaccion?: TransaccionCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoUncheckedCreateWithoutUbicacionInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    id_posicion: number
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
    transaccion?: TransaccionUncheckedCreateNestedManyWithoutEmpleadoInput
    pedido?: pedido_elementosUncheckedCreateNestedManyWithoutEmpleadoInput
    proceso?: proceso_empleadosUncheckedCreateNestedManyWithoutEmpleadoInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutDestinatarioInput
    tareasAsignadas?: TareaUncheckedCreateNestedManyWithoutAsignadorInput
    tareasRecibidas?: TareaUncheckedCreateNestedManyWithoutAsignadoInput
  }

  export type EmpleadoCreateOrConnectWithoutUbicacionInput = {
    where: EmpleadoWhereUniqueInput
    create: XOR<EmpleadoCreateWithoutUbicacionInput, EmpleadoUncheckedCreateWithoutUbicacionInput>
  }

  export type PuntoUpsertWithoutEmpleadoInput = {
    update: XOR<PuntoUpdateWithoutEmpleadoInput, PuntoUncheckedUpdateWithoutEmpleadoInput>
    create: XOR<PuntoCreateWithoutEmpleadoInput, PuntoUncheckedCreateWithoutEmpleadoInput>
    where?: PuntoWhereInput
  }

  export type PuntoUpdateToOneWithWhereWithoutEmpleadoInput = {
    where?: PuntoWhereInput
    data: XOR<PuntoUpdateWithoutEmpleadoInput, PuntoUncheckedUpdateWithoutEmpleadoInput>
  }

  export type PuntoUpdateWithoutEmpleadoInput = {
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUpdateManyWithoutPuntoNestedInput
    proforma?: ProformaUpdateManyWithoutPuntoNestedInput
    obra?: ObraUpdateManyWithoutPuntoNestedInput
  }

  export type PuntoUncheckedUpdateWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    lat?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lng?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUncheckedUpdateManyWithoutPuntoNestedInput
    proforma?: ProformaUncheckedUpdateManyWithoutPuntoNestedInput
    obra?: ObraUncheckedUpdateManyWithoutPuntoNestedInput
  }

  export type EmpleadoUpsertWithoutUbicacionInput = {
    update: XOR<EmpleadoUpdateWithoutUbicacionInput, EmpleadoUncheckedUpdateWithoutUbicacionInput>
    create: XOR<EmpleadoCreateWithoutUbicacionInput, EmpleadoUncheckedCreateWithoutUbicacionInput>
    where?: EmpleadoWhereInput
  }

  export type EmpleadoUpdateToOneWithWhereWithoutUbicacionInput = {
    where?: EmpleadoWhereInput
    data: XOR<EmpleadoUpdateWithoutUbicacionInput, EmpleadoUncheckedUpdateWithoutUbicacionInput>
  }

  export type EmpleadoUpdateWithoutUbicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    posicion?: PosicionUpdateOneRequiredWithoutEmpleadoNestedInput
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutUbicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    id_posicion?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type UbicacionCreateManyPuntoInput = {
    id?: number
    nombre: string
    descripcion: string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ProformaCreateManyPuntoInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_cliente: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ObraCreateManyPuntoInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_cliente: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ubicacion_empleadoCreateManyPuntoInput = {
    id?: number
    id_empleado: number
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type UbicacionUpdateWithoutPuntoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUpdateManyWithoutUbicacionNestedInput
    tarea?: TareaUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionUncheckedUpdateWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inventario?: InventarioUncheckedUpdateManyWithoutUbicacionNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionUncheckedUpdateManyWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProformaUpdateWithoutPuntoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cliente?: PersonaUpdateOneRequiredWithoutProformaNestedInput
    obra?: ObraUpdateOneWithoutProformaNestedInput
    procesos?: ProcesoUpdateManyWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUncheckedUpdateOneWithoutProformaNestedInput
    procesos?: ProcesoUncheckedUpdateManyWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateManyWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ObraUpdateWithoutPuntoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cliente?: PersonaUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateManyWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_cliente?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ubicacion_empleadoUpdateWithoutPuntoInput = {
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    empleado?: EmpleadoUpdateOneRequiredWithoutUbicacionNestedInput
  }

  export type ubicacion_empleadoUncheckedUpdateWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUncheckedUpdateManyWithoutPuntoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type InventarioCreateManyUbicacionInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateManyUbicacionInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_asignado?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type InventarioUpdateWithoutUbicacionInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateWithoutUbicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateManyWithoutUbicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUpdateWithoutUbicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    asignador?: EmpleadoUpdateOneRequiredWithoutTareasAsignadasNestedInput
    asignado?: EmpleadoUpdateOneWithoutTareasRecibidasNestedInput
    obra?: ObraUpdateOneWithoutTareaNestedInput
  }

  export type TareaUncheckedUpdateWithoutUbicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUncheckedUpdateManyWithoutUbicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InventarioCreateManyCategoriaInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_ubicacion: number
    id_proveedor: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type InventarioUpdateWithoutCategoriaInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    id_proveedor?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InventarioCreateManyProveedorInput = {
    id?: number
    precio: Decimal | DecimalJsLike | number | string
    descuento?: Decimal | DecimalJsLike | number | string
    cantidad?: number | null
    id_categoria: number
    id_ubicacion: number
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoHerramientas | null
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ProformaCreateManyClienteInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ObraCreateManyClienteInput = {
    id?: number
    nombre: string
    tiempo_esperado: Date | string
    porcentaje_venta: Decimal | DecimalJsLike | number | string
    id_punto: number
    id_proforma: number
    estado?: $Enums.EstadoObra
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TransaccionCreateManyPersonaInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type InventarioUpdateWithoutProveedorInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    categoria?: CategoriaUpdateOneRequiredWithoutInventarioNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutInventarioNestedInput
    transaccion?: transaccion_elementosUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: transaccion_elementosUncheckedUpdateManyWithoutElementoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutElementoNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHerramientaNestedInput
    proceso_inventario?: proceso_inventarioUncheckedUpdateManyWithoutElementoNestedInput
  }

  export type InventarioUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: NullableFloatFieldUpdateOperationsInput | number | null
    id_categoria?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: NullableEnumEstadoHerramientasFieldUpdateOperationsInput | $Enums.EstadoHerramientas | null
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProformaUpdateWithoutClienteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutProformaNestedInput
    obra?: ObraUpdateOneWithoutProformaNestedInput
    procesos?: ProcesoUpdateManyWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUncheckedUpdateOneWithoutProformaNestedInput
    procesos?: ProcesoUncheckedUpdateManyWithoutProformaNestedInput
  }

  export type ProformaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ObraUpdateWithoutClienteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    punto?: PuntoUpdateOneRequiredWithoutObraNestedInput
    proforma?: ProformaUpdateOneRequiredWithoutObraNestedInput
    proceso?: ProcesoUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUpdateManyWithoutObraNestedInput
    pedido?: PedidoUpdateManyWithoutObraNestedInput
    tarea?: TareaUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proceso?: ProcesoUncheckedUpdateManyWithoutObraNestedInput
    transaccion?: TransaccionUncheckedUpdateManyWithoutObraNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutObraNestedInput
    tarea?: TareaUncheckedUpdateManyWithoutObraNestedInput
  }

  export type ObraUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tiempo_esperado?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    id_punto?: IntFieldUpdateOperationsInput | number
    id_proforma?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoObraFieldUpdateOperationsInput | $Enums.EstadoObra
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransaccionUpdateWithoutPersonaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutPersonaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateManyWithoutPersonaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaccion_elementosCreateManyElementoInput = {
    id?: number
    id_transaccion: number
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosCreateManyElementoInput = {
    id_pedido: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_herramientasCreateManyHerramientaInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_proceso: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_inventarioCreateManyElementoInput = {
    id?: number
    cantidad: number
    descuento: number
    precio: number
    id_proceso: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type transaccion_elementosUpdateWithoutElementoInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    transaccion?: TransaccionUpdateOneRequiredWithoutElementosNestedInput
  }

  export type transaccion_elementosUncheckedUpdateWithoutElementoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type transaccion_elementosUncheckedUpdateManyWithoutElementoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosUpdateWithoutElementoInput = {
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    pedido?: PedidoUpdateOneRequiredWithoutElementoNestedInput
    empleado?: EmpleadoUpdateOneRequiredWithoutPedidoNestedInput
  }

  export type pedido_elementosUncheckedUpdateWithoutElementoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosUncheckedUpdateManyWithoutElementoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_herramientasUpdateWithoutHerramientaInput = {
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutHerramientasNestedInput
    horarios?: HorarioUpdateManyWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasUncheckedUpdateWithoutHerramientaInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasUncheckedUpdateManyWithoutHerramientaInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioUpdateWithoutElementoInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutInventarioNestedInput
  }

  export type proceso_inventarioUncheckedUpdateWithoutElementoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioUncheckedUpdateManyWithoutElementoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type PosicionUpdateWithoutPermisosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateManyWithoutPosicionNestedInput
  }

  export type PosicionUncheckedUpdateWithoutPermisosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUncheckedUpdateManyWithoutPosicionNestedInput
  }

  export type PosicionUncheckedUpdateManyWithoutPermisosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EmpleadoCreateManyPosicionInput = {
    id?: number
    nombre: string
    cedula: string
    mail: string
    telefono: string
    sueldo: Decimal | DecimalJsLike | number | string
    password: string
    latActual?: Decimal | DecimalJsLike | number | string | null
    lngActual?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: Date | string
    estado: $Enums.EstadoTrabajador
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PermisoUpdateWithoutPosicionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoUncheckedUpdateWithoutPosicionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermisoUncheckedUpdateManyWithoutPosicionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    categoria?: EnumCategoriasPermisoFieldUpdateOperationsInput | $Enums.CategoriasPermiso
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EmpleadoUpdateWithoutPosicionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateWithoutPosicionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUncheckedUpdateManyWithoutEmpleadoNestedInput
    pedido?: pedido_elementosUncheckedUpdateManyWithoutEmpleadoNestedInput
    proceso?: proceso_empleadosUncheckedUpdateManyWithoutEmpleadoNestedInput
    ubicacion?: ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutDestinatarioNestedInput
    tareasAsignadas?: TareaUncheckedUpdateManyWithoutAsignadorNestedInput
    tareasRecibidas?: TareaUncheckedUpdateManyWithoutAsignadoNestedInput
  }

  export type EmpleadoUncheckedUpdateManyWithoutPosicionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    mail?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    sueldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    password?: StringFieldUpdateOperationsInput | string
    latActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lngActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransaccionCreateManyEmpleadoInput = {
    id?: number
    fecha?: Date | string
    id_persona: number
    id_obra?: number | null
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type pedido_elementosCreateManyEmpleadoInput = {
    id_pedido: number
    id_elemento: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_empleadosCreateManyEmpleadoInput = {
    id?: number
    horas: number
    sueldo: number
    id_proceso: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoCreateManyEmpleadoInput = {
    id?: number
    id_punto: number
    estado: $Enums.EstadoTrabajador
    fecha?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type MensajeCreateManyRemitenteInput = {
    id?: number
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    id_destinario?: number
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type MensajeCreateManyDestinatarioInput = {
    id?: number
    texto: string
    titulo: string
    fecha?: Date | string
    tipo?: $Enums.CategoriaMensajes
    estadoEliminado?: $Enums.EstadoEliminado
    estado?: $Enums.EstadoMensaje
    id_remitente?: number
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateManyAsignadorInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignado?: number | null
    id_ubicacion?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateManyAsignadoInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_ubicacion?: number | null
    id_obra?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TransaccionUpdateWithoutEmpleadoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    obra?: ObraUpdateOneWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateManyWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_persona?: IntFieldUpdateOperationsInput | number
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pedido_elementosUpdateWithoutEmpleadoInput = {
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    pedido?: PedidoUpdateOneRequiredWithoutElementoNestedInput
    elemento?: InventarioUpdateOneRequiredWithoutPedidoNestedInput
  }

  export type pedido_elementosUncheckedUpdateWithoutEmpleadoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosUncheckedUpdateManyWithoutEmpleadoInput = {
    id_pedido?: IntFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_empleadosUpdateWithoutEmpleadoInput = {
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutEmpleadosNestedInput
    horarios?: HorarioUpdateManyWithoutProceso_empleadosNestedInput
  }

  export type proceso_empleadosUncheckedUpdateWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutProceso_empleadosNestedInput
  }

  export type proceso_empleadosUncheckedUpdateManyWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUpdateWithoutEmpleadoInput = {
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    punto?: PuntoUpdateOneRequiredWithoutEmpleadoNestedInput
  }

  export type ubicacion_empleadoUncheckedUpdateWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_punto?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ubicacion_empleadoUncheckedUpdateManyWithoutEmpleadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_punto?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTrabajadorFieldUpdateOperationsInput | $Enums.EstadoTrabajador
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type MensajeUpdateWithoutRemitenteInput = {
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    destinatario?: EmpleadoUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajeUncheckedUpdateWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    id_destinario?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MensajeUncheckedUpdateManyWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    id_destinario?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MensajeUpdateWithoutDestinatarioInput = {
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remitente?: EmpleadoUpdateOneRequiredWithoutMensajesEnviadosNestedInput
  }

  export type MensajeUncheckedUpdateWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    id_remitente?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MensajeUncheckedUpdateManyWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumCategoriaMensajesFieldUpdateOperationsInput | $Enums.CategoriaMensajes
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    estado?: EnumEstadoMensajeFieldUpdateOperationsInput | $Enums.EstadoMensaje
    id_remitente?: IntFieldUpdateOperationsInput | number
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUpdateWithoutAsignadorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    asignado?: EmpleadoUpdateOneWithoutTareasRecibidasNestedInput
    ubicacion?: UbicacionUpdateOneWithoutTareaNestedInput
    obra?: ObraUpdateOneWithoutTareaNestedInput
  }

  export type TareaUncheckedUpdateWithoutAsignadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUncheckedUpdateManyWithoutAsignadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUpdateWithoutAsignadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    asignador?: EmpleadoUpdateOneRequiredWithoutTareasAsignadasNestedInput
    ubicacion?: UbicacionUpdateOneWithoutTareaNestedInput
    obra?: ObraUpdateOneWithoutTareaNestedInput
  }

  export type TareaUncheckedUpdateWithoutAsignadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUncheckedUpdateManyWithoutAsignadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProcesoCreateManyProformaInput = {
    id?: number
    nombre: string
    descripcion: string
    id_obra?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ProcesoUpdateWithoutProformaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUpdateManyWithoutProcesoNestedInput
    obra?: ObraUpdateOneWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateWithoutProformaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUncheckedUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUncheckedUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUncheckedUpdateManyWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateManyWithoutProformaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_obra?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proceso_empleadosCreateManyProcesoInput = {
    id?: number
    horas: number
    sueldo: number
    id_empleado: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_herramientasCreateManyProcesoInput = {
    id?: number
    horas: number
    descuento: number
    precio: number
    id_herramienta: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_inventarioCreateManyProcesoInput = {
    id?: number
    cantidad: number
    descuento: number
    precio: number
    id_elemento: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type proceso_empleadosUpdateWithoutProcesoInput = {
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    empleado?: EmpleadoUpdateOneRequiredWithoutProcesoNestedInput
    horarios?: HorarioUpdateManyWithoutProceso_empleadosNestedInput
  }

  export type proceso_empleadosUncheckedUpdateWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutProceso_empleadosNestedInput
  }

  export type proceso_empleadosUncheckedUpdateManyWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_herramientasUpdateWithoutProcesoInput = {
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    herramienta?: InventarioUpdateOneRequiredWithoutProceso_herramientasNestedInput
    horarios?: HorarioUpdateManyWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasUncheckedUpdateWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_herramienta?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    horarios?: HorarioUncheckedUpdateManyWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasUncheckedUpdateManyWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_herramienta?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioUpdateWithoutProcesoInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    elemento?: InventarioUpdateOneRequiredWithoutProceso_inventarioNestedInput
  }

  export type proceso_inventarioUncheckedUpdateWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_inventarioUncheckedUpdateManyWithoutProcesoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_elemento?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type HorarioUpdateWithoutProceso_empleadosInput = {
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    dias?: DiaUpdateManyWithoutHorariosNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateWithoutProceso_empleadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    dias?: DiaUncheckedUpdateManyWithoutHorariosNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateManyWithoutProceso_empleadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type HorarioUpdateWithoutProceso_herramientasInput = {
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    dias?: DiaUpdateManyWithoutHorariosNestedInput
    proceso_empleados?: proceso_empleadosUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateWithoutProceso_herramientasInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    dias?: DiaUncheckedUpdateManyWithoutHorariosNestedInput
    proceso_empleados?: proceso_empleadosUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateManyWithoutProceso_herramientasInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type ProcesoCreateManyObraInput = {
    id?: number
    nombre: string
    descripcion: string
    id_proforma?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TransaccionCreateManyObraInput = {
    id?: number
    fecha?: Date | string
    id_empleado: number
    id_persona: number
    id_compra?: number | null
    id_venta?: number | null
    id_devolucion?: number | null
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type PedidoCreateManyObraInput = {
    id?: number
    id_transaccion: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type TareaCreateManyObraInput = {
    id?: number
    nombre: string
    descripcion: string
    estado?: $Enums.EstadoTarea
    id_asignador: number
    id_asignado?: number | null
    id_ubicacion?: number | null
    fecha_final: Date | string
    fecha_inicio?: Date | string
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type ProcesoUpdateWithoutObraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUpdateManyWithoutProcesoNestedInput
    proforma?: ProformaUpdateOneWithoutProcesosNestedInput
  }

  export type ProcesoUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleados?: proceso_empleadosUncheckedUpdateManyWithoutProcesoNestedInput
    herramientas?: proceso_herramientasUncheckedUpdateManyWithoutProcesoNestedInput
    inventario?: proceso_inventarioUncheckedUpdateManyWithoutProcesoNestedInput
  }

  export type ProcesoUncheckedUpdateManyWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    id_proforma?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TransaccionUpdateWithoutObraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empleado?: EmpleadoUpdateOneRequiredWithoutTransaccionNestedInput
    persona?: PersonaUpdateOneRequiredWithoutTransaccionNestedInput
    elementos?: transaccion_elementosUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elementos?: transaccion_elementosUncheckedUpdateManyWithoutTransaccionNestedInput
    pedido?: PedidoUncheckedUpdateManyWithoutTransaccionNestedInput
    compra?: CompraUncheckedUpdateOneWithoutTransaccionNestedInput
    venta?: VentaUncheckedUpdateOneWithoutTransaccionNestedInput
    devolucion?: DevolucionUncheckedUpdateOneWithoutTransaccionNestedInput
  }

  export type TransaccionUncheckedUpdateManyWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_empleado?: IntFieldUpdateOperationsInput | number
    id_persona?: IntFieldUpdateOperationsInput | number
    id_compra?: NullableIntFieldUpdateOperationsInput | number | null
    id_venta?: NullableIntFieldUpdateOperationsInput | number | null
    id_devolucion?: NullableIntFieldUpdateOperationsInput | number | null
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PedidoUpdateWithoutObraInput = {
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    transaccion?: TransaccionUpdateOneRequiredWithoutPedidoNestedInput
    elemento?: pedido_elementosUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elemento?: pedido_elementosUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_transaccion?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUpdateWithoutObraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    asignador?: EmpleadoUpdateOneRequiredWithoutTareasAsignadasNestedInput
    asignado?: EmpleadoUpdateOneWithoutTareasRecibidasNestedInput
    ubicacion?: UbicacionUpdateOneWithoutTareaNestedInput
  }

  export type TareaUncheckedUpdateWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TareaUncheckedUpdateManyWithoutObraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    id_asignador?: IntFieldUpdateOperationsInput | number
    id_asignado?: NullableIntFieldUpdateOperationsInput | number | null
    id_ubicacion?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_final?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaccion_elementosCreateManyTransaccionInput = {
    id?: number
    id_elementos: number
    cantidad: number
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type PedidoCreateManyTransaccionInput = {
    id?: number
    id_obra: number
    estadoEliminado?: $Enums.EstadoEliminado
    createdBy: number
    updatedBy?: number | null
    deletedBy?: number | null
    createdDate?: Date | string
    updatedDate?: Date | string
    deletedDate?: Date | string | null
  }

  export type transaccion_elementosUpdateWithoutTransaccionInput = {
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    elemento?: InventarioUpdateOneRequiredWithoutTransaccionNestedInput
  }

  export type transaccion_elementosUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_elementos?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type transaccion_elementosUncheckedUpdateManyWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_elementos?: IntFieldUpdateOperationsInput | number
    cantidad?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type PedidoUpdateWithoutTransaccionInput = {
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    obra?: ObraUpdateOneRequiredWithoutPedidoNestedInput
    elemento?: pedido_elementosUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_obra?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    elemento?: pedido_elementosUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_obra?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    createdBy?: IntFieldUpdateOperationsInput | number
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    deletedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdDate?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DiaUpdateWithoutHorariosInput = {
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DiaUncheckedUpdateWithoutHorariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type DiaUncheckedUpdateManyWithoutHorariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: EnumDiasSemanaFieldUpdateOperationsInput | $Enums.DiasSemana
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_empleadosUpdateWithoutHorariosInput = {
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutEmpleadosNestedInput
    empleado?: EmpleadoUpdateOneRequiredWithoutProcesoNestedInput
  }

  export type proceso_empleadosUncheckedUpdateWithoutHorariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_empleadosUncheckedUpdateManyWithoutHorariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    sueldo?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_herramientasUpdateWithoutHorariosInput = {
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso?: ProcesoUpdateOneRequiredWithoutHerramientasNestedInput
    herramienta?: InventarioUpdateOneRequiredWithoutProceso_herramientasNestedInput
  }

  export type proceso_herramientasUncheckedUpdateWithoutHorariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_herramienta?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type proceso_herramientasUncheckedUpdateManyWithoutHorariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    horas?: IntFieldUpdateOperationsInput | number
    descuento?: FloatFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_proceso?: IntFieldUpdateOperationsInput | number
    id_herramienta?: IntFieldUpdateOperationsInput | number
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type HorarioUpdateWithoutDiasInput = {
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso_empleados?: proceso_empleadosUpdateManyWithoutHorariosNestedInput
    proceso_herramientas?: proceso_herramientasUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateWithoutDiasInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    proceso_empleados?: proceso_empleadosUncheckedUpdateManyWithoutHorariosNestedInput
    proceso_herramientas?: proceso_herramientasUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type HorarioUncheckedUpdateManyWithoutDiasInput = {
    id?: IntFieldUpdateOperationsInput | number
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_final?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosCreateManyPedidoInput = {
    id_elemento: number
    id_empleado: number
    estado: $Enums.EstadoPedido
    estadoEliminado?: $Enums.EstadoEliminado
  }

  export type pedido_elementosUpdateWithoutPedidoInput = {
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
    elemento?: InventarioUpdateOneRequiredWithoutPedidoNestedInput
    empleado?: EmpleadoUpdateOneRequiredWithoutPedidoNestedInput
  }

  export type pedido_elementosUncheckedUpdateWithoutPedidoInput = {
    id_elemento?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }

  export type pedido_elementosUncheckedUpdateManyWithoutPedidoInput = {
    id_elemento?: IntFieldUpdateOperationsInput | number
    id_empleado?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoPedidoFieldUpdateOperationsInput | $Enums.EstadoPedido
    estadoEliminado?: EnumEstadoEliminadoFieldUpdateOperationsInput | $Enums.EstadoEliminado
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}