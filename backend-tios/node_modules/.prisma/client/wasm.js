
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PuntoScalarFieldEnum = {
  id: 'id',
  lat: 'lat',
  lng: 'lng',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.UbicacionScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  id_punto: 'id_punto',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  codigo: 'codigo',
  descripcion: 'descripcion',
  tipo: 'tipo',
  tipo_unidad: 'tipo_unidad',
  venta: 'venta',
  tiempo: 'tiempo',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.PersonaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  ruc: 'ruc',
  mail: 'mail',
  telefono: 'telefono',
  proveedor: 'proveedor',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.InventarioScalarFieldEnum = {
  id: 'id',
  precio: 'precio',
  descuento: 'descuento',
  cantidad: 'cantidad',
  id_categoria: 'id_categoria',
  id_ubicacion: 'id_ubicacion',
  id_proveedor: 'id_proveedor',
  estadoEliminado: 'estadoEliminado',
  estado: 'estado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.PermisoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  estadoEliminado: 'estadoEliminado',
  categoria: 'categoria',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.PosicionScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.EmpleadoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  cedula: 'cedula',
  mail: 'mail',
  telefono: 'telefono',
  sueldo: 'sueldo',
  password: 'password',
  latActual: 'latActual',
  lngActual: 'lngActual',
  fecha_inicio: 'fecha_inicio',
  id_posicion: 'id_posicion',
  estado: 'estado',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.MensajeScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  titulo: 'titulo',
  fecha: 'fecha',
  tipo: 'tipo',
  estadoEliminado: 'estadoEliminado',
  estado: 'estado',
  id_remitente: 'id_remitente',
  id_destinario: 'id_destinario',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.ProformaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tiempo_esperado: 'tiempo_esperado',
  porcentaje_venta: 'porcentaje_venta',
  id_punto: 'id_punto',
  id_cliente: 'id_cliente',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.ProcesoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  id_proforma: 'id_proforma',
  id_obra: 'id_obra',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.Proceso_empleadosScalarFieldEnum = {
  id: 'id',
  horas: 'horas',
  sueldo: 'sueldo',
  id_proceso: 'id_proceso',
  id_empleado: 'id_empleado',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.Proceso_herramientasScalarFieldEnum = {
  id: 'id',
  horas: 'horas',
  descuento: 'descuento',
  precio: 'precio',
  id_proceso: 'id_proceso',
  id_herramienta: 'id_herramienta',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.Proceso_inventarioScalarFieldEnum = {
  id: 'id',
  cantidad: 'cantidad',
  descuento: 'descuento',
  precio: 'precio',
  id_proceso: 'id_proceso',
  id_elemento: 'id_elemento',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.ObraScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tiempo_esperado: 'tiempo_esperado',
  porcentaje_venta: 'porcentaje_venta',
  id_punto: 'id_punto',
  id_cliente: 'id_cliente',
  id_proforma: 'id_proforma',
  estado: 'estado',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.TransaccionScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  id_empleado: 'id_empleado',
  id_persona: 'id_persona',
  id_obra: 'id_obra',
  id_compra: 'id_compra',
  id_venta: 'id_venta',
  id_devolucion: 'id_devolucion',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.Transaccion_elementosScalarFieldEnum = {
  id: 'id',
  id_transaccion: 'id_transaccion',
  id_elementos: 'id_elementos',
  cantidad: 'cantidad',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.CompraScalarFieldEnum = {
  id: 'id',
  fechaCredito: 'fechaCredito',
  id_transaccion: 'id_transaccion',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.VentaScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  porcentaje: 'porcentaje',
  id_transaccion: 'id_transaccion',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.DevolucionScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  id_transaccion: 'id_transaccion',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.HorarioScalarFieldEnum = {
  id: 'id',
  hora_inicio: 'hora_inicio',
  hora_final: 'hora_final',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.DiaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  id_obra: 'id_obra',
  id_transaccion: 'id_transaccion',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.TareaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  estado: 'estado',
  id_asignador: 'id_asignador',
  id_asignado: 'id_asignado',
  id_ubicacion: 'id_ubicacion',
  id_obra: 'id_obra',
  fecha_final: 'fecha_final',
  fecha_inicio: 'fecha_inicio',
  estadoEliminado: 'estadoEliminado',
  createdBy: 'createdBy',
  updatedBy: 'updatedBy',
  deletedBy: 'deletedBy',
  createdDate: 'createdDate',
  updatedDate: 'updatedDate',
  deletedDate: 'deletedDate'
};

exports.Prisma.Pedido_elementosScalarFieldEnum = {
  id_pedido: 'id_pedido',
  id_elemento: 'id_elemento',
  id_empleado: 'id_empleado',
  estado: 'estado',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.Ubicacion_empleadoScalarFieldEnum = {
  id: 'id',
  id_punto: 'id_punto',
  id_empleado: 'id_empleado',
  estado: 'estado',
  fecha: 'fecha',
  estadoEliminado: 'estadoEliminado'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.EstadoEliminado = exports.$Enums.EstadoEliminado = {
  ACTIVO: 'ACTIVO',
  ELIMINADO: 'ELIMINADO'
};

exports.CategoriasInventario = exports.$Enums.CategoriasInventario = {
  Inventario: 'Inventario',
  Herramienta: 'Herramienta'
};

exports.EstadoHerramientas = exports.$Enums.EstadoHerramientas = {
  NUEVO: 'NUEVO',
  USADO: 'USADO',
  VIEJO: 'VIEJO',
  DAÑADO: 'DAÑADO'
};

exports.CategoriasPermiso = exports.$Enums.CategoriasPermiso = {
  Compra: 'Compra',
  Venta: 'Venta',
  Devolucion: 'Devolucion',
  Inventario: 'Inventario',
  Pedido: 'Pedido',
  Obra: 'Obra',
  Cliente: 'Cliente',
  Empleado: 'Empleado',
  Mensaje: 'Mensaje',
  Posicion: 'Posicion',
  Proveedor: 'Proveedor',
  Tarea: 'Tarea',
  Ubicacion: 'Ubicacion',
  Proforma: 'Proforma'
};

exports.EstadoTrabajador = exports.$Enums.EstadoTrabajador = {
  TRABAJANDO: 'TRABAJANDO',
  FUERA: 'FUERA',
  DESACTIVO: 'DESACTIVO'
};

exports.CategoriaMensajes = exports.$Enums.CategoriaMensajes = {
  Sistema: 'Sistema',
  Personal: 'Personal',
  Credito: 'Credito'
};

exports.EstadoMensaje = exports.$Enums.EstadoMensaje = {
  RECIBIDO: 'RECIBIDO',
  ABIERTO: 'ABIERTO'
};

exports.EstadoObra = exports.$Enums.EstadoObra = {
  ACTIVO: 'ACTIVO',
  CERRADO: 'CERRADO'
};

exports.DiasSemana = exports.$Enums.DiasSemana = {
  LUNES: 'LUNES',
  MARTES: 'MARTES',
  MIERCOLES: 'MIERCOLES',
  JUEVES: 'JUEVES',
  VIERNES: 'VIERNES',
  SABADO: 'SABADO',
  DOMINGO: 'DOMINGO'
};

exports.EstadoTarea = exports.$Enums.EstadoTarea = {
  ABIERTA: 'ABIERTA',
  PROCESO: 'PROCESO',
  CERRADA: 'CERRADA'
};

exports.EstadoPedido = exports.$Enums.EstadoPedido = {
  ABIERTO: 'ABIERTO',
  PROCESO: 'PROCESO',
  CERRADO: 'CERRADO'
};

exports.Prisma.ModelName = {
  Punto: 'Punto',
  Ubicacion: 'Ubicacion',
  Categoria: 'Categoria',
  Persona: 'Persona',
  Inventario: 'Inventario',
  Permiso: 'Permiso',
  Posicion: 'Posicion',
  Empleado: 'Empleado',
  Mensaje: 'Mensaje',
  Proforma: 'Proforma',
  Proceso: 'Proceso',
  proceso_empleados: 'proceso_empleados',
  proceso_herramientas: 'proceso_herramientas',
  proceso_inventario: 'proceso_inventario',
  Obra: 'Obra',
  Transaccion: 'Transaccion',
  transaccion_elementos: 'transaccion_elementos',
  Compra: 'Compra',
  Venta: 'Venta',
  Devolucion: 'Devolucion',
  Horario: 'Horario',
  Dia: 'Dia',
  Pedido: 'Pedido',
  Tarea: 'Tarea',
  pedido_elementos: 'pedido_elementos',
  ubicacion_empleado: 'ubicacion_empleado'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
